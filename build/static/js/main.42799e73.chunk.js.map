{"version":3,"sources":["utils/errorUtils.js","api/apiClient.js","components/Register.jsx","pages/RegisterNext.jsx","contexts/AuthContext.js","components/logout.jsx","components/login.jsx","components/Sidebar.jsx","utils/dateUtils.js","components/TodoList.jsx","components/PromptInput.jsx","components/PromptBar.jsx","components/ProfileMenu.jsx","api/mcp.js","components/RecommendationContext.jsx","contexts/SavedItemsContext.js","components/AiRecsPreviewCard.jsx","components/CareerRoadmapDetail.jsx","components/SavedJobDetail.jsx","components/RecommendationReason.jsx","components/maincontent.jsx","components/aijob.jsx","components/navercallback.jsx","components/ResumeSelect.jsx","components/AiJobRecommendation.jsx","components/RoadmapCategory.jsx","components/RoadmapList.jsx","components/CareerPlanFlow.jsx","components/GapDetail.jsx","components/TrendDetail.jsx","components/ChatSessionsList.jsx","components/ChatPage.jsx","components/CareerRoadmapMain.jsx","components/JobCardFiltered.jsx","components/JobCardPreview.jsx","components/SavedJobs.jsx","components/SavedRoadMaps.jsx","components/SavedPage.jsx","components/MyProfile.jsx","utils/stringUtils.js","App.js","index.js"],"names":["API_ERROR_TYPES","classifyApiError","error","response","type","message","originalError","status","data","detail","getUserFriendlyMessage","classifiedError","logError","_error$response","_error$response2","context","arguments","length","undefined","timestamp","Date","toISOString","stack","apiClient","axios","create","baseURL","process","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","concat","Promise","reject","removeItem","window","location","href","userMessage","errorType","Register","navigate","useNavigate","formData","setFormData","useState","email","password","confirm_password","nickname","name","phone_number","birth_date","gender","passwordMatch","setPasswordMatch","useEffect","script","document","createElement","src","async","onload","initNaver","head","appendChild","naver","LoginWithNaverId","clientId","callbackUrl","origin","isPopup","loginButton","color","height","init","listener","naverToken","URLSearchParams","hash","replace","get","post","access_token","setItem","alert","_unused","addEventListener","removeEventListener","handleChange","e","value","target","digits","slice","d","prev","_objectSpread","_jsx","Bg","children","_jsxs","MainBox","Header","FormContainer","onSubmit","preventDefault","err","test","payload","append","tokenRes","userRes","id","_err$response","_err$response2","_err$response2$data","console","InputGroup","Icon","FaUser","Input","placeholder","onChange","required","FaLock","PwInfo","$match","FaIdBadge","FaVenusMars","FaRegCalendarAlt","maxLength","pattern","FaMobileAlt","SubmitBtn","Divider","NaverArea","styled","div","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","form","_templateObject4","_templateObject5","_templateObject6","input","_templateObject7","button","_templateObject8","_templateObject9","_ref","hr","_templateObject0","_templateObject1","DEGREE_OPTIONS","label","DEGREE_MAP","고등학교","대학교2","대학교4","대학원","EDU_STATUS_OPTIONS","map","v","EXP_MAIN","EXP_SUB_ACTIVITY","SKILL_LEVELS","RegisterNext","resume","setResume","degree","university","major","gpa","education_status","career_type","career_years","language_score","experiences","setExperiences","subType","period","description","award","certificates","setCertificates","date","jobNamesAll","setJobNamesAll","certListAll","setCertListAll","skillsAll","setSkillsAll","selectedJobs","setSelectedJobs","selectedSkills","setSelectedSkills","jobOpen","setJobOpen","skillSearchTerm","setSkillSearchTerm","skillSearchResults","setSkillSearchResults","skillSearchOpen","setSkillSearchOpen","activeSearchCategory","setActiveSearchCategory","showAutoComplete","setShowAutoComplete","jobs","certs","skills","all","_v$name","filter","Boolean","_v$name2","p","isHighSchoolGraduate","handleExpChange","i","k","idx","toggleJob","includes","j","groupedSkills","useMemo","reduce","acc","skill","category","push","autoCompleteSkills","trim","toLowerCase","filteredSkills","handleSkillSelect","some","s","removeSkill","level","Number","desired_job","working_year","String","scores_str","split","part","key","parseLanguageScores","skill_name","proficiency","c","certificate_name","acquired_date","experience","_ref2","put","log","triggerSimilarityCalculation","_err$response3","_err$response3$data","errorMessage","details","Array","isArray","errorFields","loc","msg","join","autoComplete","Section","SectionTitle","FlexRow","Label","Select","o","disabled","style","width","marginLeft","from","_","y","inputMode","n","ExpRow","handleCertType","list","handleCertValue","handleCertDate","RemoveBtn","onClick","removeCert","AddBtn","exp","ExpCard","t","marginTop","TextArea","removeExperience","DropdownCard","DropdownHeader","DropdownIcon","open","FaChevronDown","DropdownBody","job","DropdownItem","selected","checked","TagWrap","Tag","SkillCard","SkillCategoryTabs","Object","keys","SkillCategoryTab","active","handleSkillCategoryChange","SkillSearchContainer","SkillSearchWrapper","SearchIcon","FaSearch","SkillSearchInput","onKeyPress","onFocus","DetailViewButton","AutoCompleteDropdown","AutoCompleteItem","className","SelectedSkillsContainer","SelectedSkillsTitle","SkillWithLevel","SkillTag","SkillLevelSelect","setSkillLevel","lvl","SkillSearchPopup","SkillSearchPopupContent","SkillSearchPopupHeader","CloseButton","SkillSearchPopupBody","SkillSearchPopupItem","NoResultsMessage","press","keyframes","baseBtn","css","section","h3","select","textarea","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","span","_templateObject17","_ref3","_templateObject18","_templateObject19","_ref4","_ref5","_ref6","_templateObject20","_templateObject21","_templateObject22","_templateObject23","_templateObject24","_templateObject25","_ref7","_ref8","_ref9","_ref0","_templateObject26","_templateObject27","_templateObject28","_templateObject29","_templateObject30","_templateObject31","_templateObject32","_templateObject33","_templateObject34","_templateObject35","_templateObject36","_templateObject37","_templateObject38","_ref1","_templateObject39","h4","_templateObject40","_templateObject41","_templateObject42","_templateObject43","_templateObject44","_templateObject45","_ref10","_ref11","_ref12","_ref13","_templateObject46","_templateObject47","_templateObject48","_templateObject49","_templateObject50","_templateObject51","_ref14","_ref15","AuthContext","createContext","useAuth","useContext","Error","AuthProvider","user","setUser","loading","setLoading","isAuthenticated","setIsAuthenticated","checkAuthStatus","login","credentials","userData","success","_error$response$data","logout","register","_error$response2$data","Provider","LogoutPage","userId","performLogout","Container","LogoutMessage","Login","username","result","SignupText","SnsLoginArea","SNSButton","Sidebar","collapsed","setCollapsed","darkMode","careerOpen","setCareerOpen","Wrapper","$darkMode","TopBar","Logo","LogoText","NavSection","NavItem","FaHome","NavText","FaRocket","FaBullseye","ArrowIcon","IoIosArrowDown","sub","SubItem","setTimeout","gapSection","getElementById","scrollIntoView","behavior","Dot","FaClipboardList","FaHeart","FaComments","FaHistory","_Fragment","UserInfo","UserAvatar","charAt","toUpperCase","UserDetails","UserName","UserEmail","FaSignOutAlt","Footer","CollapseBtn","FaBars","aside","_theme$colors","theme","colors","textSecondary","toKey","daysInMonth","m","getDate","prevDate","setDate","TodoList","React","memo","onPage","now","initialDate","setSel","year","setYear","month","setMonth","scheduleData","setScheduleData","setError","tasks","setTasks","JSON","parse","setInput","useCallback","obj","stringify","jobInput","setJobInput","daysInput","setDaysInput","isGuest","showForm","setShowForm","modalTask","setModalTask","selectedDaySchedule","schedule","find","day","todays","done","completed","daysArr","Math","round","daySchedule","dayTasks","every","arr","pad","padStart","first","getDay","handleGenerate","encodeURIComponent","userSchedule","Wrap","Top","Cal","Nav","Grid7","Th","_daySchedule$tasks","hasTasks","allCompleted","task","Td","has","stopPropagation","ErrorMessage","RetryButton","_daySchedule$tasks2","InputForm","InputRow","Inp","min","max","maxWidth","Add","textAlign","margin","fontSize","_daySchedule$tasks3","Todo","ScheduleHeader","JobTitle","job_title","goals","fontWeight","notes","List","$preview","Li","$type","display","alignItems","cursor","updatedSchedule","dayIndex","findIndex","toggle","marginRight","flex","title","Empty","ModalOverlay","ModalCard","ModalTitle","ModalDesc","ModalMeta","duration","related_roadmap","related_job","ModalCloseBtn","percent","h2","PromptInput","userQuery","setUserQuery","handleSubmit","isComposing","setIsComposing","onKeyDown","onCompositionStart","onCompositionEnd","PromptBar","activePage","trimmed","Prompt","PromptText","PromptButton","ProfileMenu","toggleTheme","setSelectedPage","setOpen","ref","useRef","isLoggedIn","handleClickOutside","current","contains","ProfileIcon","FaUserCircle","Dropdown","handleLogout","FaSun","FaMoon","LoggedOutButtons","AuthLink","BASE_URL","getMyChatSessions","res","fetch","ok","json","createChatSession","method","body","warn","ids","sendChatMessage","sessionId","session_id","RecommendationContext","RecommendationProvider","recommendations","setRecommendations","currentPage","setCurrentPage","totalPages","setTotalPages","totalJobs","setTotalJobs","isLoading","setIsLoading","isFirstPage","setIsFirstPage","firstPageData","setFirstPageData","firstPageLoaded","setFirstPageLoaded","fetchFirstPageRecommendations","_data$recommended_job","recommended_jobs","fetchTotalPages","_data$pagination","_data$pagination2","params","page","jobs_per_page","pagination","total_jobs","remainingJobs","remainingPages","ceil","changePage","newPage","apiPage","fetchPaginatedRecommendations","SavedItemsContext","useSavedItems","SavedItemsProvider","savedJobs","setSavedJobs","savedRoadmaps","setSavedRoadmaps","fetchSavedJobs","fetchSavedRoadmaps","saveJob","jobData","removeJob","delete","jobId","saveRoadmap","roadmapData","_error$response3","_error$response3$data","removeRoadmap","roadmapId","roadmap","_error$response4","_error$response4$data","isJobSaved","isRoadmapSaved","ul","li","_ref16","$disabled","_ref17","_ref18","_ref19","_ref20","_ref21","$active","_ref22","_ref23","_ref24","_ref25","AiRecsPreviewCard","formatDate","dateString","toLocaleDateString","InfoItem","icon","InfoItemWrapper","InfoLabel","InfoValue","CareerRoadmapDetail","_location$state2","onBack","useLocation","setRoadmap","fetchRoadmapById","getRoadmapDetails","PageWrapper","backButtonText","state","OverlayContainer","Card","BackBtn","SectionHeader","LocalBack","handleBackClick","_location$state","goTo","initialTab","FaArrowLeft","SubTitle","FaBuilding","company","Title","InfoGrid","FaCheckCircle","FaCalendarAlt","deadline","start_date","end_date","FaLaptop","onoff","FaClock","participation_time","FaBookOpen","program_course","SkillsSection","role","SkillList","skill_description","index","SavedJobDetail","_job$posting_date","_job$deadline","setJob","fetchJobDetail","PageWrap","similarity","SimilarityBadge","$score","toFixed","Sub","company_name","address","main_tasks","qualifications","tech_stack","employment_type","applicant_type","posting_date","h1","RecommendationReason","onClose","explanation","setExplanation","_response$data","reasonText","explanations","fetchExplanation","ModalHeader","CloseBtn","ContentArea","LoadingText","ExplanationText","MainContent","roadmapDetailId","setRoadmapDetailId","jobDetailId","setJobDetailId","selectedJob","setSelectedJob","selectedFieldType","setSelectedFieldType","selectedReasonJob","setSelectedReasonJob","chatHistory","setChatHistory","crypto","randomUUID","Main","HeaderWrapper","ProfileMenuWrapper","Scrollable","Outlet","DetailOverlay","pathname","pop","text","sender","fetchMcpResponse","assistantMsg","handleCloseReasonModal","fadeIn","main","$bg","_ref26","_ref27","_ref28","_templateObject52","_templateObject53","_ref29","_templateObject54","_templateObject55","_ref30","$isToday","_ref31","_ref32","_ref33","_templateObject56","_templateObject57","_templateObject58","_ref34","_templateObject59","_templateObject60","_ref35","_templateObject61","_templateObject62","_ref36","_templateObject63","_templateObject64","_templateObject65","_templateObject66","_templateObject67","_templateObject68","_templateObject69","_ref37","_templateObject70","_templateObject71","_templateObject72","_templateObject73","_ref38","_templateObject74","_templateObject75","_templateObject76","_templateObject77","_templateObject78","_templateObject79","_ref39","$completed","_ref40","_templateObject80","_templateObject81","_templateObject82","_templateObject83","_templateObject84","_templateObject85","_templateObject86","Aijob","setDarkMode","setUserId","setToken","storedToken","storedUserId","NaverCallback","accessToken","ResumeSelect","fileInputRef","Button","handleFileUploadClick","click","$primary","FaUpload","HiddenInput","accept","file","files","FormData","_err$response$data","goToDirectInput","FaKeyboard","AiJobRecommendation","examplePrompts","view","setView","aiMessage","setAiMessage","setErrorMessage","handleGetRecommendation","fetchAiJobRecommendations","handleBackToExamples","RecommendationCard","IconWrapper","renderContent","Reason","JobList","JobCard","Company","MatchScore","match_score","LikeIcon","ExampleBox","ex","ExampleItem","CheckIcon","FaRegCircle","RoadmapCategory","onSelectCategory","CategoryGrid","cat","CategoryCard","RoadmapList","onSelectRoadmap","roadmaps","setRoadmaps","savedRoadmapIds","setSavedRoadmapIds","Set","savedRes","item","roadmaps_id","filtered","r","getData","BackButton","isSaved","CardContent","Status","$status","SaveButton","user_id","parseInt","add","handleSaveRoadmap","FaBookmark","CareerPlanFlow","selectedCategory","setSelectedCategory","selectedRoadmapId","setSelectedRoadmapId","handleSelectCategory","handleSelectRoadmap","handleBack","GapDetail","TrendDetail","_fieldOptions$find","_chartData$","jobNames","setJobNames","selectedField","setSelectedField","selectedWeek","setSelectedWeek","visualizationType","setVisualizationType","skillData","setSkillData","weeklyStats","setWeeklyStats","trendData","setTrendData","showAdvanced","setShowAdvanced","fieldOptions","fetchJobNames","job_name","field","field_type","week","count","fetchSkillData","wordCloudData","frequency","chartData","RefreshButton","reload","FaSyncAlt","ControlPanel","ControlSection","ControlLabel","FaFilter","FaChartLine","AdvancedToggle","transform","AdvancedPanel","FaInfoCircle","VisualizationToggle","ToggleButton","FaCloud","FaChartBar","LoadingContainer","LoadingSpinner","ErrorContainer","ErrorIcon","ErrorNote","VisualizationContainer","WordCloudContainer","ChartTitle","WordCloudWrapper","WordCloud","words","options","fontSizes","rotations","rotationAngles","padding","deterministic","BarChartContainer","BarChart","BarItem","BarLabel","BarWrapper","Bar","$width","BarValue","TrendChartContainer","TrendInfo","TrendItem","TrendLabel","TrendValue","f","TrendChart","TrendBar","$height","TrendBarLabel","AnalysisSummary","SummaryTitle","SummaryGrid","SummaryCard","SummaryCardTitle","SummaryCardContent","SummaryItem","timeSince","seconds","floor","interval","SessionCard","session","onSelect","onDelete","simulatedDate","CardIcon","FaCommentDots","CardTitle","CardPreview","CardFooter","Timestamp","FaRegClock","DeleteButton","FaTrashAlt","ChatSessionsList","selectedSession","sessions","setSessions","setFilter","load","sort","a","b","handleDelete","confirm","deleteChatSession","kw","NewBtn","FaPlus","SearchInput","CardGrid","Msg","ChatPage","_chatHistory","onNewSession","loadingHistory","setLoadingHistory","sending","setSending","chatEndRef","isMounted","loadOrCreateSession","history","fetchChatHistory","_chatEndRef$current","Info","ChatWindow","Bubble","isUser","Message","content","Meta","toLocaleTimeString","TypingIndicator","PromptBarWrapper","h","ans","answer","handlePromptSubmit","Placeholder","typing","CareerRoadmapMain","_chartData$2","selectedTrendJob","setSelectedTrendJob","showInsightsPopup","setShowInsightsPopup","gapResult","setGapResult","topSkills","setTopSkills","gapLoading","setGapLoading","FaCog","FaUserTie","FaStar","FaBriefcase","trendJobNames","setTrendJobNames","gapJobNames","setGapJobNames","selectedGapJob","setSelectedGapJob","jobList","apiResponse","trend_data","processedData","processApiResponse","trend","jobCategory","gapData","gap_result","top_skills","fetchGapAnalysis","getTrendIcon","FaArrowUp","FaArrowDown","FaMinus","insights","totalSkills","topSkill","topCount","risingSkills","decliningSkills","stableSkills","SectionCard","HeaderSection","HeaderLeft","Subtitle","HeaderRight","InsightsButton","FaLightbulb","CompactControlPanel","ControlGroup","MainVisualizationArea","fontFamily","enableTooltip","size","NoDataText","CompactBarChart","BarRank","TrendIcon","CompactTrendGrid","TrendCard","TrendCardHeader","TrendCardTitle","TrendCardRank","TrendCardBody","TrendCardCount","TrendCardTrend","$trend","QuickStats","StatItem","StatIcon","StatValue","StatLabel","InsightsPopup","InsightsPopupContent","InsightsPopupHeader","InsightsPopupTitle","FaTimes","InsightsPopupBody","StatsGrid","StatCard","AnalysisSection","AnalysisTitle","AnalysisList","AnalysisItem","AnalysisIcon","AnalysisText","RecommendationSection","RecommendationTitle","RecommendationList","RecommendationItem","RecommendationIcon","RecommendationText","ScrollArrow","IoIosArrowUp","GapHeader","ShortDesc","GapControlRow","htmlFor","borderRadius","GapResultArea","Text","StyledGapResult","line","startsWith","GapHeadline","GapSkillList","RightOnly","MiniMapTitle","MiniMapGrid","MiniMapItem","tabIndex","MiniMapIcon","MiniMapLabel","props","h5","bounce","_templateObject87","JobCardFiltered","filters","setFilters","techStacks","setTechStacks","employmentTypes","setEmploymentTypes","applicantTypes","setApplicantTypes","selectedJobName","setSelectedJobName","setJobs","searchInput","setSearchInput","searchTerm","setSearchTerm","techStackRes","employmentRes","applicantRes","fetchFilters","limit","fetchJobs","filteredJobs","lower","FilterWrapper","marginBottom","JobCardPreview","onJobDetail","jobPosts","setJobPosts","sortedData","_a$similarity","_b$similarity","simA","job_posting","job_post_id","preference_id","gap","handleSearch","search","handleCardClick","Dates","HeartButton","jobPostId","newJob","handleToggleSave","saved","FaRegHeart","SavedJobs","PageContainer","Grid","DetailBtn","handleDetailClick","DeleteBtn","handleUnsave","SavedRoadmaps","onRoadmapDetail","items","Content","handleViewDetail","roadmapIdToDelete","SavedPage","activeTab","setActiveTab","TabHeader","TabButton","parseLanguageScoresToObject","MyProfile","defaultProfile","certificateText","experienceText","skillsText","profile","setProfile","edit","setEdit","textRefs","scores_obj","workingYear","careerType","entries","fetchResume","Field","keyName","FieldRow","as","el","rows","onInput","scrollHeight","autoResize","autoFocus","Value","IconBtn","toggleEdit","FaSave","FaEdit","FormArea","SaveAllBtn","certificateArr","l","trimLines","match","expArr","block","_title$match","rest","sharedBox","attrs","ChatPageWrapper","useParams","Navigate","to","Layout","sidebarCollapsed","setSidebarCollapsed","App","Router","Routes","Route","path","element","Logout","DashboardPage","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.42799e73.chunk.js","sourcesContent":["/**\n * 에러 처리 관련 유틸리티 함수들\n */\n\n// API 에러 타입 정의\nexport const API_ERROR_TYPES = {\n  NETWORK: 'NETWORK',\n  AUTHENTICATION: 'AUTHENTICATION',\n  AUTHORIZATION: 'AUTHORIZATION',\n  VALIDATION: 'VALIDATION',\n  NOT_FOUND: 'NOT_FOUND',\n  SERVER_ERROR: 'SERVER_ERROR',\n  UNKNOWN: 'UNKNOWN'\n};\n\n// API 에러를 분류하는 함수\nexport const classifyApiError = (error) => {\n  if (!error.response) {\n    return {\n      type: API_ERROR_TYPES.NETWORK,\n      message: '네트워크 연결을 확인해주세요.',\n      originalError: error\n    };\n  }\n\n  const { status, data } = error.response;\n  \n  switch (status) {\n    case 401:\n      return {\n        type: API_ERROR_TYPES.AUTHENTICATION,\n        message: '로그인이 필요합니다.',\n        originalError: error\n      };\n    case 403:\n      return {\n        type: API_ERROR_TYPES.AUTHORIZATION,\n        message: '접근 권한이 없습니다.',\n        originalError: error\n      };\n    case 400:\n      return {\n        type: API_ERROR_TYPES.VALIDATION,\n        message: data?.detail || '잘못된 요청입니다.',\n        originalError: error\n      };\n    case 404:\n      return {\n        type: API_ERROR_TYPES.NOT_FOUND,\n        message: '요청한 리소스를 찾을 수 없습니다.',\n        originalError: error\n      };\n    case 500:\n      return {\n        type: API_ERROR_TYPES.SERVER_ERROR,\n        message: '서버 오류가 발생했습니다. 잠시 후 다시 시도해주세요.',\n        originalError: error\n      };\n    default:\n      return {\n        type: API_ERROR_TYPES.UNKNOWN,\n        message: '알 수 없는 오류가 발생했습니다.',\n        originalError: error\n      };\n  }\n};\n\n// 사용자 친화적인 에러 메시지 생성\nexport const getUserFriendlyMessage = (error) => {\n  const classifiedError = classifyApiError(error);\n  \n  // 특정 에러에 대한 커스텀 메시지\n  const customMessages = {\n    [API_ERROR_TYPES.AUTHENTICATION]: '로그인이 필요합니다. 다시 로그인해주세요.',\n    [API_ERROR_TYPES.AUTHORIZATION]: '이 기능을 사용할 권한이 없습니다.',\n    [API_ERROR_TYPES.VALIDATION]: '입력 정보를 확인해주세요.',\n    [API_ERROR_TYPES.NETWORK]: '인터넷 연결을 확인하고 다시 시도해주세요.',\n    [API_ERROR_TYPES.SERVER_ERROR]: '일시적인 서버 오류입니다. 잠시 후 다시 시도해주세요.',\n    [API_ERROR_TYPES.NOT_FOUND]: '요청한 정보를 찾을 수 없습니다.',\n    [API_ERROR_TYPES.UNKNOWN]: '오류가 발생했습니다. 다시 시도해주세요.'\n  };\n  \n  return customMessages[classifiedError.type] || classifiedError.message;\n};\n\n// 에러 로깅 함수\nexport const logError = (error, context = '') => {\n  const timestamp = new Date().toISOString();\n  const errorInfo = {\n    timestamp,\n    context,\n    error: {\n      message: error.message,\n      stack: error.stack,\n      response: error.response?.data,\n      status: error.response?.status\n    }\n  };\n  \n  // 개발 환경에서는 콘솔에 출력\n  if (process.env.NODE_ENV === 'development') {\n    console.error('Error logged:', errorInfo);\n  }\n  \n  // 프로덕션에서는 에러 추적 서비스로 전송 (예: Sentry)\n  // if (process.env.NODE_ENV === 'production') {\n  //   // Sentry.captureException(error);\n  // }\n  \n  return errorInfo;\n};\n\n// 에러 처리 래퍼 함수\nexport const withErrorHandling = (asyncFunction) => {\n  return async (...args) => {\n    try {\n      return await asyncFunction(...args);\n    } catch (error) {\n      const userMessage = getUserFriendlyMessage(error);\n      logError(error, asyncFunction.name);\n      \n      // 에러를 다시 던지거나 처리\n      const enhancedError = new Error(userMessage);\n      enhancedError.originalError = error;\n      enhancedError.userMessage = userMessage;\n      enhancedError.handled = true;\n      throw enhancedError;\n    }\n  };\n};\n\n// 재시도 로직을 포함한 함수 래퍼\nexport const withRetry = (asyncFunction, maxRetries = 3, delay = 1000) => {\n  return async (...args) => {\n    let lastError;\n    \n    for (let attempt = 1; attempt <= maxRetries; attempt++) {\n      try {\n        return await asyncFunction(...args);\n      } catch (error) {\n        lastError = error;\n        \n        // 재시도하지 않을 에러 타입들\n        const nonRetryableErrors = [\n          API_ERROR_TYPES.AUTHENTICATION,\n          API_ERROR_TYPES.AUTHORIZATION,\n          API_ERROR_TYPES.VALIDATION\n        ];\n        \n        const classifiedError = classifyApiError(error);\n        if (nonRetryableErrors.includes(classifiedError.type)) {\n          throw error;\n        }\n        \n        if (attempt < maxRetries) {\n          // 지수 백오프: 1초, 2초, 4초...\n          const waitTime = delay * Math.pow(2, attempt - 1);\n          await new Promise(resolve => setTimeout(resolve, waitTime));\n        }\n      }\n    }\n    \n    throw lastError;\n  };\n};\n\n// 에러 바운더리를 위한 에러 상태 관리\nexport const createErrorState = () => {\n  return {\n    hasError: false,\n    error: null,\n    errorMessage: '',\n    resetError: function() {\n      this.hasError = false;\n      this.error = null;\n      this.errorMessage = '';\n    },\n    setError: function(error) {\n      this.hasError = true;\n      this.error = error;\n      this.errorMessage = getUserFriendlyMessage(error);\n    }\n  };\n};\n\n// 폼 유효성 검사 에러 처리\nexport const handleFormErrors = (errors) => {\n  if (!errors || typeof errors !== 'object') {\n    return '폼 입력에 오류가 있습니다.';\n  }\n  \n  const errorMessages = Object.values(errors).filter(Boolean);\n  return errorMessages.length > 0 ? errorMessages.join('\\n') : '';\n};\n\n// 네트워크 상태 확인\nexport const checkNetworkStatus = () => {\n  return navigator.onLine;\n};\n\n// 오프라인 상태 처리\nexport const handleOfflineStatus = () => {\n  if (!checkNetworkStatus()) {\n    return {\n      type: API_ERROR_TYPES.NETWORK,\n      message: '오프라인 상태입니다. 인터넷 연결을 확인해주세요.'\n    };\n  }\n  return null;\n}; ","import axios from \"axios\";\nimport { classifyApiError, getUserFriendlyMessage, logError } from '../utils/errorUtils';\n\nconst BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nconst apiClient = axios.create({\n  baseURL: BASE_URL,\n  timeout: 10000, // 10초 타임아웃\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// 요청 인터셉터 - 토큰 자동 추가\napiClient.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem(\"accessToken\");\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    logError(error, 'Request Interceptor');\n    return Promise.reject(error);\n  }\n);\n\n// 응답 인터셉터 - 에러 처리\napiClient.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    // 에러 분류 및 로깅\n    const classifiedError = classifyApiError(error);\n    logError(error, `Response Interceptor - ${classifiedError.type}`);\n    \n    // 401 에러 시 토큰 제거 및 로그인 페이지로 리다이렉트\n    if (error.response?.status === 401) {\n      localStorage.removeItem(\"accessToken\");\n      localStorage.removeItem(\"userId\");\n      window.location.href = '/login';\n    }\n    \n    // 사용자 친화적인 에러 메시지 추가\n    error.userMessage = getUserFriendlyMessage(error);\n    error.errorType = classifiedError.type;\n    \n    return Promise.reject(error);\n  }\n);\n\nexport default apiClient; ","/* ────────────── src/pages/Register.jsx ────────────── */\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  FaUser,\n  FaLock,\n  FaMobileAlt,\n  FaRegCalendarAlt,\n  FaVenusMars,\n  FaIdBadge,\n} from \"react-icons/fa\";\nimport apiClient from \"../api/apiClient\";\n\nexport default function Register() {\n  const navigate = useNavigate();\n\n  /* ── 폼 상태 ─────────────────────────────── */\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n    confirm_password: \"\",\n    nickname: \"\",\n    name: \"\",\n    phone_number: \"\",\n    birth_date: \"\",\n    gender: \"\",\n  });\n\n  const [passwordMatch, setPasswordMatch] = useState(true);\n\n  /* ── 네이버 SDK 로드 ─────────────────────── */\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src =\n      \"https://static.nid.naver.com/js/naveridlogin_js_sdk_2.0.2.js\";\n    script.async = true;\n    script.onload = initNaver;\n    document.head.appendChild(script);\n  }, []);\n\n  const initNaver = () => {\n    if (!window.naver) return;\n    const naverLogin = new window.naver.LoginWithNaverId({\n      clientId: process.env.REACT_APP_NAVER_CLIENT_ID,\n      callbackUrl: `${window.location.origin}/naver-callback`,\n      isPopup: true,\n      loginButton: { color: \"green\", type: 3, height: 48 },\n    });\n    naverLogin.init();\n  };\n\n  /* ── 네이버 콜백 처리 (기존 로직 유지) ───── */\n  useEffect(() => {\n    const listener = async () => {\n      const hash = new URLSearchParams(window.location.hash.replace(\"#\", \"\"));\n      const naverToken = hash.get(\"access_token\");\n      if (!naverToken) return;\n      try {\n        const { data } = await apiClient.post(\n          \"/auth/login/naver\",\n          { access_token: naverToken }\n        );\n        localStorage.setItem(\"accessToken\", data.access_token);\n        alert(\"네이버 로그인 완료!\");\n        navigate(\"/dashboard\");\n      } catch {\n        alert(\"네이버 로그인 실패\");\n      }\n    };\n    window.addEventListener(\"load\", listener);\n    return () => window.removeEventListener(\"load\", listener);\n  }, [navigate]);\n\n  /* ── 입력 핸들러 ─────────────────────────── */\n  const handleChange = (e) => {\n    let { name, value } = e.target;\n\n    /* 비밀번호 일치 검사 */\n    if (name === \"confirm_password\")\n      setPasswordMatch(value === formData.password);\n    if (name === \"password\")\n      setPasswordMatch(formData.confirm_password === value);\n\n    /* 전화번호 하이픈 자동 삽입 */\n    if (name === \"phone_number\") {\n      const digits = value.replace(/\\D/g, \"\");\n      if (digits.length <= 3) value = digits;\n      else if (digits.length <= 7)\n        value = `${digits.slice(0, 3)}-${digits.slice(3)}`;\n      else\n        value = `${digits.slice(0, 3)}-${digits.slice(3, 7)}-${digits.slice(\n          7,\n          11\n        )}`;\n    }\n\n    /* 생년월일 YYYY-MM-DD 포맷팅 */\n    if (name === \"birth_date\") {\n      const d = value.replace(/\\D/g, \"\");\n      if (d.length <= 4) value = d;\n      else if (d.length <= 6) value = `${d.slice(0, 4)}-${d.slice(4)}`;\n      else value = `${d.slice(0, 4)}-${d.slice(4, 6)}-${d.slice(6, 8)}`;\n    }\n\n    setFormData((prev) => ({ ...prev, [name]: value }));\n  };\n\n  /* ── 프론트 유효성 검사 ───────────────────── */\n  const validateForm = () => {\n    const phoneDigits = formData.phone_number.replace(/-/g, \"\");\n    if (phoneDigits.length !== 11)\n      return \"휴대폰 번호는 숫자 11자리여야 합니다\";\n    if (!/^\\d{4}-\\d{2}-\\d{2}$/.test(formData.birth_date))\n      return \"생년월일 형식이 올바르지 않습니다 (YYYY-MM-DD)\";\n    if (!passwordMatch) return \"비밀번호가 일치하지 않습니다\";\n    return null;\n  };\n\n  /* ── 제출: 회원가입 → 자동 로그인 → 이동 ─── */\n  /* ── 제출: 회원가입 → 자동 로그인 → 이동 ─── */\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const err = validateForm();\n    if (err) return alert(err);\n\n    try {\n      // 1) 회원가입\n      await apiClient.post(\"/users/signup/id\", {\n        ...formData,\n        phone_number: formData.phone_number.replace(/-/g, \"\"),\n      });\n\n      // 2) 바로 로그인 (토큰 발급)\n      const payload = new URLSearchParams();\n      payload.append(\"username\", formData.email);\n      payload.append(\"password\", formData.password);\n\n      const { data: tokenRes } = await apiClient.post(\n        \"/token\",\n        payload,\n        { headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" } }\n      );\n      \n      const token = tokenRes.access_token;\n      \n      // ✨ 3) 토큰을 사용하여 사용자 정보(ID 포함) 가져오기 (수정된 부분)\n      const { data: userRes } = await apiClient.get(\"/users/me\", {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n\n      // ✨ 4) 토큰과 userId 모두 저장 (수정된 부분)\n      localStorage.setItem(\"accessToken\", token);\n      localStorage.setItem(\"userId\", userRes.id);\n      localStorage.removeItem(\"chatSessionId\"); // 혹시 모를 채팅 세션 초기화\n\n      alert(\"회원가입 및 자동 로그인 완료!\");\n\n      // 5) 이력서 선택 페이지로 이동\n      navigate(\"/resumeselect\"); // Registernext 대신 이력서 선택 페이지로 이동\n    } catch (err) {\n      console.error(err.response?.data || err);\n      alert(\"회원가입 실패: \" + (err.response?.data?.detail || err.message));\n    }\n  };\n\n  /* ── JSX 렌더링 ───────────────────────────── */\n  return (\n    <Bg>\n      <MainBox>\n        <Header>\n          <h1>회원가입</h1>\n        </Header>\n\n        <FormContainer onSubmit={handleSubmit}>\n          <InputGroup>\n            <Icon>\n              <FaUser />\n            </Icon>\n            <Input\n              name=\"email\"\n              placeholder=\"아이디 또는 이메일\"\n              value={formData.email}\n              onChange={handleChange}\n              required\n            />\n          </InputGroup>\n\n          <InputGroup>\n            <Icon>\n              <FaLock />\n            </Icon>\n            <Input\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"비밀번호\"\n              value={formData.password}\n              onChange={handleChange}\n              required\n            />\n          </InputGroup>\n\n          <InputGroup>\n            <Icon>\n              <FaLock />\n            </Icon>\n            <Input\n              name=\"confirm_password\"\n              type=\"password\"\n              placeholder=\"비밀번호 확인\"\n              value={formData.confirm_password}\n              onChange={handleChange}\n              required\n            />\n          </InputGroup>\n\n          {formData.confirm_password && (\n            <PwInfo $match={passwordMatch}>\n              {passwordMatch\n                ? \"비밀번호가 일치합니다.\"\n                : \"비밀번호가 일치하지 않습니다.\"}\n            </PwInfo>\n          )}\n\n          <InputGroup>\n            <Icon>\n              <FaIdBadge />\n            </Icon>\n            <Input\n              name=\"name\"\n              placeholder=\"이름\"\n              value={formData.name}\n              onChange={handleChange}\n              required\n            />\n          </InputGroup>\n\n          <InputGroup>\n            <Icon>\n              <FaUser />\n            </Icon>\n            <Input\n              name=\"nickname\"\n              placeholder=\"닉네임\"\n              value={formData.nickname}\n              onChange={handleChange}\n              required\n            />\n          </InputGroup>\n\n          <InputGroup>\n            <Icon>\n              <FaVenusMars />\n            </Icon>\n            <Input\n              name=\"gender\"\n              placeholder=\"성별 입력 (예: 남자/여자)\"\n              value={formData.gender}\n              onChange={handleChange}\n              required\n            />\n          </InputGroup>\n\n          <InputGroup>\n            <Icon>\n              <FaRegCalendarAlt />\n            </Icon>\n            <Input\n              name=\"birth_date\"\n              placeholder=\"YYYY-MM-DD\"\n              value={formData.birth_date}\n              maxLength={10}\n              pattern=\"\\d{4}-\\d{2}-\\d{2}\"\n              onChange={handleChange}\n              required\n            />\n          </InputGroup>\n\n          <InputGroup>\n            <Icon>\n              <FaMobileAlt />\n            </Icon>\n            <Input\n              name=\"phone_number\"\n              placeholder=\"010-0000-0000\"\n              value={formData.phone_number}\n              onChange={handleChange}\n              required\n            />\n          </InputGroup>\n\n          <SubmitBtn type=\"submit\">회원가입</SubmitBtn>\n        </FormContainer>\n\n        <Divider />\n        <NaverArea>\n          <div id=\"naverIdLogin\" />\n        </NaverArea>\n      </MainBox>\n    </Bg>\n  );\n}\n\n/* ───────────────────────────────────────────\n * 🎨 styled-components (변경 없음)\n * ─────────────────────────────────────────── */\nconst Bg = styled.div`\n  min-height: 100vh;\n  background: #f4f4f4;\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  padding: 0.1rem 1rem 3rem;\n`;\nconst MainBox = styled.div`\n  background: #fff;\n  border-radius: 1.8rem;\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.1);\n  width: 100%;\n  max-width: 420px;\n  padding: 2.5rem 2rem;\n  color: #333;\n`;\nconst Header = styled.div`\n  text-align: center;\n  margin-bottom: 2rem;\n  h1 {\n    color: #ff9e00;\n    font-size: 2rem;\n    font-weight: 700;\n  }\n`;\nconst FormContainer = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\nconst InputGroup = styled.div`\n  display: flex;\n  align-items: center;\n  background: #f5f5f5;\n  border: 2px solid #ccc;\n  border-radius: 10px;\n  padding: 0.85rem 1rem;\n  margin-bottom: 1rem;\n  transition: border 0.2s ease;\n  &:focus-within {\n    border-color: #ffcc00;\n  }\n`;\nconst Icon = styled.div`\n  font-size: 1.2rem;\n  color: #777;\n  margin-right: 0.8rem;\n`;\nconst Input = styled.input`\n  flex: 1;\n  background: transparent;\n  border: none;\n  font-size: 1rem;\n  &::placeholder {\n    color: #aaa;\n  }\n  &:focus {\n    outline: none;\n  }\n`;\nconst SubmitBtn = styled.button`\n  width: 100%;\n  padding: 1rem;\n  margin-top: 1rem;\n  background: #ffc107;\n  border: none;\n  border-radius: 0.6rem;\n  font-size: 1.1rem;\n  font-weight: bold;\n  cursor: pointer;\n  &:hover {\n    background: #ffd54f;\n  }\n`;\nconst PwInfo = styled.div`\n  font-size: 0.9rem;\n  margin-bottom: 1rem;\n  color: ${({ $match }) => ($match ? \"#33b96f\" : \"#f26a6a\")};\n`;\nconst Divider = styled.hr`\n  margin: 2rem 0 1.2rem;\n  border: none;\n  border-top: 1px solid #ccc;\n`;\nconst NaverArea = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","/* ────────────── src/pages/RegisterNext.jsx ────────────── */\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport styled, { css, keyframes } from \"styled-components\";\nimport apiClient from '../api/apiClient';\nimport { FaChevronDown, FaSearch } from \"react-icons/fa\";\n\nconst DEGREE_OPTIONS = [ { value: \"\", label: \"선택\" }, { value: \"고등학교\", label: \"고등학교\" }, { value: \"대학교2\", label: \"대학교(2년제)\" }, { value: \"대학교4\", label: \"대학교(4년제)\" }, { value: \"대학원\", label: \"대학원\" }, ];\nconst DEGREE_MAP = { 고등학교:\"고졸\", 대학교2:\"학사\", 대학교4:\"학사\", 대학원:\"석사\" };\nconst EDU_STATUS_OPTIONS = { 고등학교: [{ value:\"졸업\", label:\"졸업\" }], 대학교2: [\"재학\",\"휴학\",\"졸업\"].map(v=>({value:v,label:v})), 대학교4: [\"재학\",\"휴학\",\"졸업\"].map(v=>({value:v,label:v})), 대학원:  [\"재학\",\"휴학\",\"졸업\"].map(v=>({value:v,label:v})), };\nconst EXP_MAIN = [\"인턴\",\"부트캠프\",\"프로젝트\",\"대외활동\"];\nconst EXP_SUB_ACTIVITY = [\"동아리\",\"학회\",\"공모전\"];\nconst SKILL_LEVELS = [\"입문자\",\"기초\",\"중급\",\"고급\",\"전문가\"];\n\nconst toIsoDate = d => (d ? new Date(d).toISOString().slice(0,10) : \"\");\n\nexport default function RegisterNext() {\n  const [resume, setResume] = useState({ degree:\"\", university:\"\", major:\"\", gpa:\"\", education_status:\"\", career_type:\"신입\", career_years:\"\", language_score:\"\" });\n  const [experiences,  setExperiences]  = useState([{ type:\"\", subType:\"\", name:\"\", period:\"\", description:\"\", award:\"\" }]);\n  const [certificates, setCertificates] = useState([{ type:\"\", value:\"\", date:\"\" }]);\n  const [jobNamesAll, setJobNamesAll] = useState([]);\n  const [certListAll, setCertListAll] = useState([]);\n  const [skillsAll,   setSkillsAll]   = useState([]);\n  const [selectedJobs,   setSelectedJobs]   = useState([]);\n  const [selectedSkills, setSelectedSkills] = useState([]);\n  const [jobOpen,  setJobOpen]  = useState(true);\n  \n  // 기술 스택 검색 관련 상태\n  const [skillSearchTerm, setSkillSearchTerm] = useState(\"\");\n  const [skillSearchResults, setSkillSearchResults] = useState([]);\n  const [skillSearchOpen, setSkillSearchOpen] = useState(false);\n  const [activeSearchCategory, setActiveSearchCategory] = useState(\"스킬\");\n  const [showAutoComplete, setShowAutoComplete] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const [jobs, certs, skills] = await Promise.all([\n          apiClient.get(`/job-role/job-names`),\n          apiClient.get(`/certificates/`),\n          apiClient.get(`/skills/`),\n        ]);\n        setJobNamesAll((jobs.data   || []).map(v=>v.name ?? v).filter(Boolean));\n        setCertListAll((certs.data  || []).map(v=>v.name ?? v).filter(Boolean));\n        setSkillsAll(skills.data || []);\n      } catch (err) { console.error(\"목록 로딩 실패:\", err.response?.status, err.response?.data); }\n    })();\n  }, []);\n\n  const handleChange = e => setResume(p=>({...p,[e.target.name]:e.target.value}));\n  const handleDegreeChange = e => setResume(p=>({...p,degree:e.target.value,education_status:\"\"}));\n  const isHighSchoolGraduate = resume.degree===\"고등학교\" && resume.education_status===\"졸업\";\n  const handleExpChange = (i,k,v) => setExperiences(p=>p.map((e,idx)=>idx===i?{...e,[k]:v}:e));\n  const addExperience = (e) => {\n    e.preventDefault(); // 폼 제출 방지\n    setExperiences(p=>[...p,{ type:\"\",subType:\"\",name:\"\",period:\"\",description:\"\",award:\"\" }]);\n  };\n  const removeExperience = (i, e) => {\n    e.preventDefault(); // 폼 제출 방지\n    setExperiences(p=>p.filter((_,idx)=>idx!==i));\n  };\n  const handleCertType  = (i,v)=>setCertificates(p=>p.map((c,idx)=>idx===i?{...c,type:v,value:\"\"}:c));\n  const handleCertValue = (i,v)=>setCertificates(p=>p.map((c,idx)=>idx===i?{...c,value:v}:c));\n  const handleCertDate  = (i,v)=>setCertificates(p=>p.map((c,idx)=>idx===i?{...c,date:toIsoDate(v)}:c));\n  const addCert = (e) => {\n    e.preventDefault(); // 폼 제출 방지\n    setCertificates(p=>[...p,{type:\"\",value:\"\",date:\"\"}]);\n  };\n  const removeCert = (i, e) => {\n    e.preventDefault(); // 폼 제출 방지\n    setCertificates(p=>p.filter((_,idx)=>idx!==i));\n  };\n  const toggleJob = name => setSelectedJobs(p=>p.includes(name)?p.filter(j=>j!==name):[...p,name]);\n\n  const groupedSkills = useMemo(() => {\n    return skillsAll.reduce((acc, skill) => {\n      const { category } = skill;\n      if (!acc[category]) acc[category] = [];\n      acc[category].push(skill);\n      return acc;\n    }, {});\n  }, [skillsAll]);\n\n  // 기술 스택 검색 필터링 (자동완성용)\n  const autoCompleteSkills = useMemo(() => {\n    if (!skillSearchTerm.trim()) return [];\n    \n    // 현재 활성화된 카테고리의 기술만 검색\n    const skillsToSearch = skillsAll.filter(skill => skill.category === activeSearchCategory);\n    \n    // 검색어 필터링\n    return skillsToSearch.filter(skill => \n      skill.name.toLowerCase().includes(skillSearchTerm.toLowerCase())\n    ).slice(0, 5); // 자동완성은 최대 5개만 표시\n  }, [skillsAll, skillSearchTerm, activeSearchCategory]);\n\n  // 기술 스택 검색 필터링 (팝업용)\n  const filteredSkills = useMemo(() => {\n    if (!skillSearchTerm.trim()) return [];\n    \n    // 현재 활성화된 카테고리의 기술만 검색\n    const skillsToSearch = skillsAll.filter(skill => skill.category === activeSearchCategory);\n    \n    // 검색어 필터링\n    return skillsToSearch.filter(skill => \n      skill.name.toLowerCase().includes(skillSearchTerm.toLowerCase())\n    );\n  }, [skillsAll, skillSearchTerm, activeSearchCategory]);\n\n  // 검색 결과 업데이트\n  useEffect(() => {\n    setSkillSearchResults(filteredSkills);\n  }, [filteredSkills]);\n\n\n\n  // 기술 스택 카테고리 변경 핸들러\n  const handleSkillCategoryChange = (category, e) => {\n    e.preventDefault(); // 폼 제출 방지\n    setActiveSearchCategory(category);\n    setSkillSearchTerm(\"\");\n    setSkillSearchOpen(false);\n    setShowAutoComplete(false);\n  };\n\n  // 기술 스택 검색 핸들러\n  const handleSkillSearch = (e) => {\n    const value = e.target.value;\n    setSkillSearchTerm(value);\n    setShowAutoComplete(value.length > 0);\n    setSkillSearchOpen(false);\n  };\n\n  // 엔터 키 핸들러\n  const handleSkillSearchKeyPress = (e) => {\n    if (e.key === 'Enter' && skillSearchTerm.trim()) {\n      e.preventDefault();\n      setSkillSearchOpen(true);\n      setShowAutoComplete(false);\n    }\n  };\n\n  // 기술 스택 선택 핸들러\n  const handleSkillSelect = (skill) => {\n    if (selectedSkills.some(s => s.name === skill.name)) {\n      removeSkill(skill.name);\n    } else {\n      setSelectedSkills(prev => [...prev, { name: skill.name, level: \"\" }]);\n    }\n    setSkillSearchTerm(\"\");\n    setSkillSearchOpen(false);\n  };\n\n  const removeSkill = name => setSelectedSkills(p=>p.filter(s=>s.name!==name));\n  const setSkillLevel = (name,lvl)=>setSelectedSkills(p=>p.map(s=>s.name===name?{...s,level:lvl}:s));\n\n  const triggerSimilarityCalculation = async (token) => {\n    try {\n      await apiClient.post(`/similarity/compute`, {}, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      console.log(\"✅ 유사도 계산이 성공적으로 요청되었습니다.\");\n    } catch (err) {\n      console.error(\"❌ 유사도 계산 요청 실패:\", err);\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem(\"accessToken\");\n    if(!token) return alert(\"❌ 토큰 없음: 로그인 필요\");\n\n    // 최종 학력 필수 입력 검증\n    if (!resume.degree || !resume.education_status) {\n      alert(\"목록에서 항목을 선택하세요\");\n      return;\n    }\n\n    if (!isHighSchoolGraduate && (!resume.university || !resume.major)) {\n      alert(\"목록에서 항목을 선택하세요\");\n      return;\n    }\n\n    const parseLanguageScores = (scores_str) => {\n      if (!scores_str) return null;\n      try {\n        return scores_str.split(',')\n          .map(part => part.trim().split(':'))\n          .reduce((acc, [key, value]) => {\n            if (key && value) {\n              acc[key.trim()] = value.trim();\n            }\n            return acc;\n          }, {});\n      } catch (e) {\n        console.error(\"어학 점수 파싱 오류:\", e);\n        return null;\n      }\n    };\n\n    // src/pages/RegisterNext.jsx 의 handleSubmit 함수 내부입니다.\n\n    const payload = {\n      university: isHighSchoolGraduate ? null : resume.university || null,\n      major: isHighSchoolGraduate ? null : resume.major || null,\n      gpa: isHighSchoolGraduate ? null : (resume.gpa ? Number(resume.gpa) : null),\n      education_status: resume.education_status || null,\n      degree: resume.degree ? DEGREE_MAP[resume.degree] : null,\n\n      // ✨ 1. desired_job: .join(\",\")을 제거하여 배열 그대로 전송\n      desired_job: selectedJobs,\n\n      // ✨ 2. working_year: 숫자(Number)가 아닌 문자열(String)로 전송\n      working_year: resume.career_type === \"경력\" ? String(resume.career_years || \"\") : \"신입\",\n      \n      language_score: parseLanguageScores(resume.language_score),\n      skills: selectedSkills.map(s => ({ skill_name: s.name, proficiency: s.level || \"입문자\" })),\n      certificates: certificates.filter(c => c.type && c.value && c.date).map(c => ({ certificate_name: c.value, acquired_date: c.date })),\n      experience: experiences.filter(e => e.type && e.name).map(({ type, subType, name, period, description, award }) => ({\n        type: subType ? `${type}-${subType}` : type, name, period,\n        description: subType === \"공모전\" && award ? `${description}\\n수상: ${award}` : description\n      }))\n    };\n\n    // src/pages/RegisterNext.jsx의 handleSubmit 함수 내부\n\n    try {\n      await apiClient.put(`/users/me/resume`, payload, {\n        headers:{ Authorization:`Bearer ${token}` }\n      });\n      \n      alert(\"✅ 프로필이 저장되었습니다!\");\n      \n      await triggerSimilarityCalculation(token);\n      \n      // ✨ navigate(\"/aijob\") 대신 아래 코드로 변경합니다.\n      window.location.href = \"/aijob\";\n      \n    } catch(err){\n      console.error(err);\n      \n      let errorMessage = \"저장 실패\";\n      if (err.response?.data?.detail) {\n        const details = err.response.data.detail;\n        if (Array.isArray(details)) {\n          const errorFields = details.map(d => `${d.loc[1]}: ${d.msg}`).join('\\n');\n          errorMessage += `\\n\\n[오류 원인]\\n${errorFields}`;\n        } else {\n          errorMessage += `: ${details}`;\n        }\n      } else {\n        errorMessage += `: ${err.message}`;\n      }\n      alert(errorMessage);\n    }\n  };\n\n  return (\n    <Bg>\n      <MainBox>\n        <Header><h1>내 프로필</h1></Header>\n        <Divider/>\n        <FormContainer onSubmit={handleSubmit} autoComplete=\"off\">\n          <Section>\n            <SectionTitle>최종 학력</SectionTitle>\n            <FlexRow>\n              <Label>학력</Label>\n              <Select value={resume.degree} onChange={handleDegreeChange}>\n                {DEGREE_OPTIONS.map(o=>(<option key={o.value} value={o.value}>{o.label}</option>))}\n              </Select>\n              <Select name=\"education_status\" value={resume.education_status} onChange={handleChange} disabled={!resume.degree} style={{width:\"45%\",marginLeft:\"1rem\"}}>\n                <option value=\"\">학적 상태</option>\n                {(EDU_STATUS_OPTIONS[resume.degree]||[]).map(o=>(<option key={o.value} value={o.value}>{o.label}</option>))}\n              </Select>\n            </FlexRow>\n            <FlexRow>\n              <Label>구분</Label>\n              <Select name=\"career_type\" value={resume.career_type} onChange={handleChange} style={{width:\"140px\"}}>\n                <option value=\"신입\">신입</option><option value=\"경력\">경력</option>\n              </Select>\n              <Select name=\"career_years\" value={resume.career_years} onChange={handleChange} disabled={resume.career_type!==\"경력\"} style={{width:\"45%\",marginLeft:\"1rem\"}}>\n                <option value=\"\">년차 선택</option>\n                {Array.from({length:30},(_,i)=>i+1).map(y=>(<option key={y} value={y}>{y}년차</option>))}\n              </Select>\n            </FlexRow>\n            <FlexRow><Label>학교명</Label><Input name=\"university\" value={resume.university} onChange={handleChange} disabled={isHighSchoolGraduate}/></FlexRow>\n            <FlexRow><Label>전공</Label><Input name=\"major\" value={resume.major} onChange={handleChange} disabled={isHighSchoolGraduate}/></FlexRow>\n            <FlexRow><Label>학점</Label><Input name=\"gpa\" value={resume.gpa} onChange={handleChange} disabled={isHighSchoolGraduate} inputMode=\"decimal\" placeholder=\"3.5\"/></FlexRow>\n          </Section>\n\n          <Section>\n            <SectionTitle>자격증 / 어학</SectionTitle>\n            <datalist id=\"cert-datalist\">{certListAll.map(n=><option key={n} value={n}/>)}</datalist>\n            {certificates.map((c,idx)=>(\n              <ExpRow key={idx}>\n                <Select value={c.type} onChange={e=>handleCertType(idx,e.target.value)} style={{width:\"30%\"}}><option value=\"\">유형</option><option value=\"자격증\">자격증</option><option value=\"어학점수\">어학점수</option></Select>\n                <Input list=\"cert-datalist\" placeholder={c.type===\"어학점수\"?\"TOEIC 900\":\"정보처리기사 1급\"} value={c.value} onChange={e=>handleCertValue(idx,e.target.value)}/>\n                <Input type=\"date\" value={c.date||\"\"} onChange={e=>handleCertDate(idx,e.target.value)} style={{width:\"35%\"}}/>\n                <RemoveBtn type=\"button\" onClick={(e)=>removeCert(idx, e)}>삭제</RemoveBtn>\n              </ExpRow>\n            ))}\n            <AddBtn type=\"button\" onClick={addCert}>+ 항목 추가</AddBtn>\n          </Section>\n\n          <Section>\n            <SectionTitle>경험</SectionTitle>\n            {experiences.map((exp,idx)=>(\n              <ExpCard key={idx}>\n                <Select value={exp.type} onChange={e=>handleExpChange(idx,\"type\",e.target.value)}>\n                  <option value=\"\">경험 종류 선택</option>\n                  {EXP_MAIN.map(t=><option key={t} value={t}>{t}</option>)}\n                </Select>\n                {exp.type===\"대외활동\" && (<Select value={exp.subType} onChange={e=>handleExpChange(idx,\"subType\",e.target.value)} style={{marginTop:\"0.5rem\"}}><option value=\"\">세부 유형 선택</option>{EXP_SUB_ACTIVITY.map(s=><option key={s} value={s}>{s}</option>)}</Select>)}\n                <Input placeholder={exp.type===\"인턴\"?\"기업명\":exp.type===\"부트캠프\"?\"과정명\":exp.type===\"프로젝트\"?\"프로젝트명\":exp.subType===\"동아리\"?\"동아리명\":exp.subType===\"학회\"?\"학회명\":exp.subType===\"공모전\"?\"공모전명\":\"이름\"} value={exp.name} onChange={e=>handleExpChange(idx,\"name\",e.target.value)} style={{marginTop:\"0.5rem\"}}/>\n                <Input placeholder=\"기간: 2023-01 ~ 2023-06\" value={exp.period} onChange={e=>handleExpChange(idx,\"period\",e.target.value)} style={{marginTop:\"0.5rem\"}}/>\n                <TextArea placeholder={exp.type===\"인턴\"?\"주요 업무\":exp.type===\"부트캠프\"?\"과정 내용\":exp.type===\"프로젝트\"?\"프로젝트 설명\":exp.subType===\"동아리\"||exp.subType===\"학회\"?\"활동 내용\":exp.subType===\"공모전\"?\"담당 업무\":\"설명\"} value={exp.description} onChange={e=>handleExpChange(idx,\"description\",e.target.value)} style={{marginTop:\"0.5rem\"}}/>\n                {exp.subType===\"공모전\" && (<Input placeholder=\"수상 이력 (예: 최우수상)\" value={exp.award} onChange={e=>handleExpChange(idx,\"award\",e.target.value)} style={{marginTop:\"0.5rem\"}}/>)}\n                {experiences.length>1 && <RemoveBtn type=\"button\" onClick={()=>removeExperience(idx)}>경험 삭제</RemoveBtn>}\n              </ExpCard>\n            ))}\n            <AddBtn type=\"button\" onClick={addExperience}>+ 경험 추가</AddBtn>\n          </Section>\n\n          <Section>\n            <SectionTitle>관심 직무</SectionTitle>\n            <DropdownCard>\n              <DropdownHeader onClick={()=>setJobOpen(o=>!o)}>\n                <span>{selectedJobs.length ? `${selectedJobs.length}개 선택됨` : \"관심 직무 선택\"}</span>\n                <DropdownIcon open={jobOpen}><FaChevronDown/></DropdownIcon>\n              </DropdownHeader>\n              {jobOpen && (<DropdownBody>{jobNamesAll.map(job=>(<DropdownItem key={job} selected={selectedJobs.includes(job)}><input type=\"checkbox\" checked={selectedJobs.includes(job)} onChange={()=>toggleJob(job)}/><span>{job}</span></DropdownItem>))}</DropdownBody>)}\n              {selectedJobs.length>0 && (<TagWrap>{selectedJobs.map(job=><Tag key={job} onClick={()=>toggleJob(job)}>{job} ×</Tag>)}</TagWrap>)}\n            </DropdownCard>\n          </Section>\n          \n          <Section>\n            <SectionTitle>기술 스택</SectionTitle>\n            <SkillCard>\n              {/* 카테고리 탭 */}\n              <SkillCategoryTabs>\n                {Object.keys(groupedSkills).map(category => (\n                  <SkillCategoryTab\n                    key={category}\n                    type=\"button\"\n                    active={activeSearchCategory === category}\n                    onClick={(e) => handleSkillCategoryChange(category, e)}\n                  >\n                    {category}\n                  </SkillCategoryTab>\n                ))}\n              </SkillCategoryTabs>\n\n              {/* 검색 입력 영역 */}\n              <SkillSearchContainer>\n                <SkillSearchWrapper>\n                  <SearchIcon>\n                    <FaSearch />\n                  </SearchIcon>\n                  <SkillSearchInput\n                    type=\"text\"\n                    placeholder={`${activeSearchCategory} 검색...`}\n                    value={skillSearchTerm}\n                    onChange={handleSkillSearch}\n                    onKeyPress={handleSkillSearchKeyPress}\n                    onFocus={() => setShowAutoComplete(skillSearchTerm.length > 0)}\n                  />\n                </SkillSearchWrapper>\n                \n                {/* 상세 보기 버튼 */}\n                <DetailViewButton\n                  type=\"button\"\n                  onClick={() => setSkillSearchOpen(true)}\n                  disabled={!skillSearchTerm.trim()}\n                >\n                  상세 보기\n                </DetailViewButton>\n              </SkillSearchContainer>\n\n              {/* 자동완성 드롭다운 */}\n              {showAutoComplete && autoCompleteSkills.length > 0 && (\n                <AutoCompleteDropdown>\n                  {autoCompleteSkills.map(skill => (\n                    <AutoCompleteItem\n                      key={skill.id}\n                      onClick={() => handleSkillSelect(skill)}\n                      selected={selectedSkills.some(s => s.name === skill.name)}\n                    >\n                      <span>{skill.name}</span>\n                      {selectedSkills.some(s => s.name === skill.name) && (\n                        <span className=\"selected\">✓</span>\n                      )}\n                    </AutoCompleteItem>\n                  ))}\n                </AutoCompleteDropdown>\n              )}\n\n              {/* 선택된 기술 스택 표시 */}\n              {selectedSkills.length > 0 && (\n                <SelectedSkillsContainer>\n                  <SelectedSkillsTitle>선택된 기술 스택</SelectedSkillsTitle>\n                  {selectedSkills.map(skill => (\n                    <SkillWithLevel key={skill.name}>\n                      <SkillTag onClick={() => removeSkill(skill.name)}>\n                        {skill.name} ×\n                      </SkillTag>\n                      <SkillLevelSelect\n                        value={skill.level}\n                        onChange={(e) => setSkillLevel(skill.name, e.target.value)}\n                      >\n                        <option value=\"\">숙련도 선택</option>\n                        {SKILL_LEVELS.map(level => (\n                          <option key={level} value={level}>{level}</option>\n                        ))}\n                      </SkillLevelSelect>\n                    </SkillWithLevel>\n                  ))}\n                </SelectedSkillsContainer>\n              )}\n            </SkillCard>\n\n            {/* 검색 결과 팝업 */}\n            {skillSearchOpen && (\n              <SkillSearchPopup>\n                <SkillSearchPopupContent>\n                  <SkillSearchPopupHeader>\n                    <h3>{activeSearchCategory} 검색 결과</h3>\n                    <CloseButton onClick={() => setSkillSearchOpen(false)}>×</CloseButton>\n                  </SkillSearchPopupHeader>\n                  \n                  {skillSearchResults.length > 0 ? (\n                    <SkillSearchPopupBody>\n                      {skillSearchResults.map(skill => (\n                        <SkillSearchPopupItem\n                          key={skill.id}\n                          onClick={() => handleSkillSelect(skill)}\n                          selected={selectedSkills.some(s => s.name === skill.name)}\n                        >\n                          <span className=\"skill-name\">{skill.name}</span>\n                          {selectedSkills.some(s => s.name === skill.name) && (\n                            <span className=\"selected-indicator\">✓ 선택됨</span>\n                          )}\n                        </SkillSearchPopupItem>\n                      ))}\n                    </SkillSearchPopupBody>\n                  ) : skillSearchTerm.length > 0 ? (\n                    <SkillSearchPopupBody>\n                      <NoResultsMessage>\n                        \"{skillSearchTerm}\"에 대한 검색 결과가 없습니다.\n                      </NoResultsMessage>\n                    </SkillSearchPopupBody>\n                  ) : null}\n                </SkillSearchPopupContent>\n              </SkillSearchPopup>\n            )}\n          </Section>\n          <SubmitBtn type=\"submit\">저장</SubmitBtn>\n        </FormContainer>\n      </MainBox>\n    </Bg>\n  );\n}\n\nconst press = keyframes`0% { transform: scale(1); } 50% { transform: scale(0.95); } 100% { transform: scale(1); }`;\nconst baseBtn = css`border:none;border-radius:0.65rem;font-weight:600;cursor:pointer;transition:transform 0.2s,box-shadow 0.2s,background 0.2s;&:hover{box-shadow:0 4px 12px rgba(0,0,0,0.08);transform:translateY(-1px);}&:active{animation:${press} 0.18s ease;}`;\nexport const Bg = styled.div`min-height:100vh;display:flex;justify-content:center;align-items:flex-start;padding-top:2rem;background:linear-gradient(135deg,#fdfcfb 0%,#e2d1c3 100%);`;\nexport const MainBox = styled.div`background:#fff;border-radius:1.8rem;padding-bottom:2.2rem;color:#333;width:36rem;max-width:96vw;margin-bottom:3.2rem;box-shadow:0 6px 22px rgba(0,0,0,0.06);transition:box-shadow 0.3s;&:hover{box-shadow:0 8px 28px rgba(0,0,0,0.09);}`;\nexport const Header = styled.div`padding:1.7rem 2.5rem 0.6rem;text-align:center;h1{color:#ffa500;font-size:2.2rem;font-weight:700;}`;\nexport const Divider = styled.hr`border:none;border-top:2px solid #e0e0e0;margin:1.2rem auto 2.2rem;width:87%;`;\nexport const Section = styled.section`margin-bottom:2rem;padding:0 1rem;`;\nexport const SectionTitle = styled.h3`font-size:1.1rem;font-weight:700;color:#ffa500;margin-bottom:1.2rem;padding-left:1.2rem;`;\nexport const Label = styled.label`min-width:6rem;font-size:1rem;color:#555;`;\nexport const Select = styled.select`width:100%;padding:0.72rem 0.85rem;border:1px solid #ccc;border-radius:0.65rem;transition:border-color 0.25s;&:focus{border-color:#ffa500;outline:none;}`;\nexport const Input = styled.input`width:100%;padding:0.72rem 0.85rem;border:1px solid #ccc;border-radius:0.65rem;transition:border-color 0.25s;&:focus{border-color:#ffa500;outline:none;}`;\nexport const TextArea = styled.textarea`width:100%;padding:0.72rem 0.85rem;border:1px solid #ccc;border-radius:0.65rem;resize:vertical;min-height:70px;transition:border-color 0.25s;&:focus{border-color:#ffa500;outline:none;}`;\nexport const FormContainer = styled.form`padding:0 2.2rem;`;\nexport const FlexRow = styled.div`display:flex;align-items:center;gap:1.5rem;margin-bottom:1rem;flex-wrap:wrap;> *{flex:1;}`;\nexport const ExpCard = styled.div`margin-bottom:1.3rem;padding:1rem 1.3rem;border:1px solid #ddd;border-radius:1rem;background:#fff;box-shadow:0 2px 8px rgba(0,0,0,0.04);transition:box-shadow 0.25s;&:hover{box-shadow:0 4px 16px rgba(0,0,0,0.08);}`;\nexport const ExpRow = styled.div`display:flex;gap:0.6rem;align-items:center;margin-bottom:0.8rem;> *{flex:1;}> input[type=\"date\"]{max-width:35%;}`;\nexport const DropdownCard = styled.div`background:#fff;border-radius:1.1rem;padding:1rem 1.6rem;box-shadow:0 2px 8px rgba(0,0,0,0.04);transition:box-shadow 0.3s;&:hover{box-shadow:0 3px 10px rgba(0,0,0,0.06);}`;\nexport const DropdownHeader = styled.div`display:flex;justify-content:space-between;align-items:center;font-weight:600;color:#ffa500;cursor:pointer;`;\nexport const DropdownIcon = styled.span`transition:transform 0.3s;transform:${({open})=>open?\"rotate(-180deg)\":\"none\"};`;\nexport const DropdownBody = styled.div`margin-top:0.5rem;display:grid;grid-template-columns:repeat(auto-fit,minmax(12rem,1fr));gap:0.45rem;`;\nexport const DropdownItem = styled.div`display:flex;align-items:center;gap:0.6rem;padding:0.45rem 0.55rem;border-radius:0.55rem;border:1.5px solid ${({selected})=>selected?\"#ffa500\":\"#dcdcdc\"};background:${({selected})=>selected?\"#ffa50022\":\"transparent\"};cursor:pointer;transition:background 0.2s,border 0.2s,transform 0.2s;&:hover{transform:translateY(-1px);background:${({selected})=>selected?\"#ffa50033\":\"#f5f5f5\"};}`;\nexport const TagWrap = styled.div`margin-top:0.8rem;display:flex;flex-wrap:wrap;gap:0.55rem;`;\nexport const Tag = styled.div`background:#ffa500;color:#fff;border-radius:1.2rem;padding:0.34rem 1rem;cursor:pointer;transition:transform 0.18s;&:active{animation:${press} 0.18s ease;}`;\nexport const SkillCard = styled.div`background:#fff; border-radius:1rem; padding:1.5rem;box-shadow:0 2px 8px rgba(0,0,0,0.05);`;\nexport const SkillCategory = styled.div`margin-bottom: 1.5rem;&:last-child { margin-bottom: 0; } > h4 {font-size: 1rem; font-weight: 600; color: #555; margin-bottom: 0.8rem; border-left: 3px solid #ffa500; padding-left: 0.8rem;}`;\nexport const SkillButtonContainer = styled.div`display: flex; flex-wrap: wrap; gap: 0.6rem;`;\nexport const SkillButton = styled.button`${baseBtn} padding: 0.5rem 1rem; font-size: 0.9rem;background: ${({selected}) => selected ? \"#ffa500\" : \"#f0f0f0\"};color: ${({selected}) => selected ? \"#fff\" : \"#444\"};border: 1px solid ${({selected}) => selected ? \"#ffa500\" : \"#ddd\"};&:hover {background: ${({selected}) => selected ? \"#ffb13d\" : \"#e0e0e0\"};transform: translateY(-1px);}`;\nexport const SkillLevelWrap = styled.div`display:flex;flex-direction:column;gap:1.2rem;align-items:center;`;\nexport const SkillWithLevel = styled.div`display:flex;align-items:center;width:80%;`;\nexport const LangTag = styled.div`min-width:85px;text-align:center;font-weight:700;color:#ffa500;border-radius:1.7rem;padding:0.65rem 0;margin-right:1.2rem;cursor:pointer;`;\nexport const RemoveBtn = styled.button`${baseBtn};background:#fcecec;color:#e53935;padding:0.5rem 1rem;margin-top:0.6rem;`;\nexport const AddBtn = styled.button`${baseBtn};background:#fff7ed;color:#ffa500;padding:0.6rem 1.25rem;margin-top:0.5rem;`;\nexport const SubmitBtn = styled.button`${baseBtn};width:100%;padding:1rem;background:#ffa500;color:#fff;margin-top:2rem;&:hover{background:#ffb13d;}`;\n\n// 검색 입력 스타일\nconst SkillSearchContainer = styled.div`\n  position: relative;\n  margin-bottom: 1.5rem;\n  display: flex;\n  align-items: flex-start;\n  gap: 0.5rem;\n`;\n\nconst SkillSearchWrapper = styled.div`\n  flex: 1;\n  display: flex;\n  align-items: center;\n  border: 1px solid #ccc;\n  border-radius: 0.65rem;\n  padding: 0.72rem 0.85rem;\n  background-color: #f9f9f9;\n  transition: border-color 0.25s;\n  &:focus-within {\n    border-color: #ffa500;\n    outline: none;\n  }\n`;\n\nconst SearchIcon = styled.span`\n  margin-right: 0.85rem;\n  color: #555;\n`;\n\nconst SkillSearchInput = styled.input`\n  flex-grow: 1;\n  border: none;\n  background: none;\n  font-size: 1rem;\n  color: #333;\n  &::placeholder {\n    color: #999;\n  }\n`;\n\nconst DetailViewButton = styled.button`\n  ${baseBtn}\n  padding: 0.72rem 1rem;\n  background: #ffa500;\n  color: #fff;\n  font-size: 0.9rem;\n  font-weight: 600;\n  border-radius: 0.65rem;\n  transition: all 0.2s;\n  white-space: nowrap;\n  \n  &:hover:not(:disabled) {\n    background: #ffb13d;\n    transform: translateY(-1px);\n  }\n  \n  &:disabled {\n    background: #ccc;\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n\nconst AutoCompleteDropdown = styled.div`\n  position: absolute;\n  top: 100%;\n  left: 0;\n  right: 0;\n  background: #fff;\n  border: 1px solid #ccc;\n  border-radius: 0.65rem;\n  box-shadow: 0 4px 12px rgba(0,0,0,0.1);\n  z-index: 10;\n  margin-top: 0.5rem;\n  max-height: 200px;\n  overflow-y: auto;\n`;\n\nconst AutoCompleteItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.8rem 1rem;\n  cursor: pointer;\n  transition: background-color 0.2s;\n  background-color: ${({ selected }) => selected ? \"#fff7ed\" : \"transparent\"};\n  border-bottom: 1px solid #f0f0f0;\n  \n  &:last-child {\n    border-bottom: none;\n  }\n  \n  &:hover {\n    background-color: #f5f5f5;\n  }\n  \n  .selected {\n    color: #ffa500;\n    font-weight: bold;\n  }\n`;\n\nconst SelectedSkillsContainer = styled.div`\n  margin-top: 1.5rem;\n  padding: 1rem;\n  background-color: #f9f9f9;\n  border-radius: 0.8rem;\n  border: 1px solid #eee;\n`;\n\nconst SelectedSkillsTitle = styled.h4`\n  font-size: 1rem;\n  font-weight: 600;\n  color: #555;\n  margin-bottom: 0.8rem;\n  border-left: 3px solid #ffa500;\n  padding-left: 0.8rem;\n`;\n\nconst SkillLevelSelect = styled.select`\n  padding: 0.6rem 1rem;\n  border-radius: 0.5rem;\n  font-size: 1rem;\n  background: #333;\n  color: #fff;\n  border: 1px solid #555;\n  width: 60%;\n  &:focus {\n    border-color: #ffa500;\n    outline: none;\n  }\n`;\n\nconst NoResultsMessage = styled.p`\n  padding: 0.72rem 0.85rem;\n  font-size: 0.9rem;\n  color: #999;\n  text-align: center;\n`;\n\nconst SkillTag = styled.div`\n  min-width: 85px;\n  text-align: center;\n  font-weight: 700;\n  color: #ffa500;\n  border-radius: 1.7rem;\n  padding: 0.65rem 0;\n  margin-right: 1.2rem;\n  cursor: pointer;\n  background-color: #fff7ed;\n  border: 1px solid #ffa500;\n  transition: all 0.2s;\n  &:hover {\n    background-color: #ffa500;\n    color: #fff;\n  }\n`;\n\n// 카테고리 탭 스타일\nconst SkillCategoryTabs = styled.div`\n  display: flex;\n  gap: 0.5rem;\n  margin-bottom: 1.5rem;\n  border-bottom: 2px solid #f0f0f0;\n  padding-bottom: 0.5rem;\n`;\n\nconst SkillCategoryTab = styled.button`\n  ${baseBtn}\n  padding: 0.6rem 1.2rem;\n  font-size: 0.9rem;\n  background: ${({ active }) => active ? \"#ffa500\" : \"#f0f0f0\"};\n  color: ${({ active }) => active ? \"#fff\" : \"#444\"};\n  border: 1px solid ${({ active }) => active ? \"#ffa500\" : \"#ddd\"};\n  border-radius: 1.5rem;\n  font-weight: 600;\n  transition: all 0.2s;\n  \n  &:hover {\n    background: ${({ active }) => active ? \"#ffb13d\" : \"#e0e0e0\"};\n    transform: translateY(-1px);\n  }\n`;\n\n// 팝업 스타일\nconst SkillSearchPopup = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n`;\n\nconst SkillSearchPopupContent = styled.div`\n  background: #fff;\n  border-radius: 1rem;\n  width: 90%;\n  max-width: 500px;\n  max-height: 80vh;\n  overflow: hidden;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);\n`;\n\nconst SkillSearchPopupHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1.5rem;\n  background: #ffa500;\n  color: #fff;\n  \n  h3 {\n    margin: 0;\n    font-size: 1.2rem;\n    font-weight: 600;\n  }\n`;\n\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  color: #fff;\n  font-size: 1.5rem;\n  cursor: pointer;\n  padding: 0;\n  width: 30px;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  transition: background-color 0.2s;\n  \n  &:hover {\n    background-color: rgba(255, 255, 255, 0.2);\n  }\n`;\n\nconst SkillSearchPopupBody = styled.div`\n  max-height: 400px;\n  overflow-y: auto;\n  padding: 1rem;\n`;\n\nconst SkillSearchPopupItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 0.5rem;\n  cursor: pointer;\n  transition: background-color 0.2s;\n  border: 1px solid ${({ selected }) => selected ? \"#ffa500\" : \"#eee\"};\n  background-color: ${({ selected }) => selected ? \"#fff7ed\" : \"#fff\"};\n  margin-bottom: 0.5rem;\n  \n  &:hover {\n    background-color: #f5f5f5;\n  }\n  \n  .skill-name {\n    font-weight: 600;\n    color: #333;\n  }\n  \n  .selected-indicator {\n    font-size: 0.8rem;\n    color: #ffa500;\n    font-weight: 600;\n  }\n`;","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport apiClient from '../api/apiClient';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // 초기 인증 상태 확인\n  useEffect(() => {\n    const checkAuthStatus = async () => {\n      try {\n        const token = localStorage.getItem('access_token');\n        if (token) {\n          const response = await apiClient.get('/api/user/profile');\n          setUser(response.data);\n          setIsAuthenticated(true);\n        }\n      } catch (error) {\n        console.error('인증 상태 확인 실패:', error);\n        localStorage.removeItem('access_token');\n        setUser(null);\n        setIsAuthenticated(false);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    checkAuthStatus();\n  }, []);\n\n  const login = async (credentials) => {\n    try {\n      const response = await apiClient.post('/api/auth/login', credentials);\n      const { access_token, user: userData } = response.data;\n      \n      localStorage.setItem('access_token', access_token);\n      setUser(userData);\n      setIsAuthenticated(true);\n      \n      return { success: true };\n    } catch (error) {\n      console.error('로그인 실패:', error);\n      return { \n        success: false, \n        error: error.response?.data?.detail || '로그인에 실패했습니다.' \n      };\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('access_token');\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  const register = async (userData) => {\n    try {\n      const response = await apiClient.post('/api/auth/register', userData);\n      return { success: true, data: response.data };\n    } catch (error) {\n      console.error('회원가입 실패:', error);\n      return { \n        success: false, \n        error: error.response?.data?.detail || '회원가입에 실패했습니다.' \n      };\n    }\n  };\n\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    logout,\n    register\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}; ","/* ───────────── src/pages/Logout.jsx ───────────── */\nimport React, { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { useAuth } from \"../contexts/AuthContext\";\n\nexport default function LogoutPage() {\n  const navigate = useNavigate();\n  const { logout } = useAuth();\n\n  useEffect(() => {\n    const performLogout = async () => {\n      try {\n        // AuthContext의 logout 함수 호출\n        logout();\n        \n        // 추가적인 로컬 스토리지 정리\n        localStorage.removeItem(\"chatSessionId\");\n        localStorage.removeItem(\"lastSelectedPage\");\n        \n        const userId = localStorage.getItem(\"userId\");\n        if (userId) {\n          localStorage.removeItem(`cachedRecommendations_${userId}`);\n        }\n        localStorage.removeItem(\"userId\");\n      } catch (err) {\n        console.error(\"❌ 로그아웃 중 오류:\", err);\n      } finally {\n        // 즉시 홈화면으로 이동 (SPA 방식)\n        navigate(\"/\", { replace: true });\n      }\n    };\n\n    // 즉시 로그아웃 실행\n    performLogout();\n  }, [navigate, logout]);\n\n  return (\n    <Container>\n      <LogoutMessage>\n        <h2>로그아웃 중...</h2>\n      </LogoutMessage>\n    </Container>\n  );\n}\n\n/* ───────── styled-components ───────── */\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  background: #f4f4f4;\n`;\n\nconst LogoutMessage = styled.div`\n  text-align: center;\n  \n  h2 {\n    color: #666;\n    font-size: 1.2rem;\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FaUser, FaLock } from \"react-icons/fa\";\nimport { useAuth } from \"../contexts/AuthContext\";\n\nexport default function Login() {\n  const navigate = useNavigate();\n  const { login } = useAuth();\n  const [formData, setFormData] = useState({ username: \"\", password: \"\" });\n  const [loading, setLoading] = useState(false);\n\n  // ───── 네이버 SDK 로드 ─────\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src = \"https://static.nid.naver.com/js/naveridlogin_js_sdk_2.0.2.js\";\n    script.async = true;\n    script.onload = initNaver;\n    document.head.appendChild(script);\n  }, []);\n\n  const initNaver = () => {\n    if (!window.naver) return;\n    new window.naver.LoginWithNaverId({\n      clientId: process.env.REACT_APP_NAVER_CLIENT_ID,\n      callbackUrl: `${window.location.origin}/navercallback`,\n      isPopup: false,\n      loginButton: { color: \"green\", type: 3, height: 48 },\n    }).init();\n  };\n\n  // ───── 입력 핸들러 ─────\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({ ...prev, [name]: value }));\n  };\n\n  // ───── 로그인 요청 ─────\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    \n    try {\n      const result = await login({\n        username: formData.username,\n        password: formData.password\n      });\n\n      if (result.success) {\n        localStorage.removeItem(\"chatSessionId\"); // 세션 초기화\n        alert(\"로그인 성공!\");\n        navigate(\"/\");\n      } else {\n        alert(\"로그인 실패: \" + result.error);\n      }\n    } catch (err) {\n      console.error(\"로그인 실패:\", err);\n      alert(\"로그인 중 오류가 발생했습니다.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Bg>\n      <MainBox>\n        <Header>\n          <h1>로그인</h1>\n        </Header>\n\n        <FormContainer onSubmit={handleSubmit}>\n          <InputGroup>\n            <Icon>\n              <FaUser />\n            </Icon>\n            <Input\n              name=\"username\"\n              placeholder=\"아이디 또는 이메일\"\n              value={formData.username}\n              onChange={handleChange}\n              required\n            />\n          </InputGroup>\n\n          <InputGroup>\n            <Icon>\n              <FaLock />\n            </Icon>\n            <Input\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"비밀번호\"\n              value={formData.password}\n              onChange={handleChange}\n              required\n            />\n          </InputGroup>\n\n          <SubmitBtn type=\"submit\" disabled={loading}>\n            {loading ? \"로그인 중...\" : \"로그인\"}\n          </SubmitBtn>\n\n          <SignupText>\n            계정이 없으신가요?{\" \"}\n            <a onClick={() => navigate(\"/register\")}>회원가입</a>\n          </SignupText>\n\n          <Divider />\n          <SnsLoginArea>\n            <SNSButton id=\"naverIdLogin\" />\n          </SnsLoginArea>\n        </FormContainer>\n      </MainBox>\n    </Bg>\n  );\n}\n\n/* ───── styled-components ───── */\nconst Bg = styled.div`\n  min-height: 100vh;\n  background: #f4f4f4;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 3rem 1rem;\n`;\n\nconst MainBox = styled.div`\n  background: #ffffff;\n  border-radius: 1.8rem;\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.1);\n  width: 100%;\n  max-width: 420px;\n  padding: 2.5rem 2rem;\n  color: #333;\n`;\n\nconst Header = styled.div`\n  text-align: center;\n  margin-bottom: 2rem;\n  h1 {\n    color: #ff9e00;\n    font-size: 2rem;\n    font-weight: 700;\n    letter-spacing: 0.03em;\n  }\n`;\n\nconst FormContainer = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst InputGroup = styled.div`\n  display: flex;\n  align-items: center;\n  background: #f5f5f5;\n  border: 2px solid #ccc;\n  border-radius: 10px;\n  padding: 0.85rem 1rem;\n  margin-bottom: 1rem;\n  transition: border 0.2s ease;\n\n  &:focus-within {\n    border-color: #ffcc00;\n  }\n`;\n\nconst Icon = styled.div`\n  font-size: 1.2rem;\n  color: #777;\n  margin-right: 0.8rem;\n`;\n\nconst Input = styled.input`\n  flex: 1;\n  background: transparent;\n  border: none;\n  color: #333;\n  font-size: 1rem;\n\n  &::placeholder {\n    color: #aaa;\n  }\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst SubmitBtn = styled.button`\n  width: 100%;\n  padding: 1rem;\n  background: #ffc107;\n  color: #1a1a1a;\n  font-weight: bold;\n  font-size: 1.1rem;\n  border: none;\n  border-radius: 0.6rem;\n  margin-top: 1rem;\n  cursor: pointer;\n  transition: background 0.25s ease;\n\n  &:hover {\n    background: #ffd54f;\n  }\n`;\n\nconst Divider = styled.hr`\n  margin: 2rem 0 1.2rem;\n  border: none;\n  border-top: 1px solid #ccc;\n`;\n\nconst SnsLoginArea = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst SNSButton = styled.div`\n  width: 100%;\n  max-width: 240px;\n  height: 48px;\n  background: transparent;\n`;\n\nconst SignupText = styled.div`\n  margin-top: 1.8rem;\n  text-align: center;\n  font-size: 0.95rem;\n  color: #555;\n\n  a {\n    color: #0076ff;\n    font-weight: 600;\n    margin-left: 0.4rem;\n    cursor: pointer;\n    text-decoration: underline;\n    &:hover {\n      color: #0055cc;\n    }\n  }\n`;\n","import React, { useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport {\n  FaBullseye,\n  FaClipboardList,\n  FaHeart,\n  FaRocket,\n  FaSearch,\n  FaBars,\n  FaHistory,\n  FaHome,\n  FaComments,\n  FaSignOutAlt\n} from \"react-icons/fa\";\nimport { IoIosArrowDown } from \"react-icons/io\";\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\n\nexport default function Sidebar({\n  collapsed,\n  setCollapsed,\n  darkMode\n}) {\n  const [careerOpen, setCareerOpen] = useState(true);\n  const navigate = useNavigate();\n  const { logout, user } = useAuth();\n\n  const careerSubpages = [\n    { key: \"career-summary\", label: \"종합\" },\n    { key: \"career-trend\", label: \"트렌드 분석\" },\n    { key: \"career-gap\", label: \"갭 분석\" },\n    { key: \"career-plan\", label: \"극복 방안\" }\n  ];\n\n  return (\n    <Wrapper $darkMode={darkMode} collapsed={collapsed}>\n      <TopBar>\n        <Logo onClick={() => navigate(\"/\")}>\n          <LogoText collapsed={collapsed}>JOB</LogoText>\n          <span style={{ color: \"#fff\" }}>자</span>\n        </Logo>\n      </TopBar>\n\n      <NavSection>\n        <NavItem onClick={() => navigate(\"/\")} $darkMode={darkMode}>\n          <FaHome />\n          <NavText collapsed={collapsed}><strong>홈</strong></NavText>\n        </NavItem>\n        <Divider $darkMode={darkMode} />\n\n        <NavItem onClick={() => navigate(\"/ai-jobs\")} $darkMode={darkMode}>\n          <FaRocket />\n          <NavText collapsed={collapsed}><strong>AI 추천 공고</strong></NavText>\n        </NavItem>\n\n        <NavItem onClick={() => setCareerOpen(!careerOpen)} $darkMode={darkMode}>\n          <FaBullseye />\n          <NavText collapsed={collapsed}><strong>커리어 로드맵</strong></NavText>\n          {!collapsed && (\n            <ArrowIcon open={careerOpen}>\n              <IoIosArrowDown />\n            </ArrowIcon>\n          )}\n        </NavItem>\n\n        {careerOpen && !collapsed &&\n          careerSubpages.map(sub => (\n            <SubItem\n              key={sub.key}\n              onClick={() => {\n                if (sub.key === \"career-gap\") {\n                  navigate(\"/career-summary\");\n                  setTimeout(() => {\n                    const gapSection = document.getElementById(\"gap-analysis-section\");\n                    if (gapSection) gapSection.scrollIntoView({ behavior: \"smooth\" });\n                  }, 200); // 렌더링 이후 실행 (200ms는 충분한 렌더링 대기)\n                } else if (sub.key === \"career-trend\") {\n                  navigate(\"/career-trend\");\n                } else {\n                  navigate(`/${sub.key}`);\n                }\n              }}\n              $darkMode={darkMode}\n            >\n              <Dot>•</Dot>\n              <strong>{sub.label}</strong>\n            </SubItem>\n          ))\n        }\n\n        <Divider $darkMode={darkMode} />\n\n        <NavItem onClick={() => navigate(\"/todo\")} $darkMode={darkMode}>\n          <FaClipboardList />\n          <NavText collapsed={collapsed}><strong>To-do List</strong></NavText>\n        </NavItem>\n\n        <NavItem onClick={() => navigate(\"/search\")} $darkMode={darkMode}>\n          <FaSearch />\n          <NavText collapsed={collapsed}><strong>공고 검색</strong></NavText>\n        </NavItem>\n\n        <NavItem onClick={() => navigate(\"/saved\")} $darkMode={darkMode}>\n          <FaHeart />\n          <NavText collapsed={collapsed}><strong>찜한 페이지</strong></NavText>\n        </NavItem>\n\n        <Divider $darkMode={darkMode} />\n\n        <NavItem onClick={() => navigate(\"/chat\")} $darkMode={darkMode}>\n          <FaComments />\n          <NavText collapsed={collapsed}><strong>채팅</strong></NavText>\n        </NavItem>\n\n        <NavItem onClick={() => navigate(\"/history\")} $darkMode={darkMode}>\n          <FaHistory />\n          <NavText collapsed={collapsed}><strong>대화 이력</strong></NavText>\n        </NavItem>\n\n        <Divider $darkMode={darkMode} />\n\n        {/* 사용자 정보 및 로그아웃 */}\n        {user && (\n          <>\n            <UserInfo collapsed={collapsed} $darkMode={darkMode}>\n              <UserAvatar>\n                {user.username ? user.username.charAt(0).toUpperCase() : 'U'}\n              </UserAvatar>\n              <UserDetails collapsed={collapsed}>\n                <UserName>{user.username || '사용자'}</UserName>\n                <UserEmail>{user.email || ''}</UserEmail>\n              </UserDetails>\n            </UserInfo>\n            \n            <NavItem onClick={() => {\n              logout();\n              navigate(\"/login\");\n            }} $darkMode={darkMode}>\n              <FaSignOutAlt />\n              <NavText collapsed={collapsed}><strong>로그아웃</strong></NavText>\n            </NavItem>\n          </>\n        )}\n      </NavSection>\n\n      <Footer collapsed={collapsed}>\n        <CollapseBtn onClick={() => setCollapsed(!collapsed)}>\n          <FaBars />\n        </CollapseBtn>\n      </Footer>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.aside`\n  width: ${p => p.collapsed ? \"56px\" : \"260px\"};\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n  transition: width .25s;\n  ${({ $darkMode }) => $darkMode ? css`\n    background: #333;\n    color: #ccc;\n  ` : css`\n    background: rgb(206, 205, 204);\n    color: #51442a;\n    box-shadow: 1px 0 4px rgba(0,0,0,.05);\n  `}\n`;\n\nconst TopBar = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 1rem;\n`;\n\nconst Logo = styled.div`\n  font-size: 1.2rem;\n  font-weight: bold;\n  cursor: pointer;\n`;\n\nconst LogoText = styled.span`\n  margin-left: .5rem;\n  display: ${p => p.collapsed ? \"none\" : \"inline\"};\n  color: #ffc107;\n`;\n\nconst NavSection = styled.div`\n  flex: 1;\n`;\n\nconst NavText = styled.div`\n  display: ${p => p.collapsed ? \"none\" : \"flex\"};\n  flex: 1;\n  align-items: center;\n`;\n\nconst NavItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: .6rem;\n  padding: .6rem;\n  border-radius: .4rem;\n  cursor: pointer;\n  transition: all .2s;\n  ${({ $darkMode }) => $darkMode ? css`\n    &:hover {\n      background: #3a3a3a;\n      svg { color: #ffc107; }\n      ${NavText} strong { color: #ffc107; }\n    }\n  ` : css`\n    &:hover {\n      background: rgb(248, 211, 99);\n      svg { color: rgb(30, 30, 29); }\n      ${NavText} strong { color: rgb(26, 25, 24); }\n    }\n  `}\n`;\n\nconst ArrowIcon = styled.div`\n  margin-left: auto;\n  font-size: 1rem;\n  transition: transform 0.25s ease;\n  ${({ open }) => open\n    ? css`transform: rotate(0deg);`\n    : css`transform: rotate(-90deg);`}\n`;\n\nconst SubItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.4rem;\n  padding: 0.4rem 0.6rem 0.4rem 2.2rem;\n  margin-left: 0.2rem;\n  font-size: 0.95rem;\n  cursor: pointer;\n  border-radius: 0.4rem;\n  ${({ $darkMode }) => $darkMode ? css`\n    &:hover {\n      background: #3a3a3a;\n      strong { color: #ffc107; }\n    }\n  ` : css`\n    &:hover {\n      background: rgb(248, 211, 99);\n      strong { color: rgb(26, 25, 24); }\n    }\n  `}\n`;\n\nconst Dot = styled.span`\n  font-size: 1.2rem;\n  line-height: 1;\n`;\n\nconst Divider = styled.div`\n  height: 1px;\n  margin: 1rem 0;\n  ${({ $darkMode }) => $darkMode\n    ? css`background: #555;`\n    : css`background: #ddd;`}\n`;\n\nconst Footer = styled.div`\n  margin-top: auto;\n  display: flex;\n  justify-content: ${p => p.collapsed ? \"center\" : \"flex-end\"};\n`;\n\nconst CollapseBtn = styled.div`\n  font-size: 1.2rem;\n  cursor: pointer;\n  ${({ theme }) => css`color: ${theme?.colors?.textSecondary || \"#888\"};`}\n`;\n\nconst UserInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.6rem;\n  padding: 0.6rem;\n  margin-bottom: 0.5rem;\n  border-radius: 0.4rem;\n  ${({ $darkMode }) => $darkMode ? css`\n    background: #3a3a3a;\n  ` : css`\n    background: rgb(248, 211, 99);\n  `}\n`;\n\nconst UserAvatar = styled.div`\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  background: #ffc107;\n  color: #333;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n  font-size: 0.9rem;\n`;\n\nconst UserDetails = styled.div`\n  display: ${p => p.collapsed ? \"none\" : \"flex\"};\n  flex-direction: column;\n  flex: 1;\n`;\n\nconst UserName = styled.div`\n  font-weight: bold;\n  font-size: 0.9rem;\n  color: #333;\n`;\n\nconst UserEmail = styled.div`\n  font-size: 0.8rem;\n  color: #666;\n  margin-top: 0.1rem;\n`;\n","/**\n * 날짜 관련 유틸리티 함수들\n */\n\n// 날짜를 YYYY-MM-DD 형식의 키로 변환\nexport const toKey = (d) => d.toISOString().split(\"T\")[0];\n\n// 특정 년월의 일수 반환\nexport const daysInMonth = (y, m) => new Date(y, m + 1, 0).getDate();\n\n// n일 전 날짜 반환\nexport const prevDate = (d, n) => {\n  const t = new Date(d);\n  t.setDate(t.getDate() - n);\n  return t;\n};\n\n// 날짜 포맷팅 (YYYY-MM-DD)\nexport const formatDate = (date) => {\n  const d = new Date(date);\n  const year = d.getFullYear();\n  const month = String(d.getMonth() + 1).padStart(2, '0');\n  const day = String(d.getDate()).padStart(2, '0');\n  return `${year}-${month}-${day}`;\n};\n\n// 날짜를 한국어 형식으로 포맷팅\nexport const formatDateKorean = (date) => {\n  const d = new Date(date);\n  const year = d.getFullYear();\n  const month = d.getMonth() + 1;\n  const day = d.getDate();\n  return `${year}년 ${month}월 ${day}일`;\n};\n\n// 날짜 범위 계산 (시작일부터 종료일까지)\nexport const getDateRange = (startDate, endDate) => {\n  const dates = [];\n  const current = new Date(startDate);\n  const end = new Date(endDate);\n  \n  while (current <= end) {\n    dates.push(formatDate(current));\n    current.setDate(current.getDate() + 1);\n  }\n  \n  return dates;\n};\n\n// 오늘 날짜가 특정 범위 내에 있는지 확인\nexport const isDateInRange = (date, startDate, endDate) => {\n  const target = new Date(date);\n  const start = new Date(startDate);\n  const end = new Date(endDate);\n  return target >= start && target <= end;\n}; ","import React, { useState, useMemo, useCallback, useEffect } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport apiClient from \"../api/apiClient\";\nimport { toKey, daysInMonth, prevDate } from \"../utils/dateUtils\";\n\nconst TodoList = React.memo(({ darkMode = false, onPage = \"todo\" }) => {\n  const now = new Date();\n  const initialDate = localStorage.getItem(\"todoSelectedDate\") || toKey(now);\n  const [selected, setSel] = useState(initialDate);\n  const [year, setYear] = useState(+selected.slice(0, 4));\n  const [month, setMonth] = useState(+selected.slice(5, 7) - 1);\n  const [scheduleData, setScheduleData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // 기존 로컬 스토리지 기반 할 일 목록 (백업용)\n  const [tasks, setTasks] = useState(() =>\n    JSON.parse(localStorage.getItem(\"tasks\") || \"{}\")\n  );\n\n  const save = useCallback((obj) => {\n    setTasks(obj);\n    localStorage.setItem(\"tasks\", JSON.stringify(obj));\n  }, []);\n\n  // input, setInput 선언 추가\n  const [input, setInput] = useState(\"\");\n  const [jobInput, setJobInput] = useState(\"\");\n  const [daysInput, setDaysInput] = useState(15);\n  const isGuest = !localStorage.getItem(\"accessToken\");\n\n  // 1. 일정 리스트를 체크리스트(checkbox) 형태로 출력\n  // 2. 폼은 생성 후 사라지고, 일정 리스트가 그 자리에 나오게\n  const [showForm, setShowForm] = useState(true);\n\n  // 모달(팝업) 상태 추가\n  const [modalTask, setModalTask] = useState(null);\n\n  // 선택된 날짜의 일정 가져오기\n  const selectedDaySchedule = useMemo(() => {\n    if (!scheduleData) return null;\n    return scheduleData.schedule.find(day => day.date === selected);\n  }, [scheduleData, selected]);\n\n  const todays = selectedDaySchedule?.tasks || [];\n  const done = todays.filter((t) => t.completed).length;\n  const rate = todays.length ? Math.round((done / todays.length) * 100) : 0;\n\n  // 연속 달성 일수 계산\n  const streak = useMemo(() => {\n    if (!scheduleData) return 0;\n    \n    let s = 0;\n    for (let i = 0; i < 30; i++) {\n      const key = toKey(prevDate(new Date(), i));\n      const daySchedule = scheduleData.schedule.find(day => day.date === key);\n      const dayTasks = daySchedule?.tasks || [];\n      \n      if (dayTasks.length && dayTasks.every((t) => t.completed)) s++;\n      else break;\n    }\n    return s;\n  }, [scheduleData]);\n\n  const daysArr = useMemo(() => {\n    const arr = [];\n    const pad = (n) => String(n).padStart(2, \"0\");\n    const first = new Date(year, month, 1).getDay();\n    for (let i = 0; i < first; i++) arr.push(null);\n    for (let d = 1; d <= daysInMonth(year, month); d++) {\n      arr.push(`${year}-${pad(month + 1)}-${pad(d)}`);\n    }\n    return arr;\n  }, [year, month]);\n\n  const add = () => {\n    if (!input.trim()) return;\n    save({\n      ...tasks,\n      [selected]: [...todays, { text: input.trim(), done: false }],\n    });\n    setInput(\"\");\n  };\n  const toggle = (i) => {\n    if (!scheduleData) return;\n    \n    const updatedSchedule = { ...scheduleData };\n    const dayIndex = updatedSchedule.schedule.findIndex(day => day.date === selected);\n    \n    if (dayIndex !== -1) {\n      updatedSchedule.schedule[dayIndex].tasks[i].completed = \n        !updatedSchedule.schedule[dayIndex].tasks[i].completed;\n      setScheduleData(updatedSchedule);\n      \n      // 백엔드에 업데이트 전송 (필요시)\n      // await axios.put(`${BASE_URL}/todo/update`, updatedSchedule);\n    }\n  };\n  const remove = (i) => {\n    if (!scheduleData) return;\n    \n    const updatedSchedule = { ...scheduleData };\n    const dayIndex = updatedSchedule.schedule.findIndex(day => day.date === selected);\n    \n    if (dayIndex !== -1) {\n      updatedSchedule.schedule[dayIndex].tasks.splice(i, 1);\n      setScheduleData(updatedSchedule);\n    }\n  };\n\n  // handleGenerate 함수 정의 (컴포넌트 내에 추가)\n  const handleGenerate = async () => {\n    if (!jobInput.trim()) {\n      setError(\"직무를 입력해주세요.\");\n      return;\n    }\n    try {\n      setLoading(true);\n      setError(null);\n      await apiClient.post(\n        `/todo/generate?job_title=${encodeURIComponent(jobInput)}&days=${daysInput}`\n      );\n      const { data: userSchedule } = await apiClient.get(\"/todo/user\");\n      setScheduleData(userSchedule.data);\n      setShowForm(false); // 폼 숨기고 일정 리스트 보여주기\n    } catch (e) {\n      setError(\"일정 생성 실패\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n\n\n  // 에러가 있어도 캘린더와 입력란은 항상 보이게\n  if (error) {\n    return (\n      <Wrap>\n        <Top>\n          <Cal>\n            <Header>\n              <Nav onClick={() => setMonth(month === 0 ? 11 : month - 1)}>◀</Nav>\n              <span>{year}년 {month + 1}월</span>\n              <Nav onClick={() => setMonth(month === 11 ? 0 : month + 1)}>▶</Nav>\n            </Header>\n            <Grid7>\n              {\"일월화수목금토\".split(\"\").map((d) => (\n                <Th key={d}>{d}</Th>\n              ))}\n              {daysArr.map((k, i) => {\n                const daySchedule = scheduleData?.schedule.find(day => day.date === k);\n                const hasTasks = daySchedule?.tasks?.length > 0;\n                const allCompleted = hasTasks && daySchedule.tasks.every(task => task.completed);\n                return (\n                  <Td\n                    key={i}\n                    selected={k === selected}\n                    has={hasTasks}\n                    completed={allCompleted}\n                    onClick={e => {\n                      e.stopPropagation();\n                      if (!k) return;\n                      setSel(k);\n                      localStorage.setItem(\"todoSelectedDate\", k);\n                    }}\n                  >\n                    {k ? +k.split(\"-\")[2] : \"\"}\n                  </Td>\n                );\n              })}\n            </Grid7>\n          </Cal>\n          {/* 중복된 가로 입력폼 완전 삭제 */}\n          {/* {onPage === \"todo\" && (\n            <InputRow>\n              <Inp\n                value={jobInput}\n                onChange={e => setJobInput(e.target.value)}\n                onClick={e => e.stopPropagation()}\n                placeholder=\"직무 입력\"\n              />\n              <Inp\n                type=\"number\"\n                min={1}\n                max={60}\n                value={daysInput}\n                onChange={e => setDaysInput(Number(e.target.value))}\n                onClick={e => e.stopPropagation()}\n                style={{ width: 60 }}\n                placeholder=\"기간(일)\"\n              />\n              <Add onClick={handleGenerate}>생성하기</Add>\n            </InputRow>\n          )} */}\n          <ErrorMessage>{error}</ErrorMessage>\n          <RetryButton onClick={() => setError(null)}>\n            에러 메시지 닫기\n          </RetryButton>\n        </Top>\n      </Wrap>\n    );\n  }\n\n  // 일정 생성 중 로딩 상태를 명확하게 표시\n  if (loading) {\n    return (\n      <Wrap>\n        <Top>\n          <Cal>\n            <Header>\n              <Nav onClick={() => setMonth(month === 0 ? 11 : month - 1)}>◀</Nav>\n              <span>{year}년 {month + 1}월</span>\n              <Nav onClick={() => setMonth(month === 11 ? 0 : month + 1)}>▶</Nav>\n            </Header>\n            <Grid7>\n              {\"일월화수목금토\".split(\"\").map((d) => (\n                <Th key={d}>{d}</Th>\n              ))}\n              {daysArr.map((k, i) => {\n                const daySchedule = scheduleData?.schedule.find(day => day.date === k);\n                const hasTasks = daySchedule?.tasks?.length > 0;\n                const allCompleted = hasTasks && daySchedule.tasks.every(task => task.completed);\n                return (\n                  <Td\n                    key={i}\n                    selected={k === selected}\n                    has={hasTasks}\n                    completed={allCompleted}\n                    onClick={e => {\n                      e.stopPropagation();\n                      if (!k) return;\n                      setSel(k);\n                      localStorage.setItem(\"todoSelectedDate\", k);\n                    }}\n                  >\n                    {k ? +k.split(\"-\")[2] : \"\"}\n                  </Td>\n                );\n              })}\n            </Grid7>\n          </Cal>\n        </Top>\n        {/* 입력 폼은 항상 보이게 */}\n        {!isGuest && (\n          <InputForm>\n            <InputRow>\n              <Inp\n                value={jobInput}\n                onChange={e => setJobInput(e.target.value)}\n                onClick={e => e.stopPropagation()}\n                placeholder=\"직무 입력\"\n              />\n            </InputRow>\n            <InputRow>\n              <Inp\n                type=\"number\"\n                min={1}\n                max={60}\n                value={daysInput}\n                onChange={e => setDaysInput(Number(e.target.value))}\n                onClick={e => e.stopPropagation()}\n                style={{ width: 80, maxWidth: 100 }}\n                placeholder=\"기간(일)\"\n              />\n              <Add onClick={handleGenerate}>생성하기</Add>\n            </InputRow>\n          </InputForm>\n        )}\n        {/* 일정 리스트 부분에만 로딩 메시지 */}\n        <div style={{ textAlign: 'center', margin: '2rem 0', color: '#888', fontSize: '1.1rem' }}>\n          일정 생성 중...\n        </div>\n      </Wrap>\n    );\n  }\n\n  return (\n    <Wrap>\n      <Top>\n        <Cal>\n          <Header>\n            <Nav onClick={() => setMonth(month === 0 ? 11 : month - 1)}>◀</Nav>\n            <span>{year}년 {month + 1}월</span>\n            <Nav onClick={() => setMonth(month === 11 ? 0 : month + 1)}>▶</Nav>\n          </Header>\n          <Grid7>\n            {\"일월화수목금토\".split(\"\").map((d) => (\n              <Th key={d}>{d}</Th>\n            ))}\n            {daysArr.map((k, i) => {\n              const daySchedule = scheduleData?.schedule.find(day => day.date === k);\n              const hasTasks = daySchedule?.tasks?.length > 0;\n              const allCompleted = hasTasks && daySchedule.tasks.every(task => task.completed);\n              \n              return (\n                <Td\n                  key={i}\n                  selected={k === selected}\n                  has={hasTasks}\n                  completed={allCompleted}\n                  onClick={e => {\n                    e.stopPropagation();\n                    if (!k) return;\n                    setSel(k);\n                    localStorage.setItem(\"todoSelectedDate\", k);\n                  }}\n                >\n                  {k ? +k.split(\"-\")[2] : \"\"}\n                </Td>\n              );\n            })}\n          </Grid7>\n        </Cal>\n\n        {/* Top 아래 {onPage === \"todo\" && (<InputRow>...</InputRow>)} 부분도 완전히 삭제 */}\n      </Top>\n\n      {/* 2. 입력 폼 */}\n      {!isGuest && (\n        showForm ? (\n          <InputForm>\n            <InputRow>\n              <Inp\n                value={jobInput}\n                onChange={e => setJobInput(e.target.value)}\n                onClick={e => e.stopPropagation()}\n                placeholder=\"직무 입력\"\n              />\n            </InputRow>\n            <InputRow>\n              <Inp\n                type=\"number\"\n                min={1}\n                max={60}\n                value={daysInput}\n                onChange={e => setDaysInput(Number(e.target.value))}\n                onClick={e => e.stopPropagation()}\n                style={{ width: 80, maxWidth: 100 }}\n                placeholder=\"기간(일)\"\n              />\n              <Add onClick={handleGenerate}>생성하기</Add>\n            </InputRow>\n          </InputForm>\n        ) : (\n          <Todo>\n            <ScheduleHeader>\n              <h3>{selected} 학습 일정</h3>\n              {scheduleData && (\n                <JobTitle>{scheduleData.job_title} 개발자 과정</JobTitle>\n              )}\n              {/* goals, notes 표시 */}\n              {selectedDaySchedule?.goals && selectedDaySchedule.goals.length > 0 && (\n                <div style={{ margin: '0.5rem 0', fontWeight: 500, color: '#444' }}>\n                  목표: {selectedDaySchedule.goals.join(', ')}\n                </div>\n              )}\n              {selectedDaySchedule?.notes && (\n                <div style={{ margin: '0.3rem 0', color: '#888', fontSize: '0.95rem' }}>\n                  {selectedDaySchedule.notes}\n                </div>\n              )}\n            </ScheduleHeader>\n            <List $preview={onPage === \"home\"}>\n              {todays.length > 0 ? (\n                todays.map((t, i) => (\n                  <Li key={i} done={t.completed} $type={t.type}>\n                    <label style={{ display: 'flex', alignItems: 'center', width: '100%', cursor: 'pointer', margin: 0 }}>\n                      <input\n                        type=\"checkbox\"\n                        checked={t.completed}\n                        onChange={() => toggle(i)}\n                        style={{ marginRight: '0.7rem', marginTop: '0.2rem' }}\n                      />\n                      <span\n                        style={{ fontWeight: 600, fontSize: '1.05rem', color: '#333', flex: 1, textAlign: 'left' }}\n                        onClick={e => { e.stopPropagation(); setModalTask(t); }}\n                      >\n                        {t.title}\n                      </span>\n                    </label>\n                  </Li>\n                ))\n              ) : (\n                <Empty>\n                  {onPage === \"home\" ? \"오늘은 휴식일입니다\" : \"해당 날짜에 일정이 없습니다\"}\n                </Empty>\n              )}\n            </List>\n            {/* 상세 정보 모달 */}\n            {modalTask && (\n              <ModalOverlay onClick={() => setModalTask(null)}>\n                <ModalCard onClick={e => e.stopPropagation()}>\n                  <ModalTitle>{modalTask.title}</ModalTitle>\n                  <ModalDesc>{modalTask.description}</ModalDesc>\n                  <ModalMeta>\n                    <span>소요: {modalTask.duration}</span>\n                    <span>유형: {modalTask.type === 'roadmap' ? '로드맵' : modalTask.type === 'skill_study' ? '스킬 학습' : modalTask.type === 'review' ? '복습' : modalTask.type}</span>\n                    {modalTask.related_roadmap && <span>로드맵: {modalTask.related_roadmap}</span>}\n                    {modalTask.related_job && <span>직무: {modalTask.related_job}</span>}\n                  </ModalMeta>\n                  <ModalCloseBtn onClick={() => setModalTask(null)}>닫기</ModalCloseBtn>\n                </ModalCard>\n              </ModalOverlay>\n            )}\n          </Todo>\n        )\n      )}\n    </Wrap>\n  );\n});\n\nexport default TodoList;\n\n/* styled-components 생략하지 않고 전부 유지 */\n\n// 카드 전체 영역(Wrap) 스타일 개선\nconst Wrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1.2rem;\n  padding: 1.2rem 1.6rem;\n  height: 100%;\n  width: 100%;\n  max-width: 480px;\n  min-width: 340px;\n  box-sizing: border-box;\n  background: #f5f4f1;\n  border-radius: 2rem;\n  box-shadow: 0 2px 12px rgba(0,0,0,0.04);\n`;\nconst Top = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  gap: 1.6rem;\n  width: 100%;\n`;\nconst Cal = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  width: 100%;\n`;\nconst Header = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 0.5rem;\n  font-weight: 700;\n  font-size: 0.95rem;\n  margin-bottom: 0.3rem;\n`;\nconst Nav = styled.button`\n  background: none;\n  border: none;\n  font-size: 1.2rem;\n  cursor: pointer;\n`;\n// 캘린더 스타일 개선\nconst Grid7 = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  gap: 0.08rem;\n  width: 100%;\n  max-width: 520px;\n  min-width: 320px;\n  margin: 0 auto 1.2rem auto;\n`;\nconst Th = styled.div`\n  text-align: center;\n  font-weight: 700;\n  font-size: 0.78rem;\n`;\nconst Td = styled.div`\n  width: 24px;\n  height: 24px;\n  line-height: 24px;\n  font-size: 0.85rem;\n  border-radius: 6px;\n  text-align: center;\n  cursor: pointer;\n  ${({ has }) => has && css`font-weight: 700;`}\n  ${({ selected }) =>\n    selected &&\n    css`\n      background: #ffe066;\n    `}\n  ${({ completed }) =>\n    completed &&\n    css`\n      background: #4CAF50;\n      color: white;\n    `}\n`;\nconst Stat = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 0.3rem;\n  font-size: 0.85rem;\n  line-height: 1.2;\n`;\nconst Ring = styled.div`\n  width: 70px;\n  height: 70px;\n  border-radius: 50%;\n  background: ${({ percent }) =>\n    `conic-gradient(#ffd54f ${percent * 3.6}deg,#eee 0)`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nconst Inner = styled.div`\n  width: 48px;\n  height: 48px;\n  border-radius: 50%;\n  background: #fdfdfd;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 700;\n`;\nconst Todo = styled.div``;\nconst InputForm = styled.div`\n  width: 90%;\n  margin-left: 2.5rem;\n  display: flex;\n  flex-direction: column;\n  gap: 0.7rem;\n`;\nconst InputRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: 1rem;\n  width: 100%;\n  justify-content: flex-start;\n  overflow: hidden;\n`;\nconst Inp = styled.input`\n  flex: 1 1 120px;\n  padding: 0.65rem 1rem;\n  border: 1.5px solid #ccc;\n  border-radius: 12px;\n  font-size: 1.05rem;\n  min-width: 100px;\n  max-width: 180px;\n  min-height: 44px;\n  background: #faf9f7;\n  transition: border 0.2s;\n  box-shadow: 0 1px 4px rgba(0,0,0,0.04);\n  &:focus {\n    border: 1.5px solid #ffd54f;\n    outline: none;\n    background: #fffbe7;\n  }\n`;\nconst Add = styled.button`\n  flex-shrink: 0;\n  width: 90px;\n  min-width: 70px;\n  max-width: 90px;\n  padding: 0.65rem 0;\n  background: #ffd54f;\n  border: none;\n  border-radius: 12px;\n  font-weight: 700;\n  font-size: 1.05rem;\n  min-height: 44px;\n  cursor: pointer;\n  transition: background 0.2s, color 0.2s;\n  color: #333;\n  box-shadow: 0 2px 8px rgba(255, 213, 79, 0.08);\n  white-space: nowrap;\n  overflow: hidden;\n  &:hover {\n    background: #ffb300;\n    color: #fff;\n  }\n`;\nconst List = styled.div`\n  max-height: ${({ $preview }) => ($preview ? \"160px\" : \"215px\")};\n  overflow-y: auto;\n`;\nconst Li = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  background: #fff;\n  border: 2px solid #ffc107;\n  border-radius: 12px;\n  padding: 1.1rem 1.2rem 1.1rem 1.2rem;\n  margin-bottom: 0.7rem;\n  box-sizing: border-box;\n  width: 100%;\n  box-shadow: 0 2px 8px rgba(255, 213, 79, 0.07);\n`;\nconst Del = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  color: #888;\n  font-size: 0.9rem;\n  &:hover {\n    color: #d00;\n  }\n`;\nconst Empty = styled.div`\n  font-size: 0.9rem;\n  color: #999;\n  text-align: center;\n  margin-top: 0.6rem;\n`;\n\n// 새로운 스타일 컴포넌트들\nconst LoadingMessage = styled.div`\n  text-align: center;\n  padding: 2rem;\n  color: #666;\n  font-size: 1rem;\n`;\n\nconst ErrorMessage = styled.div`\n  text-align: center;\n  padding: 2rem;\n  color: #e74c3c;\n  font-size: 1rem;\n`;\n\nconst RetryButton = styled.button`\n  background: #ffc107;\n  color: #333;\n  border: none;\n  border-radius: 0.5rem;\n  padding: 0.5rem 1rem;\n  font-size: 0.9rem;\n  cursor: pointer;\n  margin: 1rem auto;\n  display: block;\n\n  &:hover {\n    background: #ffb300;\n  }\n`;\n\nconst ScheduleHeader = styled.div`\n  margin-bottom: 1rem;\n  \n  h3 {\n    margin: 0 0 0.5rem 0;\n    color: #333;\n  }\n`;\n\nconst JobTitle = styled.div`\n  font-size: 0.9rem;\n  color: #666;\n  font-weight: 600;\n`;\n\nconst TaskContent = styled.div`\n  flex: 1;\n  margin-left: 0.5rem;\n`;\n\nconst TaskTitle = styled.div`\n  font-weight: 600;\n  color: #333;\n  margin-bottom: 0.2rem;\n`;\n\nconst TaskDescription = styled.div`\n  font-size: 0.8rem;\n  color: #666;\n  margin-bottom: 0.3rem;\n`;\n\nconst TaskMeta = styled.div`\n  display: flex;\n  gap: 0.5rem;\n  align-items: center;\n`;\n\nconst TaskDuration = styled.span`\n  font-size: 0.7rem;\n  color: #888;\n  background: #f0f0f0;\n  padding: 0.1rem 0.3rem;\n  border-radius: 0.2rem;\n`;\n\nconst TaskType = styled.span`\n  font-size: 0.7rem;\n  color: #fff;\n  background: #ffc107;\n  padding: 0.1rem 0.3rem;\n  border-radius: 0.2rem;\n`;\n\n// 모달 스타일 추가\nconst ModalOverlay = styled.div`\n  position: fixed;\n  top: 0; left: 0; right: 0; bottom: 0;\n  background: rgba(0,0,0,0.18);\n  z-index: 1000;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nconst ModalCard = styled.div`\n  background: #fff;\n  border-radius: 1.2rem;\n  box-shadow: 0 4px 24px rgba(0,0,0,0.13);\n  padding: 2.2rem 2.2rem 1.5rem 2.2rem;\n  min-width: 320px;\n  max-width: 95vw;\n  max-height: 80vh;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\nconst ModalTitle = styled.h2`\n  font-size: 1.25rem;\n  font-weight: 700;\n  color: #ffb300;\n  margin-bottom: 0.7rem;\n`;\nconst ModalDesc = styled.div`\n  font-size: 1.05rem;\n  color: #444;\n  margin-bottom: 1.1rem;\n`;\nconst ModalMeta = styled.div`\n  font-size: 0.97rem;\n  color: #888;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1.1rem;\n  margin-bottom: 1.5rem;\n`;\nconst ModalCloseBtn = styled.button`\n  align-self: flex-end;\n  background: #ffc107;\n  color: #333;\n  border: none;\n  border-radius: 0.7rem;\n  padding: 0.6rem 1.3rem;\n  font-size: 1rem;\n  font-weight: 600;\n  cursor: pointer;\n  margin-top: 0.5rem;\n  &:hover { background: #ffb300; color: #fff; }\n`;\n","import React, { useState } from \"react\";\nimport styled, { css } from \"styled-components\";\n\nexport default function PromptInput({ userQuery, setUserQuery, handleSubmit, darkMode }) {\n  const [isComposing, setIsComposing] = useState(false);\n\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\" && !isComposing) {\n      e.preventDefault();\n      handleSubmit(); // ✅ 상태값은 이미 바깥에서 참조\n    }\n  };\n\n  return (\n    <Input\n      type=\"text\"\n      value={userQuery}\n      onChange={(e) => setUserQuery(e.target.value)}\n      onKeyDown={handleKeyDown}\n      onCompositionStart={() => setIsComposing(true)}\n      onCompositionEnd={() => setIsComposing(false)}\n      placeholder=\"메시지를 입력하세요...\"\n      $darkMode={darkMode}\n    />\n  );\n}\n\n/* 스타일 생략 */\n\n\nconst Input = styled.input`\n  flex: 1;\n  font-size: 1rem;\n  border: none;\n  border-radius: 0.5rem;\n  padding: 1.3rem 1rem;\n\n  ${({ $darkMode }) =>\n    $darkMode\n      ? css`\n          background: #333;\n          color: #fff;\n          &::placeholder {\n            color: #999;\n          }\n        `\n      : css`\n          background: #fff;\n          color: #000;\n          &::placeholder {\n            color: #aaa;\n          }\n        `}\n  &:focus {\n    outline: none;\n  }\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport PromptInput from \"./PromptInput\";\n\nexport default function PromptBar({ darkMode, activePage, onSubmit }) {\n  const [userQuery, setUserQuery] = useState(\"\");\n\n  const handleSubmit = () => {\n    const trimmed = userQuery.trim();\n    if (!trimmed) return;\n    onSubmit(trimmed);      // ✅ 먼저 전달\n    setUserQuery(\"\");       // ✅ 그 다음에 초기화\n  };\n  \n  \n\n  return (\n    <Wrapper> \n      <Prompt $darkMode={darkMode}>\n        <PromptText>JOB자에게 메시지</PromptText>\n\n        <PromptInput\n          userQuery={userQuery}\n          setUserQuery={setUserQuery}\n          handleSubmit={handleSubmit}\n          darkMode={darkMode}\n        />\n\n        <PromptButton onClick={handleSubmit}>전송</PromptButton>\n      </Prompt>\n    </Wrapper>\n  );\n}\n\n/* 스타일 생략 */\n\n\nconst Wrapper = styled.div`\n  position: fixed;\n  bottom: 2.5rem;\n  left: 60%;\n  transform: translateX(-50%);\n  z-index: 20;\n  width: 100%;\n  max-width: 800px;\n  display: flex;\n  justify-content: center;\n  height: 80px;\n`;\n\nconst Prompt = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n  width: 100%;\n  max-width: 800px;\n  border-radius: 1rem;\n  padding: 1rem;\n  ${({ $darkMode }) =>\n    $darkMode ? \"background:#333;\" : \"background:rgb(188, 185, 179);\"}\n`;\n\nconst PromptText = styled.div`\n  font-size: 1rem;\n  color: rgb(25, 19, 1);\n`;\n\nconst PromptButton = styled.button`\n  padding: 1.4rem 1.2rem;\n  background: #ffc107;\n  color: #222;\n  font-weight: bold;\n  border: none;\n  border-radius: 0.5rem;\n  cursor: pointer;\n  &:hover {\n    background: #ffb300;\n  }\n`;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport styled, { css } from \"styled-components\";\n// FaUser 아이콘을 추가로 import 합니다.\nimport { FaUser, FaUserCircle, FaSun, FaMoon, FaSignOutAlt } from \"react-icons/fa\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function ProfileMenu({ darkMode, toggleTheme, setSelectedPage }) {\n  const [open, setOpen] = useState(false);\n  const ref = useRef();\n  const navigate = useNavigate();\n  // 로컬 스토리지의 토큰 유무로 로그인 상태를 판별합니다.\n  const isLoggedIn = !!localStorage.getItem(\"accessToken\");\n\n  // 바깥 클릭 시 닫기\n  useEffect(() => {\n    function handleClickOutside(e) {\n      if (ref.current && !ref.current.contains(e.target)) {\n        setOpen(false);\n      }\n    }\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n  }, []);\n\n  // 로그아웃 처리 함수\n  const handleLogout = () => {\n    setOpen(false); // 드롭다운 메뉴를 닫습니다.\n    // logout 페이지로 이동시켜 로그아웃 관련 API 처리 및 토큰 제거를 위임합니다.\n    navigate(\"/logout\", { replace: true });\n  };\n\n  return (\n    <Wrapper ref={ref}>\n      {isLoggedIn ? (\n        // ✅ 1. 로그인 상태일 때의 UI\n        <>\n          <ProfileIcon $darkMode={darkMode} onClick={() => setOpen(!open)}>\n            <FaUserCircle />\n          </ProfileIcon>\n\n          {open && (\n            <Dropdown $darkMode={darkMode}>\n              {/* ✅ 2. \"내 프로필\"로 텍스트 변경, 아이콘 추가 및 순서 변경 */}\n              <DropdownItem\n                $darkMode={darkMode}\n                onClick={() => {\n                  setSelectedPage(\"profile\");\n                  setOpen(false);\n                }}\n              >\n                <FaUser /> 내 프로필\n              </DropdownItem>\n\n              <DropdownItem $darkMode={darkMode} onClick={handleLogout}>\n                <FaSignOutAlt /> 로그아웃\n              </DropdownItem>\n              \n              <DropdownItem $darkMode={darkMode} onClick={toggleTheme}>\n                {darkMode ? <><FaSun /> 라이트 모드</> : <><FaMoon /> 다크 모드</>}\n              </DropdownItem>\n            </Dropdown>\n          )}\n        </>\n      ) : (\n        // ✅ 3. 로그아웃 상태일 때의 UI\n        <LoggedOutButtons>\n          <AuthLink $darkMode={darkMode} onClick={() => navigate(\"/login\")}>\n            로그인\n          </AuthLink>\n          <Divider $darkMode={darkMode} />\n          <AuthLink $darkMode={darkMode} onClick={() => navigate(\"/register\")}>\n            회원가입\n          </AuthLink>\n        </LoggedOutButtons>\n      )}\n    </Wrapper>\n  );\n}\n\n/* ───────── 스타일 ───────── */\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n`;\n\n// ✅ 4. 로그아웃 상태일 때 버튼들을 감싸는 스타일 추가\nconst LoggedOutButtons = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 1.2rem;\n`;\n\n// ✅ 5. 로그인/회원가입 링크 스타일 추가\nconst AuthLink = styled.div`\n  font-size: 0.95rem;\n  font-weight: 600;\n  color: ${({ $darkMode }) => ($darkMode ? \"#ccc\" : \"#555\")};\n  cursor: pointer;\n  text-decoration: none;\n  transition: color 0.2s;\n\n  &:hover {\n    color: ${({ $darkMode }) => ($darkMode ? \"#fff\" : \"#000\")};\n  }\n`;\n\n// ✅ 6. 구분선 스타일 추가\nconst Divider = styled.div`\n  width: 1px;\n  height: 1.2rem;\n  background: ${({ $darkMode }) => ($darkMode ? \"#555\" : \"#ccc\")};\n`;\n\nconst ProfileIcon = styled.div`\n  font-size: 1.8rem;\n  cursor: pointer;\n  color: ${({ $darkMode }) => ($darkMode ? \"#ccc\" : \"#666\")};\n\n  &:hover {\n    color: ${({ $darkMode }) => ($darkMode ? \"#fff\" : \"#000\")};\n  }\n`;\n\nconst Dropdown = styled.div`\n  position: absolute;\n  top: 2.4rem;\n  right: 0;\n  background: ${({ $darkMode }) => ($darkMode ? \"#444\" : \"#e9e4d7\")};\n  border-radius: 0.4rem;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.4);\n  overflow: hidden;\n  z-index: 10;\n`;\n\nconst DropdownItem = styled.div`\n  padding: 0.9rem 1rem;\n  cursor: pointer;\n  font-size: 1rem;\n  display: flex;\n  align-items: center;\n  gap: 0.6rem;\n  white-space: nowrap;\n  word-break: keep-all;\n  line-height: 1.4;\n\n  ${({ $darkMode }) =>\n    $darkMode\n      ? css`\n          color: #eee;\n          &:hover { background: #555; }\n        `\n      : css`\n          color: #333;\n          &:hover { background: #d8d2c2; }\n        `}\n`;","// src/api/mcp.js\n\nimport apiClient from './apiClient';\n\nconst BASE_URL = process.env.REACT_APP_API_BASE_URL || \"http://192.168.101.7:8000\";\n\n/**\n * 내 채팅 세션 ID 목록 조회\n * GET /chat_sessions/my\n * 반환: [id, id, …]\n */\nexport const getMyChatSessions = async (token) => {\n  const res = await fetch(`${BASE_URL}/chat_sessions/my`, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...(token && { Authorization: `Bearer ${token}` }),\n    },\n  });\n  if (!res.ok) throw new Error(\"세션 목록 조회 실패\");\n  return await res.json();\n};\n\n/**\n * 새 채팅 세션 생성\n * POST /chat_sessions/\n *   body: {}\n * POST 422 시 → GET /chat_sessions/my 의 최신 ID 사용\n */\nexport const createChatSession = async (token) => {\n  // 1) POST 시도\n  let res = await fetch(`${BASE_URL}/chat_sessions/`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...(token && { Authorization: `Bearer ${token}` }),\n    },\n    body: JSON.stringify({}),\n  });\n\n  // 2) 422 Unprocessable Entity → GET fallback\n  if (res.status === 422) {\n    console.warn(\"POST /chat_sessions/ 422 → GET /chat_sessions/my 로 대체\");\n    const ids = await getMyChatSessions(token);\n    if (ids.length === 0) throw new Error(\"사용 가능한 세션이 없습니다.\");\n    return { id: ids[0] };\n  }\n\n  if (!res.ok) throw new Error(\"새 세션 생성 실패\");\n  return await res.json(); // { id, user_id, created_at, updated_at }\n};\n\n/**\n * 채팅 세션 삭제\n * DELETE /chat_sessions/{session_id}\n */\nexport const deleteChatSession = async (sessionId, token) => {\n  const res = await fetch(`${BASE_URL}/chat_sessions/${sessionId}`, {\n    method: \"DELETE\",\n    headers: {\n      ...(token && { Authorization: `Bearer ${token}` }),\n    },\n  });\n  if (!res.ok) throw new Error(\"세션 삭제 실패\");\n};\n\n/**\n * 세션별 대화 이력 조회\n * GET /mcp_chat/history?session_id={sessionId}\n * 반환: [{ role, content, timestamp }, …]\n */\nexport const fetchChatHistory = async (sessionId, token) => {\n  const res = await fetch(\n    `${BASE_URL}/mcp_chat/history?session_id=${sessionId}`,\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ...(token && { Authorization: `Bearer ${token}` }),\n      },\n    }\n  );\n  if (!res.ok) throw new Error(\"히스토리 조회 실패\");\n  return await res.json();\n};\n\n/**\n * 메시지 전송 및 답변 수신\n * POST /mcp_chat/llm/chat/\n *   body: { data: { session_id, message }, model }\n * 반환: 챗봇 답변(문자열)\n */\nexport const sendChatMessage = async (sessionId, message, token) => {\n  const res = await fetch(`${BASE_URL}/mcp_chat/llm/chat/`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...(token && { Authorization: `Bearer ${token}` }),\n    },\n    body: JSON.stringify({\n      data: { session_id: Number(sessionId), message },\n    }),\n  });\n  if (!res.ok) throw new Error(\"메시지 전송 실패\");\n  return await res.json();\n};\n\n/**\n * 프롬프트(질문) → 챗봇 답변을 받아오는 통합 함수\n * (sessionId 관리 포함)\n */\nexport const fetchMcpResponse = async (text, userId, token) => {\n  let sessionId = localStorage.getItem(\"chatSessionId\");\n  if (!sessionId) {\n    const data = await createChatSession(token);\n    sessionId = data.id;\n    localStorage.setItem(\"chatSessionId\", sessionId);\n  }\n  const answer = await sendChatMessage(sessionId, text, token);\n  return { message: answer };\n};","// src/components/RecommendationContext.jsx (페이징 기능 추가)\n\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\n\nconst RecommendationContext = createContext();\n\nexport const useRecommendations = () => {\n    return useContext(RecommendationContext);\n};\n\nexport const RecommendationProvider = ({ children }) => {\n    // 페이징 관련 상태\n    const [recommendations, setRecommendations] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [totalPages, setTotalPages] = useState(1);\n    const [totalJobs, setTotalJobs] = useState(0);\n    const [isLoading, setIsLoading] = useState(true);\n    const [isFirstPage, setIsFirstPage] = useState(true); // 1페이지 여부\n    \n    // 1페이지 데이터 캐싱\n    const [firstPageData, setFirstPageData] = useState(null);\n    const [firstPageLoaded, setFirstPageLoaded] = useState(false);\n    \n    const token = localStorage.getItem(\"accessToken\");\n    const userId = localStorage.getItem(\"userId\");\n\n    // 페이지당 표시할 항목 수\n    const ITEMS_PER_PAGE = 9;\n\n    const BASE_URL = process.env.REACT_APP_API_BASE_URL || \"http://192.168.101.7:8000\";\n\n    // 1페이지용 API 호출 함수 (가장 적합한 공고)\n    const fetchFirstPageRecommendations = async () => {\n        if (!token || !userId) {\n            setIsLoading(false);\n            return;\n        }\n\n        // 이미 1페이지 데이터가 캐싱되어 있으면 재사용\n        if (firstPageLoaded && firstPageData) {\n            setRecommendations(firstPageData);\n            setCurrentPage(1);\n            setIsFirstPage(true);\n            setIsLoading(false);\n            return;\n        }\n\n        setIsLoading(true);\n            try {\n                const { data } = await axios.get(`${BASE_URL}/recommend/jobs/ids`, {\n                    headers: { Authorization: `Bearer ${token}` },\n                });\n                \n            // 1페이지는 항상 5개만 표시\n            const firstPageData = data.recommended_jobs?.slice(0, 5) || [];\n            setRecommendations(firstPageData);\n            setCurrentPage(1);\n            setIsFirstPage(true);\n            \n            // 1페이지 데이터 캐싱\n            setFirstPageData(firstPageData);\n            setFirstPageLoaded(true);\n            \n            // 1페이지 이후의 전체 페이지 수를 계산하기 위해 paginated API 호출\n            await fetchTotalPages();\n\n        } catch (error) {\n            console.error(\"1페이지 추천 공고 로딩 실패:\", error);\n            setRecommendations([]);\n            setCurrentPage(1);\n            setTotalPages(1);\n            setTotalJobs(0);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    // 전체 페이지 수를 가져오는 함수\n    const fetchTotalPages = async () => {\n        try {\n            const { data } = await axios.get(`${BASE_URL}/recommend/jobs/paginated`, {\n                headers: { Authorization: `Bearer ${token}` },\n                params: {\n                    page: 1,\n                    jobs_per_page: 1 // 최소한의 데이터만 가져와서 전체 개수 확인\n                }\n            });\n            \n            setTotalJobs(data.pagination?.total_jobs || 0);\n            // 1페이지는 이미 5개를 사용하므로, 나머지 페이지 수 계산\n            const remainingJobs = Math.max(0, (data.pagination?.total_jobs || 0) - 5);\n            const remainingPages = Math.ceil(remainingJobs / ITEMS_PER_PAGE);\n            setTotalPages(1 + remainingPages); // 1페이지 + 나머지 페이지들\n        } catch (error) {\n            console.error(\"전체 페이지 수 로딩 실패:\", error);\n            setTotalPages(1);\n            setTotalJobs(5);\n        }\n    };\n\n    // 2페이지부터의 API 호출 함수\n    const fetchPaginatedRecommendations = async (page) => {\n        if (!token || !userId) {\n            setIsLoading(false);\n            return;\n        }\n\n        setIsLoading(true);\n        try {\n            // page-1로 넘겨야 실제로 2페이지부터 6~10, 3페이지면 page=2로 요청\n            const apiPage = page - 1;\n            const { data } = await axios.get(`${BASE_URL}/recommend/jobs/paginated`, {\n                headers: { Authorization: `Bearer ${token}` },\n                params: {\n                    page: apiPage,\n                    jobs_per_page: ITEMS_PER_PAGE\n                }\n            });\n            \n            setRecommendations(data.jobs || []);\n            setCurrentPage(page);\n            setIsFirstPage(false);\n\n            } catch (error) {\n            console.error(\"페이징 추천 공고 로딩 실패:\", error);\n                setRecommendations([]);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n    // 초기 로딩 (1페이지)\n    useEffect(() => {\n        fetchFirstPageRecommendations();\n    }, [token, userId]);\n\n    // 페이지 변경 함수\n    const changePage = (newPage) => {\n        if (newPage < 1 || newPage > totalPages) return;\n        \n        if (newPage === 1) {\n            fetchFirstPageRecommendations();\n        } else {\n            fetchPaginatedRecommendations(newPage);\n            }\n    };\n\n    const value = {\n        recommendations,\n        isLoading,\n        currentPage,\n        totalPages,\n        totalJobs,\n        changePage,\n        isFirstPage,\n    };\n\n    return (\n        <RecommendationContext.Provider value={value}>\n            {children}\n        </RecommendationContext.Provider>\n    );\n};","import React, { createContext, useContext, useState } from 'react';\nimport apiClient from '../api/apiClient';\n\nconst SavedItemsContext = createContext();\n\nexport const useSavedItems = () => {\n  const context = useContext(SavedItemsContext);\n  if (!context) {\n    throw new Error('useSavedItems must be used within a SavedItemsProvider');\n  }\n  return context;\n};\n\nexport const SavedItemsProvider = ({ children }) => {\n  const [savedJobs, setSavedJobs] = useState([]);\n  const [savedRoadmaps, setSavedRoadmaps] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // 저장된 채용공고 불러오기\n  const fetchSavedJobs = async () => {\n    try {\n      setLoading(true);\n      const response = await apiClient.get('/api/saved-jobs');\n      setSavedJobs(response.data);\n    } catch (error) {\n      console.error('저장된 채용공고 불러오기 실패:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 저장된 로드맵 불러오기\n  const fetchSavedRoadmaps = async () => {\n    try {\n      setLoading(true);\n      const response = await apiClient.get('/api/saved-roadmaps');\n      setSavedRoadmaps(response.data);\n    } catch (error) {\n      console.error('저장된 로드맵 불러오기 실패:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 채용공고 저장\n  const saveJob = async (jobData) => {\n    try {\n      const response = await apiClient.post('/api/saved-jobs', jobData);\n      setSavedJobs(prev => [...prev, response.data]);\n      return { success: true };\n    } catch (error) {\n      console.error('채용공고 저장 실패:', error);\n      return { \n        success: false, \n        error: error.response?.data?.detail || '채용공고 저장에 실패했습니다.' \n      };\n    }\n  };\n\n  // 채용공고 삭제\n  const removeJob = async (jobId) => {\n    try {\n      await apiClient.delete(`/api/saved-jobs/${jobId}`);\n      setSavedJobs(prev => prev.filter(job => job.id !== jobId));\n      return { success: true };\n    } catch (error) {\n      console.error('채용공고 삭제 실패:', error);\n      return { \n        success: false, \n        error: error.response?.data?.detail || '채용공고 삭제에 실패했습니다.' \n      };\n    }\n  };\n\n  // 로드맵 저장\n  const saveRoadmap = async (roadmapData) => {\n    try {\n      const response = await apiClient.post('/api/saved-roadmaps', roadmapData);\n      setSavedRoadmaps(prev => [...prev, response.data]);\n      return { success: true };\n    } catch (error) {\n      console.error('로드맵 저장 실패:', error);\n      return { \n        success: false, \n        error: error.response?.data?.detail || '로드맵 저장에 실패했습니다.' \n      };\n    }\n  };\n\n  // 로드맵 삭제\n  const removeRoadmap = async (roadmapId) => {\n    try {\n      await apiClient.delete(`/api/saved-roadmaps/${roadmapId}`);\n      setSavedRoadmaps(prev => prev.filter(roadmap => roadmap.id !== roadmapId));\n      return { success: true };\n    } catch (error) {\n      console.error('로드맵 삭제 실패:', error);\n      return { \n        success: false, \n        error: error.response?.data?.detail || '로드맵 삭제에 실패했습니다.' \n      };\n    }\n  };\n\n  // 채용공고가 저장되어 있는지 확인\n  const isJobSaved = (jobId) => {\n    return savedJobs.some(job => job.id === jobId);\n  };\n\n  // 로드맵이 저장되어 있는지 확인\n  const isRoadmapSaved = (roadmapId) => {\n    return savedRoadmaps.some(roadmap => roadmap.id === roadmapId);\n  };\n\n  const value = {\n    savedJobs,\n    savedRoadmaps,\n    loading,\n    fetchSavedJobs,\n    fetchSavedRoadmaps,\n    saveJob,\n    removeJob,\n    saveRoadmap,\n    removeRoadmap,\n    isJobSaved,\n    isRoadmapSaved\n  };\n\n  return (\n    <SavedItemsContext.Provider value={value}>\n      {children}\n    </SavedItemsContext.Provider>\n  );\n}; ","// src/components/AiRecsPreviewCard.jsx (페이징 기능 추가)\n\nimport React, { useState, useEffect, useCallback, useMemo } from \"react\";\nimport styled, { css } from 'styled-components';\nimport { FaBullseye, FaChevronLeft, FaChevronRight, FaStar, FaHeart, FaRegHeart, FaMapMarkerAlt, FaBriefcase } from 'react-icons/fa';\nimport { useNavigate } from 'react-router-dom';\nimport { useRecommendations } from './RecommendationContext';\nimport apiClient from \"../api/apiClient\";\nimport { useSavedItems } from \"../contexts/SavedItemsContext\";\n\n// ... (TechStackDisplay 및 관련 스타일은 기존과 동일)\n// --- 기술 스택 표시 헬퍼 컴포넌트 (기존과 동일) ---\nconst TechStackTag = styled.span`\n  background-color: ${({ $darkMode }) => ($darkMode ? '#555' : '#e0e0e0')};\n  color: ${({ $darkMode }) => ($darkMode ? '#fff' : '#333')};\n  padding: 0.2rem 0.6rem;\n  border-radius: 12px;\n  font-size: 0.8rem;\n  font-weight: 500;\n  white-space: nowrap;\n`;\nconst TechStackContainer = styled.div`\n  flex: 3;\n  text-align: left;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: flex;\n  align-items: center;\n  gap: 0.4rem;\n  color: ${({ $darkMode }) => ($darkMode ? '#bbb' : '#555')};\n`;\nfunction TechStackDisplay({ stack, darkMode, maxVisible = 2 }) {\n    if (!stack) return <div style={{ flex: 3 }}>-</div>;\n\n    const skills = stack.split(',').map(s => s.trim()).filter(Boolean);\n    const visibleSkills = skills.slice(0, maxVisible);\n    const hiddenSkillsCount = skills.length - maxVisible;\n    const fullListTooltip = skills.join(', ');\n\n    return (\n        <TechStackContainer $darkMode={darkMode} title={hiddenSkillsCount > 0 ? fullListTooltip : ''}>\n            {visibleSkills.map((skill, index) => <TechStackTag key={index} $darkMode={darkMode}>{skill}</TechStackTag>)}\n            {hiddenSkillsCount > 0 && (\n                <TechStackTag $darkMode={darkMode}>+{hiddenSkillsCount}</TechStackTag>\n            )}\n        </TechStackContainer>\n    );\n}\n\n// --- 메인 컴포넌트 ---\nconst AiRecsPreviewCard = React.memo(({ darkMode, onJobDetail, onShowReason }) => {\n    // Context에서 페이징 정보도 가져오기\n    const { recommendations, isLoading, currentPage, totalPages, totalJobs, changePage, isFirstPage } = useRecommendations();\n    const navigate = useNavigate();\n\n    const handleTitleClick = (jobId) => {\n        if (onJobDetail) {\n            onJobDetail(jobId);\n        }\n    };\n\n    const handlePageChange = (newPage) => {\n        changePage(newPage);\n    };\n\n    return (\n        <HoverCard $darkMode={darkMode}>\n            <CardIconBg><FaBullseye /></CardIconBg>\n            \n            {/* 헤더 영역 - 제목과 페이징 컨트롤 */}\n            <HeaderSection>\n                <TitleSection>\n                    <SectionTitle>\n                        <HighlightBar />\n                        <span>AI 추천 공고</span>\n                        {isFirstPage && (\n                            <FirstPageBadge $darkMode={darkMode}>\n                                <FaStar />\n                                <span>최고추천</span>\n                            </FirstPageBadge>\n                        )}\n                    </SectionTitle>\n                    <IntroText>\n                        {isFirstPage \n                            ? \"가장 적합한 채용 공고를 추천해드려요!\"\n                            : \"딱 맞는 채용 공고를 추천해드려요!\"\n                        }\n                    </IntroText>\n                </TitleSection>\n                \n                {/* 페이징 컨트롤을 우측 상단에 배치 - 항상 표시 */}\n                <PaginationWrapper>\n                {totalPages > 1 && (\n                        <PaginationControls>\n                            <PageButton \n                                $darkMode={darkMode} \n                                $disabled={currentPage === 1}\n                                onClick={() => handlePageChange(currentPage - 1)}\n                                disabled={currentPage === 1}\n                            >\n                                <FaChevronLeft />\n                            </PageButton>\n                            \n                            <PageNumbers>\n                                {Array.from({ length: Math.min(5, totalPages) }, (_, i) => {\n                                    let pageNum;\n                                    if (totalPages <= 5) {\n                                        pageNum = i + 1;\n                                    } else if (currentPage <= 3) {\n                                        pageNum = i + 1;\n                                    } else if (currentPage >= totalPages - 2) {\n                                        pageNum = totalPages - 4 + i;\n                                    } else {\n                                        pageNum = currentPage - 2 + i;\n                                    }\n                                    \n                                    return (\n                                        <PageNumber\n                                            key={pageNum}\n                                            $darkMode={darkMode}\n                                            $active={pageNum === currentPage}\n                                            onClick={() => handlePageChange(pageNum)}\n                                        >\n                                            {pageNum}\n                                        </PageNumber>\n                                    );\n                                })}\n                            </PageNumbers>\n                            \n                            <PageButton \n                                $darkMode={darkMode} \n                                $disabled={currentPage === totalPages}\n                                onClick={() => handlePageChange(currentPage + 1)}\n                                disabled={currentPage === totalPages}\n                            >\n                                <FaChevronRight />\n                            </PageButton>\n                        </PaginationControls>\n                    )}\n                    </PaginationWrapper>\n            </HeaderSection>\n\n            <ContentWrapper>\n                <ColumnHeader>\n                    <ColumnTitle style={{ flex: 4, textAlign: \"left\" }}>공고명</ColumnTitle>\n                    <ColumnTitle style={{ flex: 3, textAlign: \"left\" }}>기술 스택</ColumnTitle>\n                    <ColumnTitle style={{ flex: 2, textAlign: \"center\" }}>적합도</ColumnTitle>\n                    <ColumnTitle style={{ flex: 2, textAlign: \"center\" }}>추천 이유</ColumnTitle>\n                </ColumnHeader>\n                <PreviewList>\n                    {isLoading ? (\n                        <LoadingMessage>AI 추천을 불러오는 중...</LoadingMessage>\n                    ) : recommendations.length > 0 ? (\n                        (() => {\n                            // jobs 배열 길이 콘솔 출력\n                            console.log('현재 페이지 jobs 개수:', recommendations.length);\n                            // 5개 미만이면 빈 row로 채움\n                            const filled = [...recommendations];\n                            while (filled.length < 5) {\n                                filled.push({ id: `empty-${filled.length}`, title: '', tech_stack: '', similarity: '', isEmpty: true });\n                            }\n                            return filled.map((job, idx) => (\n                                <PreviewItem key={job.id || idx} $darkMode={darkMode} style={job.isEmpty ? { opacity: 0.3, pointerEvents: 'none' } : {}}>\n                                    <JobTitlePreview\n                                        $darkMode={darkMode}\n                                        title={job.title || ''}\n                                        onClick={() => job.isEmpty ? undefined : handleTitleClick(job.id)}\n                                    >\n                                        <strong>{job.title}</strong>\n                                    </JobTitlePreview>\n                                    <TechStackDisplay stack={job.tech_stack} darkMode={darkMode} />\n                                    <MatchPercent $match={job.similarity * 100}>\n                                        {job.similarity ? (job.similarity * 100).toFixed(1) + '%' : ''}\n                                    </MatchPercent>\n                                    <ReasonButtonWrapper>\n                                        {!job.isEmpty && onShowReason && (\n                                            <ReasonButton onClick={() => onShowReason(job)} $darkMode={darkMode}>알아보기</ReasonButton>\n                                        )}\n                                    </ReasonButtonWrapper>\n                                </PreviewItem>\n                            ));\n                        })()\n                    ) : (\n                        <LoadingMessage>추천 공고를 불러오지 못했습니다.</LoadingMessage>\n                    )}\n                </PreviewList>\n            </ContentWrapper>\n        </HoverCard>\n    );\n});\n\n// --- 스타일 정의 (페이징 UI 스타일 추가) ---\n\n// 헤더 섹션 스타일 추가\nconst HeaderSection = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: 1rem;\n  width: 100%;\n`;\n\nconst TitleSection = styled.div`\n  flex: 1;\n`;\n\n// 1페이지 배지 스타일 수정 - 줄바꿈 방지\nconst FirstPageBadge = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.3rem;\n  background: linear-gradient(135deg, #ff6b6b, #ff8e53);\n  color: white;\n  padding: 0.3rem 0.6rem;\n  border-radius: 1rem;\n  font-size: 0.7rem;\n  font-weight: 600;\n  margin-left: 0.8rem;\n  box-shadow: 0 2px 4px rgba(255, 107, 107, 0.3);\n  white-space: nowrap; // 줄바꿈 방지\n  ${({ $darkMode }) => $darkMode && css`\n    background: linear-gradient(135deg, #ff8e53, #ff6b6b);\n  `}\n`;\n\n// 문제 2 해결을 위한 Wrapper\nconst ContentWrapper = styled.div`\n  min-height: 280px; // 로딩 중에도 이 높이를 유지하여 크기 변경 방지\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  overflow: hidden; // 가로 스크롤 방지\n`;\n\nconst LoadingMessage = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  min-height: 200px;\n  color: ${({ $darkMode }) => $darkMode ? '#888' : '#666'};\n`;\n// ... (이하 다른 모든 스타일은 이전 답변과 동일하게 유지)\nconst HoverCard = styled.div`\n  position: relative;\n  background: #edece9;\n  border-radius: 2rem;\n  padding: 2rem;\n  transition: transform 0.2s ease;\n  width: 100%; // 110%에서 100%로 변경하여 겹침 방지\n  overflow: hidden; // 가로 스크롤 방지\n  ${({ $darkMode }) => $darkMode && css`background: #2b2b2b; color: #fff;`}\n`;\nconst SectionTitle = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.6rem;\n  font-size: 1.7rem;\n  font-weight: 800;\n  margin-bottom: 0rem;\n  flex-wrap: nowrap; // 줄바꿈 방지\n`;\nconst HighlightBar = styled.div`\n  width: 8px;\n  height: 1.6rem;\n  background: #ffc400;\n  border-radius: 4px;\n`;\nconst IntroText = styled.p`\n  font-size: 0.95rem;\n  line-height: 1.6;\n  color: #6c5f3f;\n  margin-bottom: 0rem;\n  margin-top: 0.5rem;\n  white-space: nowrap; // 줄바꿈 방지\n  ${({ $darkMode }) => $darkMode && css`color: #ccc;`}\n`;\nconst CardIconBg = styled.div`\n  position: absolute;\n  top: 0.6rem;\n  right: 0.6rem;\n  font-size: 6.5rem;\n  color: rgb(214, 214, 213);\n  opacity: 0.5;\n  z-index: 0;\n  pointer-events: none;\n  ${({ $darkMode }) => $darkMode && css`color: #444;`}\n`;\nconst ColumnHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  font-size: 1.05rem;\n  font-weight: 600;\n  padding: 0 0.2rem;\n  color: #7e6a39;\n  margin-bottom: 0.6rem;\n  min-width: 0; // flex 아이템이 축소될 수 있도록 설정\n  ${({ $darkMode }) => $darkMode && css`color: #aaa;`}\n`;\nconst ColumnTitle = styled.span`\n  font-size: 1.05rem;\n  font-weight: 600;\n  color: #7e6a39;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\nconst PreviewList = styled.ul`\n  flex-grow: 1; /* Wrapper 내에서 남은 공간을 채우도록 함 */\n  width: 100%;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  min-width: 0; // flex 아이템이 축소될 수 있도록 설정\n`;\nconst PreviewItem = styled.li`\n  display: flex;\n  align-items: center;\n  gap: 0.8rem;\n  width: 100%;\n  font-size: 1rem;\n  padding: 0.8rem 0.4rem;\n  border-radius: 8px;\n  transition: background-color 0.2s;\n  min-width: 0; // flex 아이템이 축소될 수 있도록 설정\n`;\nconst JobTitlePreview = styled.span`\n  font-weight: 600;\n  flex: 4;\n  text-align: left;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  color: ${({ $darkMode }) => ($darkMode ? '#eee' : '#333')};\n  cursor: pointer;\n  min-width: 0; // flex 아이템이 축소될 수 있도록 설정\n  &:hover {\n    text-decoration: underline;\n  }\n`;\nconst MatchPercent = styled.span`\n  font-size: 1.1rem;\n  font-weight: 700;\n  flex: 2;\n  text-align: center;\n  color: ${({ $match }) =>\n    $match >= 90 ? \"#00796B\" : $match >= 80 ? \"#F57C00\" : \"#D32F2F\"};\n  min-width: 0; // flex 아이템이 축소될 수 있도록 설정\n`;\nconst ReasonButtonWrapper = styled.div`\n  flex: 2;\n  text-align: center;\n  min-width: 0; // flex 아이템이 축소될 수 있도록 설정\n`;\nconst ReasonButton = styled.button`\n  background: ${({ $darkMode }) => $darkMode ? '#444' : '#e0e0e0'};\n  color: ${({ $darkMode }) => $darkMode ? '#fff' : '#333'};\n  border: 1px solid ${({ $darkMode }) => $darkMode ? '#555' : '#ccc'};\n  padding: 0.4rem 0.8rem;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 0.9rem;\n  font-weight: 500;\n  transition: background-color 0.2s;\n  white-space: nowrap; // 버튼 텍스트 줄바꿈 방지\n\n  &:hover {\n    background: ${({ $darkMode }) => $darkMode ? '#555' : '#d0d0d0'};\n  }\n`;\n\n// 페이징 관련 스타일 수정\nconst PaginationWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  gap: 0.5rem;\n  min-width: 200px;\n`;\n\nconst PaginationControls = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.3rem;\n`;\n\nconst PageButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 1.8rem;\n  height: 1.8rem;\n  border: 1px solid ${({ $darkMode, $disabled }) => \n    $disabled \n      ? ($darkMode ? '#555' : '#ccc') \n      : ($darkMode ? '#666' : '#ddd')};\n  background: ${({ $darkMode, $disabled }) => \n    $disabled \n      ? ($darkMode ? '#333' : '#f5f5f5') \n      : ($darkMode ? '#444' : '#fff')};\n  color: ${({ $darkMode, $disabled }) => \n    $disabled \n      ? ($darkMode ? '#666' : '#999') \n      : ($darkMode ? '#ccc' : '#333')};\n  border-radius: 0.3rem;\n  cursor: ${({ $disabled }) => $disabled ? 'not-allowed' : 'pointer'};\n  transition: all 0.2s;\n  font-size: 0.7rem;\n\n  &:hover:not(:disabled) {\n    background: ${({ $darkMode }) => $darkMode ? '#555' : '#f0f0f0'};\n  }\n`;\n\nconst PageNumbers = styled.div`\n  display: flex;\n  gap: 0.2rem;\n`;\n\nconst PageNumber = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 1.8rem;\n  height: 1.8rem;\n  border: 1px solid ${({ $darkMode, $active }) => \n    $active \n      ? ($darkMode ? '#ffc107' : '#ffc107') \n      : ($darkMode ? '#666' : '#ddd')};\n  background: ${({ $darkMode, $active }) => \n    $active \n      ? ($darkMode ? '#ffc107' : '#ffc107') \n      : ($darkMode ? '#444' : '#fff')};\n  color: ${({ $darkMode, $active }) => \n    $active \n      ? ($darkMode ? '#000' : '#000') \n      : ($darkMode ? '#ccc' : '#333')};\n  border-radius: 0.3rem;\n  cursor: pointer;\n  transition: all 0.2s;\n  font-size: 0.8rem;\n  font-weight: ${({ $active }) => $active ? '600' : '400'};\n\n  &:hover {\n    background: ${({ $darkMode, $active }) => \n      $active \n        ? ($darkMode ? '#ffb300' : '#ffb300') \n        : ($darkMode ? '#555' : '#f0f0f0')};\n  }\n`;\n\nexport default AiRecsPreviewCard;","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { FaArrowLeft, FaBuilding, FaCalendarAlt, FaCheckCircle, FaLaptop, FaClock, FaBookOpen } from \"react-icons/fa\";\nimport { useNavigate, useLocation, useParams } from \"react-router-dom\";\nimport axios from 'axios';\n\nconst BASE_URL = process.env.REACT_APP_API_BASE_URL || \"http://192.168.101.7:8000\";\nconst fetchRoadmapById = async (roadmapId) => {\n  const token = localStorage.getItem(\"accessToken\");\n  const response = await axios.get(`${BASE_URL}/roadmaps/${roadmapId}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.data;\n};\n\nconst formatDate = (dateString) => {\n    if (!dateString) return \"N/A\";\n    const date = new Date(dateString);\n    return date.toLocaleDateString('ko-KR', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n    });\n};\n\nconst InfoItem = ({ icon, label, value }) => (\n  <InfoItemWrapper>\n    <InfoLabel>{icon} {label}</InfoLabel>\n    <InfoValue>{value}</InfoValue>\n  </InfoItemWrapper>\n);\n\nexport default function CareerRoadmapDetail({ roadmapId, onBack, darkMode }) { \n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const [roadmap, setRoadmap] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!roadmapId) return;\n\n    const getRoadmapDetails = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const data = await fetchRoadmapById(roadmapId);\n        setRoadmap(data);\n      } catch (err) {\n        setError(\"로드맵 정보를 불러오는 데 실패했습니다.\");\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getRoadmapDetails();\n  }, [roadmapId]);\n\n  const handleBackClick = () => {\n    if (location.state?.from === 'saved') {\n      navigate('/aijob', { state: { goTo: 'saved', initialTab: 'roadmaps' } });\n    } else if (onBack) {\n      onBack();\n    } else {\n      navigate(-1);\n    }\n  };\n\n  if (loading) return <PageWrapper><p>상세 정보를 불러오는 중...</p></PageWrapper>;\n  if (error) return <PageWrapper><p style={{ color: 'red' }}>오류: {error}</p></PageWrapper>;\n  if (!roadmap) return <PageWrapper><p>로드맵 정보를 찾을 수 없습니다.</p></PageWrapper>;\n\n  const backButtonText = location.state?.from === 'saved' ? '찜한 로드맵' : '뒤로가기';\n\n  return (\n    <OverlayContainer $darkMode={darkMode}>\n      <Card $darkMode={darkMode}>\n        <BackBtn onClick={onBack} $darkMode={darkMode}>\n          ← 뒤로가기\n        </BackBtn>\n\n        <SectionHeader>\n            <LocalBack onClick={handleBackClick} $darkMode={darkMode}>\n                <FaArrowLeft /> {backButtonText}\n            </LocalBack>\n            <div>\n                <SubTitle><FaBuilding /> {roadmap.company}</SubTitle>\n                <Title>{roadmap.name}</Title>\n            </div>\n        </SectionHeader>\n\n        <InfoGrid>\n            <InfoItem icon={<FaCheckCircle />} label=\"모집 상태\" value={roadmap.status} />\n            <InfoItem icon={<FaCalendarAlt />} label=\"모집 마감\" value={formatDate(roadmap.deadline)} />\n            <InfoItem icon={<FaCalendarAlt />} label=\"코스 기간\" value={`${formatDate(roadmap.start_date)} ~ ${formatDate(roadmap.end_date)}`} />\n            <InfoItem icon={<FaLaptop />} label=\"장소\" value={`${roadmap.location} (${roadmap.onoff})`} />\n            <InfoItem icon={<FaClock />} label=\"참여 시간\" value={roadmap.participation_time} />\n            <InfoItem icon={<FaBookOpen />} label=\"코스 분야\" value={roadmap.program_course} />\n        </InfoGrid>\n\n        <SkillsSection>\n            <h3><span role=\"img\" aria-label=\"tools\">��️</span> 요구 기술 스택</h3>\n            <SkillList>\n            {(roadmap.skill_description || []).map((skill, index) => (\n                <SkillTag key={index}>{skill}</SkillTag>\n            ))}\n            </SkillList>\n        </SkillsSection>\n      </Card>\n    </OverlayContainer>\n  );\n}\n\n/* ───── 스타일 (기존과 동일) ───── */\nconst PageWrapper = styled.div`\n    min-height: 100vh;\n    padding: 2rem;\n    background: ${({ $darkMode }) => $darkMode ? '#121212' : '#f8f9fa'};\n`;\nconst DetailCard = styled.div`\n  width: 100%;\n  max-width: 900px;\n  margin: 0 auto;\n  border-radius: 1rem;\n  padding: 2.5rem 3rem;\n  background: ${({ $darkMode }) => ($darkMode ? \"#2a2a2a\" : \"#fff\")};\n  color: ${({ $darkMode }) => ($darkMode ? \"#eee\" : \"#333\")};\n  box-shadow: 0 4px 12px rgba(0,0,0,0.1);\n`;\nconst SectionHeader = styled.div`\n  display: flex;\n  align-items: flex-start;\n  gap: 1.5rem;\n  margin-bottom: 2.5rem;\n  border-bottom: 1px solid ${({ $darkMode }) => ($darkMode ? \"#444\" : \"#eee\")};\n  padding-bottom: 1.5rem;\n`;\nconst LocalBack = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  border: none;\n  background: none;\n  font-size: 1rem;\n  font-weight: 600;\n  cursor: pointer;\n  white-space: nowrap;\n  margin-top: 1rem;\n  color: ${({ $darkMode }) => ($darkMode ? \"#ffc107\" : \"#555\")};\n  &:hover { opacity: 0.8; }\n`;\nconst SubTitle = styled.h3`\n  font-size: 1.1rem;\n  font-weight: 600;\n  color: ${({ $darkMode }) => ($darkMode ? \"#ccc\" : \"#666\")};\n  margin: 0 0 0.5rem;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n`;\nconst Title = styled.h2`\n  font-size: 2rem;\n  font-weight: 800;\n  margin: 0;\n  color: ${({ $darkMode }) => ($darkMode ? \"#fff\" : \"#000\")};\n`;\nconst InfoGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: 1.8rem;\n  margin-bottom: 2.5rem;\n`;\nconst InfoItemWrapper = styled.div`\n  background: ${({ $darkMode }) => ($darkMode ? \"#333\" : \"#fafafa\")};\n  padding: 1rem;\n  border-radius: 0.5rem;\n  border-left: 4px solid #ffc107;\n`;\nconst InfoLabel = styled.div`\n  font-size: 0.9rem;\n  font-weight: 600;\n  color: ${({ $darkMode }) => ($darkMode ? \"#aaa\" : \"#777\")};\n  margin-bottom: 0.5rem;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n`;\nconst InfoValue = styled.div`\n  font-size: 1.1rem;\n  font-weight: 500;\n  color: ${({ $darkMode }) => ($darkMode ? \"#eee\" : \"#333\")};\n`;\nconst SkillsSection = styled.div`\n  margin-top: 2.5rem;\n  h3 {\n    font-size: 1.4rem;\n    margin-bottom: 1.2rem;\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    color: ${({ $darkMode }) => $darkMode ? '#eee' : '#333'};\n  }\n`;\nconst SkillList = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0.7rem;\n`;\nconst SkillTag = styled.span`\n  background: #ffc107;\n  color: #333;\n  padding: 0.4rem 1rem;\n  border-radius: 999px;\n  font-size: 1rem;\n  font-weight: 600;\n`;\n\n/* 상세 페이지 오버레이 스타일 추가 */\nconst OverlayContainer = styled.div`\n  width: 100%;\n  max-width: 900px;\n  max-height: 90vh;\n  overflow-y: auto;\n  background: ${({ $darkMode }) => $darkMode ? '#1a1a1a' : '#f8f6f1'};\n  border-radius: 1rem;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);\n`;\n\nconst Card = styled.div`\n  position: relative;\n  width: 100%;\n  background: ${({ $darkMode }) => $darkMode ? '#2a2a2a' : '#fff'};\n  border-radius: 1rem;\n  padding: 2.5rem;\n  color: ${({ $darkMode }) => $darkMode ? '#fff' : '#333'};\n`;\n\nconst BackBtn = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  border: none;\n  background: none;\n  font-size: 1rem;\n  font-weight: 600;\n  cursor: pointer;\n  white-space: nowrap;\n  margin-bottom: 2rem;\n  color: ${({ $darkMode }) => ($darkMode ? \"#ffc107\" : \"#555\")};\n  &:hover { opacity: 0.8; }\n`;","// src/components/SavedJobDetail.jsx\nimport React, { useEffect, useState } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport axios from \"axios\";\n\nconst BASE_URL = process.env.REACT_APP_API_BASE_URL || \"http://192.168.101.7:8000\";\n\nexport default function SavedJobDetail({ jobId, onBack, darkMode }) {\n  const [job, setJob] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (!jobId) return;\n\n    const fetchJobDetail = async () => {\n      setLoading(true);\n      try {\n        const token = localStorage.getItem(\"accessToken\");\n        const headers = token ? { Authorization: `Bearer ${token}` } : {};\n\n        const res = await axios.get(`${BASE_URL}/job_posts/${jobId}`, { headers });\n        setJob(res.data);\n      } catch (err) {\n        if (err.response?.status === 404) {\n          alert(\"존재하지 않는 공고입니다.\");\n        } else {\n          alert(\"공고를 불러오는 데 실패했습니다.\");\n        }\n        console.error(err);\n        if (onBack) onBack(); // 에러 발생 시 뒤로가기\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchJobDetail();\n  }, [jobId, onBack]);\n\n  if (loading) return <PageWrap><Card>⏳ 로딩 중...</Card></PageWrap>;\n  if (!job) return <PageWrap><Card>공고를 찾을 수 없습니다.</Card></PageWrap>;\n\n  return (\n    <OverlayContainer $darkMode={darkMode}>\n      <Card $darkMode={darkMode}>\n        {/* 뒤로가기 버튼 */}\n        <BackBtn onClick={onBack} $darkMode={darkMode}>\n          ← 뒤로가기\n        </BackBtn>\n\n        {/* 유사도 배지 */}\n        {job.similarity !== null && typeof job.similarity === 'number' && (\n          <SimilarityBadge $score={job.similarity}>\n            적합도 {(job.similarity * 100).toFixed(0)}%\n          </SimilarityBadge>\n        )}\n\n        <Title $darkMode={darkMode}>{job.title}</Title>\n        <Sub $darkMode={darkMode}>{job.company_name} · {job.address}</Sub>\n\n        <Section $darkMode={darkMode}>\n          <h3>주요 업무</h3>\n          <p>{job.main_tasks || \"정보 없음\"}</p>\n        </Section>\n        <Section $darkMode={darkMode}>\n          <h3>자격 요건</h3>\n          <p>{job.qualifications || \"정보 없음\"}</p>\n        </Section>\n        <Section $darkMode={darkMode}>\n          <h3>기술 스택</h3>\n          <p>{job.tech_stack || \"정보 없음\"}</p>\n        </Section>\n        <Section $darkMode={darkMode}>\n          <h3>고용 형태</h3>\n          <p>{job.employment_type} · {job.applicant_type}</p>\n        </Section>\n        <Section $darkMode={darkMode}>\n          <h3>공고 기간</h3>\n          <p>{job.posting_date?.slice(0,10)} ~ {job.deadline?.slice(0,10) || \"상시\"}</p>\n        </Section>\n      </Card>\n    </OverlayContainer>\n  );\n}\n\n/* ───── 스타일 수정 ───── */\nconst fadeIn = keyframes`\n  from { opacity: 0; transform: translateY(20px); }\n  to { opacity: 1; transform: translateY(0); }\n`;\n\nconst PageWrap = styled.div`\n  min-height: 100vh;\n  background: ${({ $darkMode }) => $darkMode ? '#1a1a1a' : '#f8f6f1'};\n  padding: 2rem 1rem;\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n`;\n\nconst OverlayContainer = styled.div`\n  width: 100%;\n  max-width: 900px;\n  max-height: 90vh;\n  overflow-y: auto;\n  background: ${({ $darkMode }) => $darkMode ? '#1a1a1a' : '#f8f6f1'};\n  border-radius: 1rem;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);\n`;\n\nconst Card = styled.div`\n  position: relative;\n  width: 100%;\n  background: ${({ $darkMode }) => $darkMode ? '#2a2a2a' : '#fff'};\n  border-radius: 1rem;\n  padding: 2.5rem;\n  color: ${({ $darkMode }) => $darkMode ? '#fff' : '#333'};\n`;\n\nconst BackBtn = styled.button`\n  background: none;\n  border: none;\n  color: ${({ $darkMode }) => $darkMode ? '#ccc' : '#555'};\n  font-size: 0.95rem;\n  margin-bottom: 1.2rem;\n  cursor: pointer;\n  padding: 0.5rem 1rem;\n  border-radius: 0.5rem;\n  transition: all 0.2s ease;\n\n  &:hover {\n    color: ${({ $darkMode }) => $darkMode ? '#fff' : '#000'};\n    background: ${({ $darkMode }) => $darkMode ? '#444' : '#f0f0f0'};\n    font-weight: bold;\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 1.8rem;\n  color: #ff9900;\n  margin-bottom: 0.5rem;\n`;\n\nconst Sub = styled.div`\n  font-size: 1rem;\n  color: ${({ $darkMode }) => $darkMode ? '#ccc' : '#555'};\n  margin-bottom: 2rem;\n`;\n\nconst Section = styled.section`\n  margin-bottom: 1.5rem;\n  h3 {\n    font-size: 1.1rem;\n    color: ${({ $darkMode }) => $darkMode ? '#fff' : '#333'};\n    margin-bottom: 0.3rem;\n  }\n  p {\n    white-space: pre-wrap;\n    line-height: 1.6;\n    color: ${({ $darkMode }) => $darkMode ? '#ccc' : '#444'};\n  }\n`;\n\nconst SimilarityBadge = styled.div`\n  position: absolute;\n  top: 2.5rem;\n  right: 2.5rem;\n  background-color: ${({ $score }) =>\n    $score >= 0.7 ? '#2a9d8f' : $score >= 0.4 ? '#f4a261' : '#e76f51'};\n  color: white;\n  padding: 6px 12px;\n  border-radius: 16px;\n  font-size: 0.9rem;\n  font-weight: bold;\n`;","// src/components/RecommendationReason.jsx (모달/팝업용으로 수정)\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\nexport default function RecommendationReason({ darkMode, job, onClose }) {\n    const [explanation, setExplanation] = useState('');\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const token = localStorage.getItem(\"accessToken\");\n    const BASE_URL = process.env.REACT_APP_API_BASE_URL || \"http://192.168.101.7:8000\";\n\n    useEffect(() => {\n        if (!job) return;\n        if (!token) {\n            setError(\"추천 이유를 보려면 로그인이 필요합니다.\");\n            setIsLoading(false);\n            return;\n        }\n        const fetchExplanation = async () => {\n            setIsLoading(true);\n            setError(null);\n            try {\n                const response = await axios.post(\n                    `${BASE_URL}/recommend/jobs/explanation`,\n                    [job.id],\n                    { headers: { Authorization: `Bearer ${token}` } }\n                );\n                const reasonText = response.data?.explanations;\n                if (reasonText) {\n                    setExplanation(reasonText);\n                } else {\n                    setError(\"응답 데이터 형식이 올바르지 않습니다.\");\n                }\n            } catch (err) {\n                console.error(\"추천 이유 로딩 실패:\", err);\n                setError(\"추천 이유를 불러오는 중 오류가 발생했습니다.\");\n            } finally {\n                setIsLoading(false);\n            }\n        };\n        fetchExplanation();\n    }, [job, token]);\n\n    return (\n        <ModalCard $darkMode={darkMode}>\n            <ModalHeader>\n                <Title>{job?.title || \"공고 정보 로딩 중...\"}</Title>\n                <CloseBtn onClick={onClose} $darkMode={darkMode}>×</CloseBtn>\n            </ModalHeader>\n            <SubTitle>AI 추천 이유</SubTitle>\n            <ContentArea>\n                {isLoading ? (\n                    <LoadingText>⏳ 추천 이유를 분석 중입니다...</LoadingText>\n                ) : error ? (\n                    <ErrorMessage>{error}</ErrorMessage>\n                ) : (\n                    <ExplanationText $darkMode={darkMode}>{explanation}</ExplanationText>\n                )}\n            </ContentArea>\n        </ModalCard>\n    );\n}\n\nconst ModalCard = styled.div`\n  background: ${({ $darkMode }) => $darkMode ? '#232323' : '#fff'};\n  color: ${({ $darkMode }) => $darkMode ? '#eee' : '#222'};\n  border-radius: 18px;\n  padding: 2.8rem 2.6rem 2.4rem 2.6rem;\n  width: 100%;\n  max-width: 700px;\n  min-width: 340px;\n  min-height: 320px;\n  max-height: 80vh;\n  box-shadow: 0 8px 32px rgba(0,0,0,0.18);\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n`;\nconst ModalHeader = styled.div`\n    display: flex;\n    align-items: center;\n  justify-content: space-between;\n  margin-bottom: 0.7rem;\n`;\nconst Title = styled.h2`\n  font-size: 1.25rem;\n  font-weight: 700;\n  margin: 0;\n  flex: 1;\n  white-space: pre-line;\n`;\nconst SubTitle = styled.div`\n  font-size: 1.05rem;\n  color: #ff9800;\n  font-weight: 600;\n  margin-bottom: 0.7rem;\n`;\nconst CloseBtn = styled.button`\n  background: none;\n    border: none;\n  color: ${({ $darkMode }) => $darkMode ? '#aaa' : '#888'};\n  font-size: 2.1rem;\n  font-weight: 700;\n    cursor: pointer;\n  margin-left: 1.2rem;\n  margin-top: -0.5rem;\n    transition: color 0.2s;\n  &:hover { color: ${({ $darkMode }) => $darkMode ? '#fff' : '#222'}; }\n`;\nconst ContentArea = styled.div`\n  min-height: 160px;\n  max-height: 420px;\n  overflow-y: auto;\n    margin-bottom: 0.5rem;\n  scrollbar-width: thin;\n  scrollbar-color: #bbb #eee;\n  &::-webkit-scrollbar {\n    width: 8px;\n    background: #eee;\n  }\n  &::-webkit-scrollbar-thumb {\n    background: #bbb;\n    border-radius: 4px;\n  }\n`;\nconst LoadingText = styled.p`\n  text-align: center;\n  padding: 2.5rem 0;\n  font-size: 1.1rem;\n`;\nconst ErrorMessage = styled.div`\n  color: #f44336;\n  font-weight: bold;\n  text-align: center;\n  padding: 2.5rem 0;\n`;\nconst ExplanationText = styled.div`\n  font-size: 1.18rem;\n  line-height: 2.15;\n  color: ${({ $darkMode }) => $darkMode ? '#fff' : '#222'};\n  background: ${({ $darkMode }) => $darkMode ? 'rgba(255,255,255,0.04)' : 'rgba(0,0,0,0.03)'};\n  border-radius: 10px;\n  padding: 1.5rem 1.2rem;\n  white-space: pre-line;\n  word-break: keep-all;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.04);\n  font-family: 'Apple SD Gothic Neo', 'Noto Sans KR', 'Malgun Gothic', sans-serif;\n  letter-spacing: 0.01em;\n  /* 단락 간 여백 */\n  p, ul, ol, li {\n    margin-bottom: 1.1em;\n    margin-top: 0.2em;\n  }\n`;","/* ───────── src/components/MainContent.jsx ───────── */\nimport React, { useState, useEffect } from \"react\";\nimport styled, { keyframes, css } from \"styled-components\";\nimport {\n  FaClipboardCheck,\n  FaHeart\n} from \"react-icons/fa\";\nimport { FiSearch } from \"react-icons/fi\";\nimport TodoList from \"./TodoList\";\nimport PromptBar from \"./PromptBar\";\nimport ProfileMenu from \"./ProfileMenu\";\nimport { useNavigate, Outlet } from \"react-router-dom\";\nimport { fetchMcpResponse } from \"../api/mcp\";\nimport { useLocation } from \"react-router-dom\";\nimport AiRecsPreviewCard from \"./AiRecsPreviewCard\"; \nimport CareerRoadmapDetail from \"./CareerRoadmapDetail\";\nimport SavedJobDetail from \"./SavedJobDetail\";\nimport RecommendationReason from \"./RecommendationReason\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport apiClient from \"../api/apiClient\";\n\nexport default function MainContent({\n  darkMode,\n  toggleTheme,\n}) {\n  const [roadmapDetailId, setRoadmapDetailId] = useState(null);\n  const [jobDetailId, setJobDetailId] = useState(null);\n  const [selectedJob, setSelectedJob] = useState(\"프론트엔드 개발자\");\n  const [selectedFieldType, setSelectedFieldType] = useState(\"tech_stack\");\n  const [selectedReasonJob, setSelectedReasonJob] = useState(null);\n\n  /* ───────── 상태 ───────── */\n  const { isAuthenticated } = useAuth();\n  const location = useLocation();\n\n\n  /* (예시) 로그인 여부 */\n  const isGuest = !isAuthenticated;\n\n  // ➊ 상태 정의 -> 고정 프롬포트로 이동시키는 작업\n  const [chatHistory, setChatHistory] = useState([]);\n  const [sessionId] = useState(() => {\n    const saved = localStorage.getItem(\"chatSessionId\");\n    const id = saved || crypto.randomUUID();\n    localStorage.setItem(\"chatSessionId\", id);\n    return id;\n  }); \n\n  const navigate = useNavigate();\n\n  // useState의 초기값 함수를 사용하여 localStorage에서 userId를 가져옵니다.\n  const [userId] = useState(() => localStorage.getItem(\"userId\"));\n  \n  \n  \n  const handlePromptSubmit = async (text) => {\n    const trimmed = text.trim();\n    if (!trimmed) return;\n  \n    setChatHistory((prev) => [...prev, { sender: \"user\", text: trimmed }]);\n  \n    try {\n      const token = localStorage.getItem(\"accessToken\");\n      const res = await fetchMcpResponse(trimmed, userId, token);\n      const assistantMsg = res?.message || \"⚠ 메시지 없음\";\n      setChatHistory((prev) => [...prev, { sender: \"assistant\", text: assistantMsg }]);\n    } catch (err) {\n      console.error(\"응답 오류:\", err);\n      setChatHistory((prev) => [...prev, { sender: \"assistant\", text: \"⚠ 서버 오류\" }]);\n    }\n  };\n  \n    /* ───────── 랜딩 카드(홈) ───────── */\n    function LandingCards() {\n      return (\n        <>\n         <MainCards>\n          <AiRecsPreviewCard\n            darkMode={darkMode}\n            onJobDetail={setJobDetailId}\n            onShowReason={setSelectedReasonJob}\n          />\n         \n          <HoverCard $darkMode={darkMode} style={{ flexDirection: \"column\", alignItems: \"flex-start\", justifyContent: \"flex-start\", padding: \"2.2rem 2rem 1.6rem\", gap: \"1.4rem\", position: \"relative\", }}>\n              <CardIconBg><FaClipboardCheck /></CardIconBg>\n              <SectionTitle style={{ fontSize: \"1.7rem\" }}><HighlightBar /><span>To-do List</span></SectionTitle>\n              <TodoList darkMode={darkMode} onPage=\"todo\" />\n          \n          </HoverCard>\n          </MainCards>\n          <SingleCard>\n            <HoverCard $darkMode={darkMode} style={{ flexDirection: \"column\", alignItems: \"flex-start\", justifyContent: \"flex-start\", padding: \"2.2rem 2rem 1.6rem\", gap: \"1.4rem\", position: \"relative\", }}>\n              <CardIconBg><FaClipboardCheck /></CardIconBg>\n              <SectionTitle style={{ fontSize: \"1.7rem\" }}><HighlightBar /><span>To-do List</span></SectionTitle>\n              <TodoList darkMode={darkMode} onPage=\"todo\" />\n            </HoverCard>\n          </SingleCard>\n          <RowWrapper>\n            <HoverCard $darkMode={darkMode} onClick={() => navigate(\"/search\")} style={{ width: \"48%\", height: \"230px\" }}>\n                <CardIconBg><FiSearch /></CardIconBg><SectionTitle><HighlightBar /><span>공고 검색</span></SectionTitle>\n                <IntroText>키워드·지역·연차 등으로 원하는 채용을 찾아보세요.</IntroText><HintText>(클릭하면 검색 페이지로 이동)</HintText>\n            </HoverCard>\n            <HoverCard $darkMode={darkMode} onClick={() => navigate(\"/saved\")} style={{ width: \"48%\" }}>\n                <CardIconBg><FaHeart /></CardIconBg><SectionTitle><HighlightBar /><span>찜한 공고</span></SectionTitle>\n                <IntroText>관심 있는 공고를 한곳에 모아 관리해보세요.</IntroText><HintText>(클릭하면 찜 목록으로 이동)</HintText>\n            </HoverCard>\n          </RowWrapper>\n        </>\n      );\n    }\n\n\n\n  // 추천 이유 모달 닫기\n  const handleCloseReasonModal = () => setSelectedReasonJob(null);\n\n  return (\n    <Main $darkMode={darkMode}>\n      <HeaderWrapper>\n        <Header $darkMode={darkMode}>김취준님, 만나서 반갑습니다</Header>\n        <ProfileMenuWrapper>\n            <ProfileMenu darkMode={darkMode} toggleTheme={toggleTheme} />\n        </ProfileMenuWrapper>\n      </HeaderWrapper>\n      <ContentArea>\n        <Scrollable>\n          {/* 기존 페이지들 - 상세 페이지와 관계없이 항상 렌더링 */}\n          <Outlet />\n        </Scrollable>\n      </ContentArea>\n      \n      {/* 상세 페이지 오버레이 */}\n      {jobDetailId && (\n        <DetailOverlay>\n          <SavedJobDetail\n            jobId={jobDetailId}\n            onBack={() => setJobDetailId(null)}\n            darkMode={darkMode}\n          />\n        </DetailOverlay>\n      )}\n      \n      {roadmapDetailId && (\n        <DetailOverlay>\n          <CareerRoadmapDetail\n            roadmapId={roadmapDetailId}\n            onBack={() => setRoadmapDetailId(null)}\n            darkMode={darkMode}\n          />\n        </DetailOverlay>\n      )}\n      \n      {/* 프롬프트 바 - 상세 페이지가 있을 때는 숨김 */}\n      {!jobDetailId && !roadmapDetailId && (\n        <PromptBar darkMode={darkMode} activePage={location.pathname.split('/').pop()} onSubmit={handlePromptSubmit} />\n      )}\n      {/* 추천 이유 모달 */}\n      {selectedReasonJob && (\n        <DetailOverlay>\n          <RecommendationReason\n            darkMode={darkMode}\n            job={selectedReasonJob}\n            onClose={handleCloseReasonModal}\n          />\n        </DetailOverlay>\n      )}\n    </Main>\n  );\n}\n\n/* ───────── 여기에 모든 기존 styled-components 코드를 그대로 붙여넣으세요 ───────── */\nconst fadeIn = keyframes`from { opacity: 0; transform: translateY(20px); } to { opacity: 1; transform: translateY(0); }`;\nconst Main = styled.main`\n    flex: 1; display: flex; flex-direction: column; position: relative;\n    ${({ $darkMode }) => $darkMode ? css`background: #000; color: #fff;` : css`background: #fff; color: #614f25;`}\n    min-height: 100vh; padding-bottom: 200px;\n`;\n\n/* 헤더 */\nconst HeaderWrapper = styled.div`\n  position: relative;\n  padding: 2rem 0;\n  text-align: center;\n`;\n\nconst HoverCard = styled.div`\n  position: relative;\n  background: #edece9;\n  border-radius: 2rem;\n  padding: 2rem;\n  transition: transform 0.2s ease;\n  ${({ $darkMode }) => $darkMode && css`background: #2b2b2b; color: #fff;`}\n  min-width: 340px;\n  max-width: 100%;\n  min-height: 520px;\n  max-height: 520px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n  box-sizing: border-box;\n`;\n\nconst CardIconBg = styled.div`\n  position: absolute;\n  top: 0.6rem;\n  right: 0.6rem;\n  font-size: 6.5rem;\n  color: rgb(214, 214, 213);\n  opacity: 0.5;\n  z-index: 0;\n  pointer-events: none;\n  ${({ $darkMode }) => $darkMode && css`color: #444;`}\n`;\n\nconst SectionTitle = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.6rem;\n  font-size: 1.7rem;\n  font-weight: 800;\n  margin-bottom: 0rem;\n  justify-content: space-between; // 우측 정렬\n`;\n\nconst IntroText = styled.p`\n  font-size: 0.95rem;\n  line-height: 1.6;\n  color: #6c5f3f;\n  margin-bottom: 1rem;\n  margin-top: 0.5rem;\n  ${({ $darkMode }) => $darkMode && css`color: #ccc;`}\n`;\n\nconst HighlightBar = styled.div`\n  width: 8px;\n  height: 1.6rem;\n  background: #ffc400;\n  border-radius: 4px;\n`;\n\nconst Header = styled.h1`\n  font-size: 2rem;\n  ${({ $darkMode }) => ($darkMode ? \"color:#f4bf12;\" : \"color:#000;\")}\n  text-align: center;\n  z-index: 1;\n`;\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 1.2rem;\n`;\n\nconst ProfileIcon = styled.div`\n  font-size: 1.8rem;\n  cursor: pointer;\n  color: ${({ $darkMode }) => ($darkMode ? \"#ccc\" : \"#666\")};\n\n  &:hover {\n    color: ${({ $darkMode }) => ($darkMode ? \"#fff\" : \"#000\")};\n  }\n`;\n\nconst ProfileMenuWrapper = styled.div`\n  position: absolute;\n  top: 1.6rem;\n  right: 2.2rem;\n  z-index: 10;\n`;\n\nconst Dropdown = styled.div`\n  position: absolute;\n  top: 2.4rem;\n  right: 0;\n  display: flex;\n  flex-direction: column;\n  background: ${({ $darkMode }) => ($darkMode ? \"#444\" : \"#e9e4d7\")};\n  border-radius: 0.6rem;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.4);\n  overflow: hidden;\n  z-index: 10;\n  min-width: 200px;\n`;\n\nconst DropdownItem = styled.div`\n  padding: 0.9rem 1rem;\n  cursor: pointer;\n  font-size: 1rem;\n  display: flex;\n  align-items: center;\n  gap: 0.6rem;\n  white-space: nowrap;\n  line-height: 1.4;\n\n  ${({ $darkMode }) =>\n    $darkMode\n      ? css`\n          color: #eee;\n          &:hover {\n            background: #555;\n          }\n        `\n      : css`\n          color: #333;\n          &:hover {\n            background: #d8d2c2;\n          }\n        `}\n`;\n\n/* 콘텐츠 영역 */\nconst ContentArea = styled.div`\n  flex: 1;\n  padding: 0.2rem 8rem 6rem;\n  overflow: visible;\n`;\n\nconst Scrollable = styled.div`\n  flex: 1;\n`;\n\n/* 카드 공통 */\nconst BaseCard = styled.div`\n  border-radius: 1rem;\n  padding: 1.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n  text-align: center;\n  transition: background 0.3s, border 0.3s, color 0.3s;\n  border: 2px solid transparent;\n  ${({ $darkMode }) =>\n    $darkMode\n      ? css`\n          background: #333;\n          color: #fff;\n        `\n      : css`\n          background: rgb(231, 231, 229);\n          color: #614f25;\n          box-shadow: 0 0 6px rgba(0, 0, 0, 0.05);\n        `}\n`;\n\nconst RowWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  gap: 1.5rem;\n  margin-top: 2rem;\n  flex-wrap: wrap;\n`;\n\nconst BackButton = styled.button`\n  position: absolute;\n  top: 1.5rem;\n  left: 1.5rem;\n  display: flex;\n  align-items: center;\n  background: ${({ $darkMode }) => ($darkMode ? \"#444\" : \"#eee\")};\n  color: ${({ $darkMode }) => ($darkMode ? \"#fff\" : \"#333\")};\n  border: none;\n  padding: 0.6rem 1rem;\n  border-radius: 0.5rem;\n  font-size: 0.9rem;\n  cursor: pointer;\n  z-index: 999;\n  &:hover {\n    background: ${({ $darkMode }) => ($darkMode ? \"#555\" : \"#ddd\")};\n  }\n`;\n\n/* 프롬프트 */\nconst PromptWrapper = styled.div`\n  position: fixed;\n  bottom: 2.5rem;\n  left: 60%;\n  transform: translateX(-50%);\n  z-index: 20;\n  width: 100%;\n  max-width: 800px;\n  display: flex;\n  justify-content: center;\n  height: 80px;\n`;\n\nconst Prompt = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n  background: ${({ $darkMode }) => ($darkMode ? \"#2a2a2a\" : \"#fff\")};\n  border: 2px solid ${({ $darkMode }) => ($darkMode ? \"#444\" : \"#eee\")};\n  border-radius: 2rem;\n  padding: 1rem 1.5rem;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\n  width: 100%;\n  max-width: 600px;\n`;\n\nconst PromptText = styled.span`\n  font-size: 0.9rem;\n  font-weight: 600;\n  color: ${({ $darkMode }) => ($darkMode ? \"#ccc\" : \"#666\")};\n  white-space: nowrap;\n`;\n\nconst PromptInput = styled.input`\n  flex: 1;\n  border: none;\n  outline: none;\n  font-size: 1rem;\n  background: transparent;\n  color: ${({ $darkMode }) => ($darkMode ? \"#fff\" : \"#333\")};\n  &::placeholder {\n    color: ${({ $darkMode }) => ($darkMode ? \"#888\" : \"#999\")};\n  }\n`;\n\nconst PromptButton = styled.button`\n  background: #ffc107;\n  color: #333;\n  border: none;\n  border-radius: 1rem;\n  padding: 0.5rem 1rem;\n  font-size: 0.9rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: background 0.2s;\n  &:hover {\n    background: #ffb300;\n  }\n`;\n\n/* 랜딩 카드 스타일 */\nconst MainCards = styled.div`\n  display: grid;\n  grid-template-columns: 3fr 1fr; // AI 추천 공고가 to-do list보다 훨씬 넓게\n  gap: 2rem;\n  margin-bottom: 2rem;\n  align-items: stretch;\n`;\n\nconst SingleCard = styled.div`\n  margin-bottom: 2rem;\n`;\n\nconst CardRow = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 1.0rem;\n  margin-top: 1.0rem;\n`;\n\nconst MiniCard = styled.div`\n  background: ${({ $bg }) => $bg};\n  border-radius: 1rem;\n  padding: 1.5rem;\n  position: relative;\n  cursor: pointer;\n  transition: transform 0.2s;\n  min-height: 400px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  ${({ $darkMode }) => $darkMode && css`background: #333; color: #fff;`}\n  \n  &:hover {\n    transform: translateY(-2px);\n  }\n  \n  h3 {\n    font-size: 1.1rem;\n    font-weight: 700;\n    margin-bottom: 0.6rem;\n    color: ${({ $darkMode }) => $darkMode ? '#fff' : '#333'};\n  }\n  \n  p {\n    font-size: 0.9rem;\n    color: ${({ $darkMode }) => $darkMode ? '#ccc' : '#666'};\n    line-height: 1.4;\n    margin-bottom: 0.8rem;\n  }\n`;\n\nconst MiniCardHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  width: 100%;\n  margin-bottom: 0.5rem; // 간격 줄임\n`;\n\n// 누락된 스타일 컴포넌트들 추가\nconst FieldTypeSelector = styled.div`\n  display: flex;\n  gap: 0.3rem; /* 간격 줄임 */\n  flex-wrap: nowrap; /* 줄바꿈 방지 */\n  margin-top: 0.8rem;\n  margin-bottom: 1rem;\n  justify-content: space-between; /* 버튼들을 균등하게 분배 */\n  width: 100%; /* 전체 너비 사용 */\n`;\n\nconst FieldTypeButton = styled.button`\n  padding: 0.3rem 0.6rem; /* 패딩 줄임 */\n  border: 1px solid ${({ $darkMode, $active }) => \n    $active \n      ? ($darkMode ? '#4CAF50' : '#2E7D32') \n      : ($darkMode ? '#555' : '#ddd')};\n  border-radius: 0.3rem;\n  background: ${({ $darkMode, $active }) => \n    $active \n      ? ($darkMode ? '#4CAF50' : '#E8F5E8') \n      : ($darkMode ? '#333' : '#fff')};\n  color: ${({ $darkMode, $active }) => \n    $active \n      ? ($darkMode ? '#fff' : '#2E7D32') \n      : ($darkMode ? '#ccc' : '#666')};\n  font-size: 0.7rem; /* 폰트 크기 줄임 */\n  cursor: pointer;\n  transition: all 0.2s;\n  white-space: nowrap;\n  font-weight: 500;\n  flex: 1; /* 균등하게 분배 */\n  min-width: 0; /* 최소 너비 제한 해제 */\n\n  &:hover {\n    background: ${({ $darkMode, $active }) => \n      $active \n        ? ($darkMode ? '#45a049' : '#C8E6C9') \n        : ($darkMode ? '#444' : '#f5f5f5')};\n  }\n`;\n\nconst MiniWordCloudPreview = styled.div`\n  height: 240px; /* 높이 조정 */\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 0.8rem;\n  color: #666;\n  flex: 1;\n  margin-top: 0.5rem;\n`;\n\nconst BlurOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(255, 255, 255, 0.8);\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  backdrop-filter: blur(4px);\n`;\n\nconst BlurBox = styled.div`\n  width: 100%;\n  height: 100%;\n  background: rgba(255, 255, 255, 0.5);\n  border-radius: 1rem;\n`;\n\nconst LockIcon = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-size: 2rem;\n  color: #999;\n`;\n\nconst MiniHint = styled.div`\n  font-size: 0.8rem;\n  color: #888;\n  margin-top: 0.5rem;\n  text-align: center;\n`;\n\nconst DescText = styled.p`\n  font-size: 1rem;\n  color: #666;\n  margin-bottom: 1rem;\n  line-height: 1.5;\n  ${({ $darkMode }) => $darkMode && css`color: #ccc;`}\n`;\n\nconst HintText = styled.div`\n  font-size: 0.85rem;\n  color: #888;\n  margin-top: 0.5rem;\n  ${({ $darkMode }) => $darkMode && css`color: #666;`}\n`;\n\n/* 미니 캘린더 스타일 */\nconst CalendarWrapper = styled.div`\n  background: #fff;\n  border-radius: 1rem;\n  padding: 1rem;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  ${({ $darkMode }) => $darkMode && css`background: #333; color: #fff;`}\n`;\n\nconst CalendarHeader = styled.div`\n  text-align: center;\n  font-weight: 600;\n  margin-bottom: 1rem;\n  font-size: 0.9rem;\n`;\n\nconst CalendarGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  gap: 0.2rem;\n`;\n\nconst DayHeader = styled.div`\n  text-align: center;\n  font-size: 0.7rem;\n  font-weight: 600;\n  color: #666;\n  padding: 0.3rem;\n  ${({ $darkMode }) => $darkMode && css`color: #ccc;`}\n`;\n\nconst Day = styled.div`\n  text-align: center;\n  padding: 0.3rem;\n  font-size: 0.8rem;\n  cursor: pointer;\n  border-radius: 0.3rem;\n  background: ${({ $isToday }) => $isToday ? '#ffc107' : 'transparent'};\n  color: ${({ $isToday }) => $isToday ? '#333' : 'inherit'};\n  font-weight: ${({ $isToday }) => $isToday ? '600' : 'normal'};\n  \n  &:hover {\n    background: ${({ $isToday }) => $isToday ? '#ffb300' : '#f0f0f0'};\n  }\n`;\n\nconst EmptyDay = styled.div`\n  padding: 0.3rem;\n`;\n\n/* Todo 미리보기 스타일 */\nconst TodoPreviewWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n`;\n\nconst TodoStats = styled.div`\n  font-size: 0.9rem;\n  font-weight: 600;\n  color: #333;\n  ${({ $darkMode }) => $darkMode && css`color: #fff;`}\n`;\n\nconst ProgressBar = styled.div`\n  width: 100%;\n  height: 6px;\n  background: #eee;\n  border-radius: 3px;\n  overflow: hidden;\n  ${({ $darkMode }) => $darkMode && css`background: #444;`}\n`;\n\nconst ProgressFill = styled.div`\n  width: ${({ $match }) => $match}%;\n  height: 100%;\n  background: #ffc107;\n  border-radius: 3px;\n  transition: width 0.4s ease;\n`;\n\nconst BackBtn = styled.button`\n  margin-top: 0.3rem;\n  font-size: 0.85rem;\n  color: #666;\n  background: none;\n  border: none;\n  text-decoration: underline;\n  cursor: pointer;\n\n  &:hover {\n    color: #000;\n  }\n`;\n\n/* 오른쪽 고정 안내 박스 */\nconst Callout = styled.div`\n  position: sticky;\n  top: 1.5rem;\n  background: #fff8dc;\n  border-radius: 14px;\n  padding: 1.5rem 1.2rem;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);\n  text-align: center;\n  line-height: 1.5;\n  font-size: 0.95rem;\n\n  & > p {\n    margin-bottom: 1rem;\n  }\n`;\n\n/* CTA 버튼 */\nconst RoadmapBtn = styled.button`\n  background: #ffc107;\n  color: #000;\n  font-weight: 700;\n  font-size: 0.95rem;\n  border: none;\n  border-radius: 8px;\n  padding: 0.7rem 1.4rem;\n  cursor: pointer;\n  transition: background 0.25s;\n\n  &:hover {\n    background: #ffb300;\n  }\n`;\n\nconst BulletText = styled.p`\n  font-size: 0.88rem;\n  color: #4d3b18;\n  margin: 0.1rem 0;\n`;\n\nconst FeatureList = styled.ul`\n  list-style: none;\n  padding-left: 0;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  gap: 1.8rem;\n  font-size: 0.88rem;\n  color: #4d3b18;\n  margin-bottom: 0.2rem;\n`;\n\n/* ▼ 커리어 로드맵 전용 추가 스타일 ▼ */\nconst RoadmapGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 2rem;\n  width: 850px;\n  animation: ${fadeIn} 0.5s ease;\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst Card = styled.div`\n  width: 100%;\n  max-width: 1000px;\n  border-radius: 1.5rem;\n  padding: 3rem;\n  background: ${({ $darkMode }) => ($darkMode ? \"#333\" : \"#eeeae2\")};\n`;\n\nconst DetailCard = styled(Card)`\n  height: auto;\n  width: 850px;\n  align-items: flex-start;\n  padding: 2.5rem;\n`;\n\n/* 상세 페이지 오버레이 스타일 추가 */\nconst DetailOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 1000;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 2rem;\n  overflow-y: auto;\n`;\n\n/* 새로운 스타일 추가 */\nconst HeaderRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  width: 100%;\n  margin-bottom: 1rem;\n`;\n\nconst FieldTypeIndicator = styled.div`\n  font-size: 0.7rem;\n  color: ${({ $darkMode }) => $darkMode ? '#666' : '#888'};\n  margin-top: 0.3rem;\n  font-weight: 500;\n`;\n\nconst PageNavWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.3rem;\n  margin-left: auto;\n`;\n\nconst PageInfo = styled.span`\n  font-size: 1.1rem;\n  color: #bfa94a;\n  font-weight: 700;\n  min-width: 56px;\n  text-align: center;\n`;\n\nconst TodoProgress = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.3rem;\n  margin-bottom: 0.8rem;\n`;\n\nconst ProgressText = styled.div`\n  font-size: 0.8rem;\n  color: #666;\n  font-weight: 600;\n`;\n\nconst TodoListBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.4rem;\n  margin-bottom: 0.8rem;\n  max-height: 120px;\n  overflow-y: auto;\n`;\n\nconst TodoItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.4rem 0.6rem;\n  background: ${({ $completed }) => $completed ? 'rgba(76, 175, 80, 0.1)' : 'rgba(255, 193, 7, 0.1)'};\n  border-radius: 0.4rem;\n  border-left: 3px solid ${({ $completed }) => $completed ? '#4CAF50' : '#FFC107'};\n`;\n\nconst TodoTitle = styled.div`\n  font-size: 0.75rem;\n  font-weight: 600;\n  color: #333;\n  flex: 1;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nconst TodoDuration = styled.div`\n  font-size: 0.65rem;\n  color: #666;\n  font-weight: 500;\n  flex-shrink: 0;\n`;\n\nconst TodoEmpty = styled.div`\n  font-size: 0.75rem;\n  color: #999;\n  text-align: center;\n  padding: 0.5rem;\n  font-style: italic;\n`;\n\n// 스타일 추가\nconst MiniMapGrid = styled.div`\n  display: flex;\n  gap: 1.5rem;\n  justify-content: center;\n  align-items: center;\n`;\nconst MiniMapItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: #fffdfa;\n  border-radius: 1.1rem;\n  padding: 1.2rem 2.2rem;\n  box-shadow: 0 2px 8px rgba(255, 193, 7, 0.08);\n  cursor: pointer;\n  transition: box-shadow 0.18s, transform 0.18s, background 0.18s;\n  border: 2px solid transparent;\n  &:hover, &:focus {\n    box-shadow: 0 4px 16px rgba(255, 193, 7, 0.13);\n    background: #fffbe7;\n    border: 2px solid #ffc107;\n    transform: translateY(-2px) scale(1.04);\n  }\n`;\nconst MiniMapIcon = styled.div`\n  font-size: 2.2rem;\n  margin-bottom: 0.7rem;\n`;\nconst MiniMapLabel = styled.div`\n  font-size: 1.05rem;\n  font-weight: 600;\n  color: #333;\n`;","import React, { useState, useEffect } from \"react\";\nimport Sidebar from \"./Sidebar\";\nimport MainContent from \"./maincontent\";\nimport { useLocation } from \"react-router-dom\";\nimport { RecommendationProvider } from \"./RecommendationContext\";\n\nexport default function Aijob() {\n  // localStorage에서 마지막 페이지 복원\n  const [collapsed, setCollapsed] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n\n  const location = useLocation();\n\n  // 로그인 정보 상태화\n  const [userId, setUserId] = useState(null);\n  const [token, setToken] = useState(null);\n\n  // localStorage에서 읽기 + 유저 정보 API 호출(필요하면)\n  useEffect(() => {\n    const storedToken = localStorage.getItem(\"accessToken\");\n    const storedUserId = localStorage.getItem(\"userId\");\n\n    setToken(storedToken);\n    setUserId(storedUserId);\n\n    // 만약 userId가 없다면 API 호출로 받기\n    // (여기서도 axios 쓸 수 있음)\n  }, []);\n\n  // 페이지 변경 시 localStorage에 저장\n  useEffect(() => {\n    // localStorage.setItem(\"lastSelectedPage\", selectedPage); // 제거됨\n  }, []);\n\n  useEffect(() => {\n    const state = location.state;\n    // if (state?.goTo === \"search\") setSelectedPage(\"search\"); // 제거됨\n    // else if (state?.goTo === \"saved\") setSelectedPage(\"saved\"); // 제거됨\n  }, [location.state]);\n\n  const toggleTheme = () => setDarkMode((prev) => !prev);\n\n  return (\n    <RecommendationProvider>\n    <div style={{ display: \"flex\" }}>\n      <Sidebar\n        collapsed={collapsed}\n        setCollapsed={setCollapsed}\n        darkMode={darkMode}\n      />\n      <MainContent\n        darkMode={darkMode}\n        toggleTheme={toggleTheme}\n        userId={userId}\n        token={token}\n      />\n    </div>\n    </RecommendationProvider>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function NaverCallback() {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // 1. URL 해시에서 access_token 추출\n    const hash = window.location.hash;\n    const params = new URLSearchParams(hash.slice(1)); // #access_token=... 제거 후 파싱\n    const accessToken = params.get(\"access_token\");\n\n    if (!accessToken) {\n      alert(\"토큰이 없습니다. 다시 로그인 해주세요.\");\n      navigate(\"/register\");\n      return;\n    }\n\n    // 2. 테스트용으로 access_token 로컬에 저장하고 바로 홈으로 이동\n    console.log(\"✅ 네이버 로그인 성공! 토큰:\", accessToken);\n    localStorage.setItem(\"accessToken\", accessToken);\n\n    alert(\"네이버 로그인 테스트 성공! 홈으로 이동합니다.\");\n    navigate(\"/aijob\"); // 또는 원하는 페이지: \"/registernext\" 등\n  }, [navigate]);\n\n  return (\n    <div style={{ color: \"#fff\", textAlign: \"center\", marginTop: \"30vh\" }}>\n      네이버 인증 처리 중…\n    </div>\n  );\n}\n","import React, { useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { FaUpload, FaKeyboard } from \"react-icons/fa\";\n\nexport default function ResumeSelect() {\n  const navigate = useNavigate();\n  const fileInputRef = useRef(null);\n\n  const handleFileUploadClick = () => {\n    fileInputRef.current.click();\n  };\n\n  const handleFileChange = async (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n\n    const formData = new FormData();\n    formData.append(\"resume_file\", file);\n\n    try {\n      const res = await axios.post(\"https://3bd4-211-44-158-36.ngrok-free.app/resume/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n          Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n        },\n      });\n\n      alert(\"업로드 성공: \" + res.data.message);\n    } catch (err) {\n      alert(\"업로드 실패: \" + (err.response?.data?.detail || err.message));\n    }\n  };\n\n  const goToDirectInput = () => {\n    navigate(\"/registernext\");\n  };\n\n  return (\n    <Bg>\n      <Card>\n        <Title>이력서 등록 방법</Title>\n\n        <Button onClick={handleFileUploadClick} $primary>\n          <FaUpload style={{ marginRight: \"0.5rem\" }} />\n          파일로 업로드\n        </Button>\n        <HiddenInput\n          type=\"file\"\n          accept=\".pdf,.doc,.docx,.hwp\"\n          ref={fileInputRef}\n          onChange={handleFileChange}\n        />\n\n        <Button onClick={goToDirectInput}>\n          <FaKeyboard style={{ marginRight: \"0.5rem\" }} />\n          직접 입력\n        </Button>\n      </Card>\n    </Bg>\n  );\n}\n\nconst Bg = styled.div`\n  background: #f4f4f4;\n  min-height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Card = styled.div`\n  background: #ffffff;\n  padding: 3rem 2.5rem;\n  border-radius: 2rem;\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.08);\n  width: 95%;\n  max-width: 420px;\n  text-align: center;\n`;\n\nconst Title = styled.h1`\n  font-size: 1.9rem;\n  color: #ff9900;\n  margin-bottom: 2.2rem;\n  font-weight: 700;\n  letter-spacing: -0.5px;\n`;\n\nconst Button = styled.button`\n  width: 100%;\n  padding: 1rem;\n  background: ${({ $primary }) => ($primary ? \"#ffcc00\" : \"#eaeaea\")};\n  color: ${({ $primary }) => ($primary ? \"#333\" : \"#555\")};\n  border: none;\n  border-radius: 1rem;\n  font-size: 1rem;\n  font-weight: 600;\n  margin-bottom: 1rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: background 0.2s ease;\n\n  &:hover {\n    background: ${({ $primary }) => ($primary ? \"#f4b400\" : \"#dcdcdc\")};\n  }\n`;\n\nconst HiddenInput = styled.input`\n  display: none;\n`;\n","// ────────────── src/components/AiJobRecommendation.jsx (최종본) ──────────────\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { FaBullseye, FaRegCircle, FaHeart, FaStar } from \"react-icons/fa\";\nimport { useNavigate } from \"react-router-dom\";\nimport apiClient from \"../api/apiClient\";\n\n/**\n * AI 추천 공고 및 추천 이유를 서버에서 받아오는 함수\n * 1페이지는 GET /recommend/jobs/ids API를 호출합니다.\n */\nconst fetchAiJobRecommendations = async () => {\n  // 1페이지용 API 호출 (가장 적합한 공고)\n  const { data } = await apiClient.get(\"/recommend/jobs/ids\");\n  return data;\n};\n\nexport default function AiJobRecommendation({ darkMode }) {\n  const navigate = useNavigate();\n  const examplePrompts = [\n    \"데이터 분석가가 지원할 수 있는 공고를 추천해줘\",\n    \"신입 백엔드 개발자에게 적합한 회사를 알려줘\",\n    \"포트폴리오 없는 AI 직무 지원 가능한 곳 추천해줘\",\n    \"비전공자를 위한 프론트엔드 공고 알려줘\",\n    \"주니어 데이터 엔지니어 채용 중인 스타트업 추천해줘\",\n    \"서울에서 하이브리드 근무 가능한 기획 직무 있어?\",\n    \"재택 근무 가능한 풀스택 포지션 리스트 보여줘\",\n    \"연봉 5천 이상 제공하는 신입 QA 공고 소개해줘\",\n  ];\n\n  // 'examples'(초기), 'loading'(로딩), 'results'(결과), 'error'(오류) 뷰 상태 관리\n  const [view, setView] = useState(\"examples\");\n  // 이 컴포넌트가 직접 API 결과를 상태로 가집니다.\n  const [recommendations, setRecommendations] = useState([]);\n  const [aiMessage, setAiMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  /** 예시 질문 클릭 시 AI 추천을 받아오는 핸들러 */\n  const handleGetRecommendation = async () => {\n    setView(\"loading\"); // 로딩 상태로 변경\n    try {\n      const data = await fetchAiJobRecommendations();\n\n      // API 응답에서 jobs와 explanation을 추출 (서버 응답 구조에 따라 키 이름 변경 필요)\n      setRecommendations(data.recommended_jobs?.slice(0, 5) || []);\n      setAiMessage(\n        data.explanation || \"AI가 회원님의 프로필에 맞춰 가장 적합한 채용 공고를 추천했습니다!\"\n      );\n      setView(\"results\"); // 결과 뷰로 변경\n    } catch (err) {\n      console.error(\"AI 추천 공고 로딩 실패:\", err);\n      if (err.response?.status === 401) {\n        setErrorMessage(\"추천을 받으려면 로그인이 필요합니다.\");\n      } else {\n        setErrorMessage(\n          \"추천 공고를 불러오는 중 오류가 발생했습니다. 잠시 후 다시 시도해주세요.\"\n        );\n      }\n      setView(\"error\"); // 에러 뷰로 변경\n    }\n  };\n\n  /** \"뒤로가기\" 버튼 핸들러: 모든 상태를 초기화하고 예시 화면으로 돌아갑니다. */\n  const handleBackToExamples = () => {\n    setView(\"examples\");\n    setAiMessage(\"\");\n    setRecommendations([]);\n    setErrorMessage(\"\");\n  };\n\n  /** 채용 공고 카드 클릭 핸들러 (상세 페이지로 이동) */\n  const handleJobClick = (jobId) => {\n    if (!jobId) return;\n    // navigate(`/job-detail/${jobId}`); // TODO: 실제 상세 페이지 라우팅 경로로 수정\n    alert(`상세 페이지로 이동합니다 (공고 ID: ${jobId})`);\n  };\n\n  /** 현재 view 상태에 따라 다른 컨텐츠를 렌더링하는 함수 */\n  const renderContent = () => {\n    switch (view) {\n      case \"loading\":\n        return <LoadingText $darkMode={darkMode}>⏳ AI가 가장 적합한 공고를 분석 중입니다...</LoadingText>;\n\n      case \"error\":\n        return (\n          <>\n            <ErrorMessage>⚠️ {errorMessage}</ErrorMessage>\n            <BackBtn onClick={handleBackToExamples} $darkMode={darkMode}>⬅ 예시 질문으로 돌아가기</BackBtn>\n          </>\n        );\n\n      case \"results\":\n        return (\n          <>\n            <Reason $darkMode={darkMode}>{aiMessage}</Reason>\n            <JobList>\n              {recommendations.length > 0 ? (\n                recommendations.map((job) => (\n                  <JobCard\n                    key={job.id}\n                    $darkMode={darkMode}\n                    onClick={() => handleJobClick(job.id)}\n                  >\n                    <JobTitle $darkMode={darkMode}>{job.title || \"직무 정보 없음\"}</JobTitle>\n                    <Company $darkMode={darkMode}>{job.company || \"회사 정보 없음\"}</Company>\n                    <MatchScore>적합도: {job.match_score || 0}%</MatchScore>\n                    <LikeIcon>\n                      <FaHeart />\n                    </LikeIcon>\n                  </JobCard>\n                ))\n              ) : (\n                <p>추천할 만한 공고를 찾지 못했습니다.</p>\n              )}\n            </JobList>\n            <BackBtn onClick={handleBackToExamples} $darkMode={darkMode}>⬅ 다른 추천 보기</BackBtn>\n          </>\n        );\n\n      case \"examples\":\n      default:\n        return (\n          <ExampleBox $darkMode={darkMode}>\n            <p>아래 예시처럼 질문하고 가장 적합한 추천을 받아보세요!</p>\n            <ul>\n              {examplePrompts.map((ex) => (\n                <ExampleItem\n                  key={ex}\n                  $darkMode={darkMode}\n                  onClick={handleGetRecommendation} // 클릭 시 바로 API 호출\n                >\n                  <CheckIcon>\n                    <FaRegCircle />\n                  </CheckIcon>\n                  {ex}\n                </ExampleItem>\n              ))}\n            </ul>\n          </ExampleBox>\n        );\n    }\n  };\n\n  return (\n    <Wrapper>\n      <RecommendationCard $darkMode={darkMode}>\n        <SectionHeader $darkMode={darkMode}>\n          <span>🎯 AI 추천 공고</span>\n          <IconWrapper>\n            <FaBullseye />\n          </IconWrapper>\n        </SectionHeader>\n        {renderContent()}\n      </RecommendationCard>\n    </Wrapper>\n  );\n}\n\n/* ───────────── 이 컴포넌트만을 위한 styled-components ───────────── */\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  overflow: hidden; // 가로 스크롤 방지\n`;\nconst RecommendationCard = styled.div`\n  background: ${({ $darkMode }) => ($darkMode ? \"#2a2a2a\" : \"#fff\")};\n  border: 1px solid ${({ $darkMode }) => ($darkMode ? \"#444\" : \"#e0e0e0\")};\n  border-radius: 16px;\n  padding: 2rem;\n  width: 100%;\n  max-width: 750px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);\n  min-height: 500px;\n  overflow: hidden; // 가로 스크롤 방지\n`;\nconst SectionHeader = styled.h2`\n  font-size: 1.4rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1.5rem;\n  color: ${({ $darkMode }) => ($darkMode ? \"#eee\" : \"#333\")};\n  overflow: hidden; // 가로 스크롤 방지\n`;\nconst IconWrapper = styled.div`\n  font-size: 1.3rem;\n  color: #ff9800;\n  flex-shrink: 0; // 아이콘은 축소되지 않도록 설정\n`;\nconst ExampleBox = styled.div`\n  padding: 0.5rem 0;\n  font-size: 0.95rem;\n  color: ${({ $darkMode }) => ($darkMode ? \"#ccc\" : \"#555\")};\n  overflow: hidden; // 가로 스크롤 방지\n  ul {\n    list-style: none;\n    padding: 0;\n    margin-top: 1rem;\n  }\n`;\nconst ExampleItem = styled.li`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  padding: 0.5rem;\n  margin-bottom: 0.5rem;\n  transition: background 0.2s;\n  border-radius: 8px;\n  color: ${({ $darkMode }) => ($darkMode ? \"#eee\" : \"#222\")};\n  border: 1px solid ${({ $darkMode }) => ($darkMode ? \"#444\" : \"#eee\")};\n  overflow: hidden; // 가로 스크롤 방지\n  &:hover {\n    background: ${({ $darkMode }) => ($darkMode ? \"#333\" : \"#f5f5f5\")};\n  }\n`;\nconst CheckIcon = styled.span`\n  margin-right: 0.75rem;\n  color: #ffc107;\n  flex-shrink: 0; // 아이콘은 축소되지 않도록 설정\n`;\nconst LoadingText = styled.p`\n  text-align: center;\n  padding: 4rem 0;\n  font-size: 1.1rem;\n  color: ${({ $darkMode }) => ($darkMode ? \"#ccc\" : \"#555\")};\n`;\nconst ErrorMessage = styled.div`\n  color: #f44336;\n  font-weight: bold;\n  text-align: center;\n  padding: 4rem 0;\n  overflow: hidden; // 가로 스크롤 방지\n  word-wrap: break-word; // 긴 텍스트 줄바꿈\n`;\nconst Reason = styled.div`\n  font-size: 1rem;\n  line-height: 1.6;\n  background: ${({ $darkMode }) => ($darkMode ? \"#333\" : \"#f7f7f7\")};\n  border-radius: 8px;\n  padding: 1rem;\n  margin-bottom: 1.5rem;\n  color: ${({ $darkMode }) => ($darkMode ? \"#eee\" : \"#333\")};\n  overflow: hidden; // 가로 스크롤 방지\n  word-wrap: break-word; // 긴 텍스트 줄바꿈\n`;\nconst JobList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.8rem;\n  overflow: hidden; // 가로 스크롤 방지\n`;\nconst JobCard = styled.div`\n  background: ${({ $darkMode }) => ($darkMode ? \"#333\" : \"#f9f9f9\")};\n  border: 1px solid ${({ $darkMode }) => ($darkMode ? \"#444\" : \"#eee\")};\n  border-radius: 12px;\n  padding: 1.2rem;\n  position: relative;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.06);\n  cursor: pointer;\n  transition: transform 0.2s, box-shadow 0.2s;\n  overflow: hidden; // 가로 스크롤 방지\n  &:hover {\n    transform: translateY(-3px);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  }\n`;\nconst JobTitle = styled.div`\n  font-weight: bold;\n  font-size: 1.1rem;\n  margin-bottom: 0.25rem;\n  color: ${({ $darkMode }) => ($darkMode ? \"#fff\" : \"#000\")};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  padding-right: 2rem; // 하트 아이콘 공간 확보\n`;\nconst Company = styled.div`\n  font-size: 0.9rem;\n  color: ${({ $darkMode }) => ($darkMode ? \"#bbb\" : \"#777\")};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\nconst MatchScore = styled.div`\n  margin-top: 0.5rem;\n  font-size: 0.9rem;\n  font-weight: bold;\n  color: #3f51b5;\n`;\nconst LikeIcon = styled.div`\n  position: absolute;\n  top: 1.2rem;\n  right: 1.2rem;\n  font-size: 1.2rem;\n  color: #e0e0e0;\n  cursor: pointer;\n  transition: color 0.2s;\n  flex-shrink: 0; // 아이콘은 축소되지 않도록 설정\n  &:hover {\n    color: #f44336;\n  }\n`;\nconst BackBtn = styled.button`\n  margin-top: 2rem;\n  padding: 0.6rem 1rem;\n  background: transparent;\n  color: ${({ $darkMode }) => ($darkMode ? \"#aaa\" : \"#555\")};\n  font-size: 0.9rem;\n  border: none;\n  cursor: pointer;\n  width: 100%;\n  text-align: center;\n  overflow: hidden; // 가로 스크롤 방지\n  &:hover {\n    text-decoration: underline;\n  }\n`;","import React from 'react';\nimport styled from 'styled-components';\n\nexport default function RoadmapCategory({ onSelectCategory, darkMode }) {\n  const categories = [\n    { key: \"bootcamp\", label: \"부트캠프\", type: \"부트캠프\" },\n    { key: \"certificate\", label: \"자격증\", type: \"자격증\" },\n    { key: \"lecture\", label: \"강의\", type: \"강의\" },\n  ];\n\n  return (\n    <Container $darkMode={darkMode}>\n      <Header>로드맵 분야 별로 보기</Header>\n      <CategoryGrid>\n        {categories.map(cat => (\n          <CategoryCard key={cat.key} onClick={() => onSelectCategory(cat.type)}>\n            <h3>{cat.label}</h3>\n            <p>{cat.label} 목록을 확인하고 커리어 플랜을 세워보세요.</p>\n          </CategoryCard>\n        ))}\n      </CategoryGrid>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  padding: 2rem;\n  background: ${({ $darkMode }) => ($darkMode ? \"#121212\" : \"#fff\")};\n  color: ${({ $darkMode }) => ($darkMode ? \"#eee\" : \"#333\")};\n  height: 100%;\n`;\n\nconst Header = styled.h2`\n  font-size: 2rem;\n  font-weight: bold;\n  margin-bottom: 2rem;\n  text-align: center;\n`;\n\nconst CategoryGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 1.5rem;\n`;\n\nconst CategoryCard = styled.div`\n  background: ${({ $darkMode }) => ($darkMode ? \"#333\" : \"#f9f9f9\")};\n  border: 1px solid ${({ $darkMode }) => ($darkMode ? \"#444\" : \"#eee\")};\n  border-radius: 1rem;\n  padding: 2rem;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n\n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n    border-color: #ffc107;\n  }\n\n  h3 {\n    font-size: 1.5rem;\n    font-weight: 700;\n    margin-bottom: 1rem;\n    color: #ffa500;\n  }\n\n  p {\n    font-size: 1rem;\n    line-height: 1.5;\n  }\n`;","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { FaArrowLeft, FaBookmark } from 'react-icons/fa';\nimport axios from 'axios';\n\nconst BASE_URL = process.env.REACT_APP_API_BASE_URL || \"http://192.168.101.7:8000\";\nexport default function RoadmapList({ category, onSelectRoadmap, onBack, darkMode }) {\n  const [roadmaps, setRoadmaps] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  \n  // ✨ 1. 내가 찜한 로드맵의 ID를 저장할 상태 추가\n  const [savedRoadmapIds, setSavedRoadmapIds] = useState(new Set());\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const token = localStorage.getItem(\"accessToken\");\n\n        // ✨ 2. 로그인 상태일 경우, 내가 찜한 로드맵 ID 목록을 미리 불러옵니다.\n        if (token) {\n          const savedRes = await axios.get(`${BASE_URL}/user_roadmaps/me`, {\n            headers: { Authorization: `Bearer ${token}` }\n          });\n          if (Array.isArray(savedRes.data)) {\n            setSavedRoadmapIds(new Set(savedRes.data.map(item => item.roadmaps_id)));\n          }\n        }\n\n        // 전체 로드맵 목록을 불러옵니다.\n        const res = await axios.get(`${BASE_URL}/roadmaps/`);\n        const filtered = Array.isArray(res.data) ? res.data.filter(r => r.type === category) : [];\n        setRoadmaps(filtered);\n\n      } catch (err) {\n        setError(\"로드맵 목록을 불러오는 데 실패했습니다.\");\n        console.error(\"데이터 로딩 실패:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getData();\n  }, [category]);\n\n  const handleSaveRoadmap = async (roadmapId) => {\n    // ✨ 3. 이미 찜한 항목은 API 호출을 막습니다.\n    if (savedRoadmapIds.has(roadmapId)) {\n      alert(\"이미 찜한 로드맵입니다.\");\n      return;\n    }\n\n    const token = localStorage.getItem(\"accessToken\");\n    const userId = localStorage.getItem(\"userId\");\n\n    if (!token || !userId) {\n      alert(\"로그인이 필요합니다. 다시 로그인해주세요.\");\n      return;\n    }\n\n    try {\n      await axios.post(`${BASE_URL}/user_roadmaps/`, {\n        user_id: parseInt(userId, 10),\n        roadmaps_id: roadmapId,\n      }, {\n        headers: {\n            Authorization: `Bearer ${token}`\n        }\n      });\n      alert(\"로드맵이 찜 되었습니다!\");\n      // ✨ 4. 찜하기 성공 후, 화면에 바로 반영합니다.\n      setSavedRoadmapIds(prev => new Set(prev).add(roadmapId));\n    } catch (err) {\n      console.error(\"❌ 찜하기 API 호출 실패:\", err.response); \n      if (err.response?.status === 400) {\n        alert(\"이미 찜한 로드맵이거나, 처리 중 오류가 발생했습니다.\");\n      } else {\n        alert(\"찜하기에 실패했습니다.\");\n      }\n    }\n  };\n\n  return (\n    <Container $darkMode={darkMode}>\n      <Header $darkMode={darkMode}>\n        <BackButton onClick={onBack} $darkMode={darkMode}>\n          <FaArrowLeft /> 뒤로가기\n        </BackButton>\n        <h2>{category} 목록</h2>\n      </Header>\n      {loading && <p>목록을 불러오는 중...</p>}\n      {error && <p style={{ color: 'red' }}>오류: {error}</p>}\n      {!loading && !error && (\n        <List>\n          {roadmaps.map((roadmap) => {\n            // ✨ 5. 현재 로드맵이 찜한 상태인지 확인합니다.\n            const isSaved = savedRoadmapIds.has(roadmap.id);\n            return (\n              <Card key={roadmap.id} $darkMode={darkMode}>\n                <CardContent onClick={() => onSelectRoadmap(roadmap.id)}>\n                  <Company>{roadmap.company}</Company>\n                  <Title>{roadmap.name}</Title>\n                  <Status $status={roadmap.status}>{roadmap.status}</Status>\n                </CardContent>\n                {/* ✨ 6. 찜 상태(isSaved)에 따라 버튼 스타일을 다르게 적용합니다. */}\n                <SaveButton \n                  isSaved={isSaved}\n                  onClick={() => handleSaveRoadmap(roadmap.id)}\n                >\n                  <FaBookmark />\n                </SaveButton>\n              </Card>\n            );\n          })}\n        </List>\n      )}\n    </Container>\n  );\n}\n\n/* ───── 스타일 ───── */\nconst Container = styled.div`\n  padding: 2rem;\n  min-height: 100vh;\n  background: ${({ $darkMode }) => ($darkMode ? '#121212' : '#f8f9fa')};\n`;\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n  margin-bottom: 1.8rem;\n  h2 {\n    font-size: 1.6rem;\n    color: ${({ $darkMode }) => ($darkMode ? '#eee' : '#333')};\n  }\n`;\nconst BackButton = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 0.4rem;\n  border: none;\n  background: none;\n  font-size: 0.9rem;\n  cursor: pointer;\n  color: ${({ $darkMode }) => ($darkMode ? '#ffc107' : '#614f25')};\n   &:hover {\n    opacity: 0.8;\n  }\n`;\nconst List = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 1.5rem;\n`;\nconst Card = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: ${({ $darkMode }) => ($darkMode ? '#2a2a2a' : '#fff')};\n  border-radius: 0.8rem;\n  padding: 1.5rem;\n  box-shadow: 0 4px 12px rgba(0,0,0,0.08);\n  transition: all 0.2s ease-in-out;\n  border: 1px solid ${({ $darkMode }) => ($darkMode ? '#444' : '#eee')};\n`;\nconst CardContent = styled.div`\n  cursor: pointer;\n  flex: 1;\n`;\nconst Company = styled.p`\n  font-size: 0.9rem;\n  font-weight: 500;\n  color: ${({ $darkMode }) => ($darkMode ? '#bbb' : '#666')};\n  margin: 0 0 0.5rem;\n`;\nconst Title = styled.h3`\n  font-size: 1.2rem;\n  font-weight: 700;\n  color: ${({ $darkMode }) => ($darkMode ? '#fff' : '#000')};\n  margin: 0 0 1rem;\n`;\nconst Status = styled.span`\n  background: #ffc107;\n  color: #000;\n  padding: 0.3rem 0.8rem;\n  border-radius: 999px;\n  font-size: 0.8rem;\n  font-weight: 700;\n`;\nconst SaveButton = styled.button`\n  background: ${({ isSaved }) => (isSaved ? '#ffc107' : 'none')};\n  border: 2px solid ${({ isSaved, $darkMode }) => (isSaved ? '#ffc107' : $darkMode ? '#555' : '#eee')};\n  color: ${({ isSaved, $darkMode }) => (isSaved ? '#fff' : $darkMode ? '#999' : '#ccc')};\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  font-size: 1rem;\n  cursor: ${({ isSaved }) => (isSaved ? 'default' : 'pointer')};\n  transition: all 0.2s;\n  \n  &:hover {\n    ${({ isSaved }) => !isSaved && `\n      background: #ffc107;\n      color: #fff;\n      border-color: #ffc107;\n    `}\n  }\n`;","import React, { useState } from 'react';\nimport RoadmapCategory from './RoadmapCategory';\nimport RoadmapList from './RoadmapList';\nimport CareerRoadmapDetail from './CareerRoadmapDetail';\n\n// 1. props로 userId를 받도록 추가\nexport default function CareerPlanFlow({ darkMode, userId }) {\n  const [view, setView] = useState('category');\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [selectedRoadmapId, setSelectedRoadmapId] = useState(null);\n\n  const handleSelectCategory = (category) => {\n    setSelectedCategory(category);\n    setView('list');\n  };\n\n  const handleSelectRoadmap = (id) => {\n    setSelectedRoadmapId(id);\n    setView('detail');\n  };\n\n  const handleBack = () => {\n    if (view === 'detail') {\n      setView('list');\n      setSelectedRoadmapId(null);\n    } else if (view === 'list') {\n      setView('category');\n      setSelectedCategory(null);\n    }\n  };\n\n  switch (view) {\n    case 'list':\n      return (\n        <RoadmapList\n          category={selectedCategory}\n          onSelectRoadmap={handleSelectRoadmap}\n          onBack={handleBack}\n          darkMode={darkMode}\n          userId={userId} // 2. RoadmapList에 userId 전달\n        />\n      );\n    case 'detail':\n      return (\n        <CareerRoadmapDetail\n          roadmapId={selectedRoadmapId}\n          onBack={handleBack}\n          darkMode={darkMode}\n          // 상세 페이지에도 찜하기 버튼을 추가한다면 userId 전달 필요\n          // userId={userId} \n        />\n      );\n    case 'category':\n    default:\n      return (\n        <RoadmapCategory\n          onSelectCategory={handleSelectCategory}\n          darkMode={darkMode}\n        />\n      );\n  }\n}","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport default function GapDetail() {\n  return (\n    <Container>\n      <h2>갭 분석 상세</h2>\n      <p>\n        이 페이지는 사용자의 현재 역량과 목표 직무 간의 격차를 분석합니다. 기술 스택,\n        프로젝트 경험, 협업 능력 등을 기반으로 부족한 부분을 진단하고 추천을 제공합니다.\n      </p>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  padding: 2rem;\n  max-width: 900px;\n  margin: 0 auto;\n  h2 {\n    font-size: 1.8rem;\n    color: #ffa500;\n    margin-bottom: 1rem;\n  }\n  p {\n    font-size: 1.1rem;\n    line-height: 1.6;\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { \n  FaChartLine, \n  FaCloud, \n  FaChartBar, \n  FaCalendarAlt, \n  FaFilter,\n  FaArrowLeft,\n  FaSyncAlt,\n  FaDownload,\n  FaInfoCircle\n} from \"react-icons/fa\";\nimport { IoIosArrowDown } from \"react-icons/io\";\nimport WordCloud from \"react-wordcloud\";\nimport apiClient from '../api/apiClient';\n\nexport default function TrendDetail({ darkMode = false, setSelectedPage }) {\n  // 상태 관리\n  const [jobNames, setJobNames] = useState([]);\n  const [selectedJob, setSelectedJob] = useState(\"\");\n  const [selectedField, setSelectedField] = useState(\"tech_stack\");\n  const [selectedWeek, setSelectedWeek] = useState(null);\n  const [visualizationType, setVisualizationType] = useState(\"wordcloud\"); // wordcloud, barchart, trend\n  const [skillData, setSkillData] = useState([]);\n  const [weeklyStats, setWeeklyStats] = useState([]);\n  const [trendData, setTrendData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [showAdvanced, setShowAdvanced] = useState(false);\n\n  // 필드 타입 옵션\n  const fieldOptions = [\n    { value: \"tech_stack\", label: \"기술 스택\" },\n    { value: \"required_skills\", label: \"필수 스킬\" },\n    { value: \"preferred_skills\", label: \"우대 스킬\" },\n    { value: \"qualifications\", label: \"자격 요건\" },\n    { value: \"preferences\", label: \"선호 사항\" }\n  ];\n\n  // 직무명 조회\n  useEffect(() => {\n    const fetchJobNames = async () => {\n      try {\n        setLoading(true);\n        const response = await apiClient.get(\"/job-role/job-names\");\n        setJobNames(response.data);\n        if (response.data.length > 0) {\n          setSelectedJob(response.data[0]);\n        }\n      } catch (error) {\n        console.error('직무명 조회 실패:', error);\n        setError('직무명을 불러오는데 실패했습니다.');\n        // 임시 데이터로 대체\n        setJobNames(['백엔드 개발자', '프론트엔드 개발자', '데이터 분석가', 'AI 엔지니어']);\n        setSelectedJob('백엔드 개발자');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchJobNames();\n  }, []);\n\n  // 스킬 데이터 조회\n  useEffect(() => {\n    if (!selectedJob) return;\n\n    const fetchSkillData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        let data;\n        if (visualizationType === \"wordcloud\") {\n          const response = await apiClient.get(`/visualization/weekly_skill_frequency`, {\n            params: {\n              job_name: selectedJob,\n              field: selectedField\n            }\n          });\n          data = response.data;\n        } else if (visualizationType === \"trend\") {\n          const response = await apiClient.get(`/stats/trend/${selectedJob}`, {\n            params: {\n              field_type: selectedField,\n              week: selectedWeek\n            }\n          });\n          data = response.data;\n        } else {\n          const response = await apiClient.get(`/stats/weekly/${selectedJob}`, {\n            params: { week: selectedWeek }\n          });\n          data = response.data;\n        }\n\n        setSkillData(data);\n      } catch (error) {\n        console.error('스킬 데이터 조회 실패:', error);\n        setError('데이터를 불러오는데 실패했습니다. 임시 데이터를 표시합니다.');\n        // 임시 데이터\n        setSkillData([\n          { skill: \"Python\", count: 45, year: 2025, week: 28 },\n          { skill: \"Java\", count: 32, year: 2025, week: 28 },\n          { skill: \"JavaScript\", count: 28, year: 2025, week: 28 },\n          { skill: \"SQL\", count: 25, year: 2025, week: 28 },\n          { skill: \"React\", count: 22, year: 2025, week: 28 },\n          { skill: \"Spring\", count: 18, year: 2025, week: 28 },\n          { skill: \"Docker\", count: 15, year: 2025, week: 28 },\n          { skill: \"AWS\", count: 12, year: 2025, week: 28 }\n        ]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchSkillData();\n  }, [selectedJob, selectedField, selectedWeek, visualizationType]);\n\n  // 워드클라우드 옵션\n  const wordCloudOptions = {\n    fontSizes: [12, 60],\n    rotations: 2,\n    rotationAngles: [-90, 0],\n    padding: 5,\n    deterministic: true\n  };\n\n  // 워드클라우드 데이터 변환\n  const wordCloudData = skillData.map(item => ({\n    text: item.skill || item.skill_name,\n    value: item.count || item.frequency || 10\n  }));\n\n  // 차트 데이터 변환\n  const chartData = skillData.slice(0, 10).map(item => ({\n    skill: item.skill || item.skill_name,\n    count: item.count || item.frequency || 10\n  }));\n\n  return (\n    <Container $darkMode={darkMode}>\n      {/* 헤더 */}\n      <Header>\n        <BackButton onClick={() => setSelectedPage(\"career-summary\")}>\n          <FaArrowLeft />\n          <span>뒤로 가기</span>\n        </BackButton>\n        <Title>직무 트렌드 분석</Title>\n        <RefreshButton onClick={() => window.location.reload()}>\n          <FaSyncAlt />\n        </RefreshButton>\n      </Header>\n\n      {/* 컨트롤 패널 */}\n      <ControlPanel $darkMode={darkMode}>\n        <ControlSection>\n          <ControlLabel>\n            <FaFilter />\n            직무 선택\n          </ControlLabel>\n          <Select \n            value={selectedJob} \n            onChange={(e) => setSelectedJob(e.target.value)}\n            $darkMode={darkMode}\n          >\n            {jobNames.map(job => (\n              <option key={job} value={job}>{job}</option>\n            ))}\n          </Select>\n        </ControlSection>\n\n        <ControlSection>\n          <ControlLabel>\n            <FaChartLine />\n            분석 필드\n          </ControlLabel>\n          <Select \n            value={selectedField} \n            onChange={(e) => setSelectedField(e.target.value)}\n            $darkMode={darkMode}\n          >\n            {fieldOptions.map(field => (\n              <option key={field.value} value={field.value}>{field.label}</option>\n            ))}\n          </Select>\n        </ControlSection>\n\n        <ControlSection>\n          <ControlLabel>\n            <FaCalendarAlt />\n            기간 설정\n          </ControlLabel>\n          <Select \n            value={selectedWeek || \"\"} \n            onChange={(e) => setSelectedWeek(e.target.value || null)}\n            $darkMode={darkMode}\n          >\n            <option value=\"\">전체 기간</option>\n            <option value=\"28\">최근 4주</option>\n            <option value=\"12\">최근 12주</option>\n            <option value=\"26\">최근 26주</option>\n          </Select>\n        </ControlSection>\n\n        <AdvancedToggle onClick={() => setShowAdvanced(!showAdvanced)}>\n          <span>고급 설정</span>\n          <IoIosArrowDown style={{ transform: showAdvanced ? 'rotate(180deg)' : 'rotate(0deg)' }} />\n        </AdvancedToggle>\n      </ControlPanel>\n\n      {/* 고급 설정 */}\n      {showAdvanced && (\n        <AdvancedPanel $darkMode={darkMode}>\n          <ControlSection>\n            <ControlLabel>\n              <FaInfoCircle />\n              시각화 방식\n            </ControlLabel>\n            <VisualizationToggle>\n              <ToggleButton \n                $active={visualizationType === \"wordcloud\"}\n                onClick={() => setVisualizationType(\"wordcloud\")}\n                $darkMode={darkMode}\n              >\n                <FaCloud />\n                워드클라우드\n              </ToggleButton>\n              <ToggleButton \n                $active={visualizationType === \"barchart\"}\n                onClick={() => setVisualizationType(\"barchart\")}\n                $darkMode={darkMode}\n              >\n                <FaChartBar />\n                막대 그래프\n              </ToggleButton>\n              <ToggleButton \n                $active={visualizationType === \"trend\"}\n                onClick={() => setVisualizationType(\"trend\")}\n                $darkMode={darkMode}\n              >\n                <FaChartLine />\n                트렌드 차트\n              </ToggleButton>\n            </VisualizationToggle>\n          </ControlSection>\n        </AdvancedPanel>\n      )}\n\n      {/* 메인 콘텐츠 */}\n      <MainContent>\n        {loading ? (\n          <LoadingContainer>\n            <LoadingSpinner />\n            <LoadingText>데이터를 분석하고 있습니다...</LoadingText>\n          </LoadingContainer>\n        ) : error ? (\n          <ErrorContainer>\n            <ErrorIcon>⚠️</ErrorIcon>\n            <ErrorMessage>{error}</ErrorMessage>\n            <ErrorNote>실제 데이터가 부족하여 샘플 데이터를 표시합니다.</ErrorNote>\n          </ErrorContainer>\n        ) : null}\n\n        {/* 시각화 영역 */}\n        <VisualizationContainer $darkMode={darkMode}>\n          {visualizationType === \"wordcloud\" && (\n            <WordCloudContainer>\n              <ChartTitle>스킬 빈도 워드클라우드</ChartTitle>\n              <WordCloudWrapper>\n                <WordCloud words={wordCloudData} options={wordCloudOptions} />\n              </WordCloudWrapper>\n            </WordCloudContainer>\n          )}\n\n          {visualizationType === \"barchart\" && (\n            <BarChartContainer>\n              <ChartTitle>상위 스킬 빈도</ChartTitle>\n              <BarChart>\n                {chartData.map((item, index) => (\n                  <BarItem key={index}>\n                    <BarLabel>{item.skill}</BarLabel>\n                    <BarWrapper>\n                      <Bar \n                        $width={(item.count / Math.max(...chartData.map(d => d.count))) * 100}\n                        $darkMode={darkMode}\n                      />\n                      <BarValue>{item.count}</BarValue>\n                    </BarWrapper>\n                  </BarItem>\n                ))}\n              </BarChart>\n            </BarChartContainer>\n          )}\n\n          {visualizationType === \"trend\" && (\n            <TrendChartContainer>\n              <ChartTitle>스킬 트렌드 분석</ChartTitle>\n              <TrendInfo>\n                <TrendItem>\n                  <TrendLabel>분석 직무:</TrendLabel>\n                  <TrendValue>{selectedJob}</TrendValue>\n                </TrendItem>\n                <TrendItem>\n                  <TrendLabel>분석 필드:</TrendLabel>\n                  <TrendValue>{fieldOptions.find(f => f.value === selectedField)?.label}</TrendValue>\n                </TrendItem>\n                <TrendItem>\n                  <TrendLabel>데이터 포인트:</TrendLabel>\n                  <TrendValue>{skillData.length}개</TrendValue>\n                </TrendItem>\n              </TrendInfo>\n              <TrendChart>\n                {skillData.slice(0, 8).map((item, index) => (\n                  <TrendBar key={index} $height={item.count || 10} $darkMode={darkMode}>\n                    <TrendBarLabel>{item.skill || item.skill_name}</TrendBarLabel>\n                  </TrendBar>\n                ))}\n              </TrendChart>\n            </TrendChartContainer>\n          )}\n        </VisualizationContainer>\n\n        {/* 분석 결과 요약 */}\n        <AnalysisSummary $darkMode={darkMode}>\n          <SummaryTitle>분석 결과 요약</SummaryTitle>\n          <SummaryGrid>\n            <SummaryCard $darkMode={darkMode}>\n              <SummaryCardTitle> 인기 스킬</SummaryCardTitle>\n              <SummaryCardContent>\n                {chartData.slice(0, 3).map((item, index) => (\n                  <SummaryItem key={index}>\n                    <span>{index + 1}.</span> {item.skill} ({item.count}회)\n                  </SummaryItem>\n                ))}\n              </SummaryCardContent>\n            </SummaryCard>\n\n            <SummaryCard $darkMode={darkMode}>\n              <SummaryCardTitle>📈 트렌드</SummaryCardTitle>\n              <SummaryCardContent>\n                <SummaryItem>• {selectedJob} 직무에서 {selectedField} 분야 분석</SummaryItem>\n                <SummaryItem>• 총 {skillData.length}개의 스킬이 분석됨</SummaryItem>\n                <SummaryItem>• 최고 빈도: {chartData[0]?.skill || 'N/A'}</SummaryItem>\n              </SummaryCardContent>\n            </SummaryCard>\n\n            <SummaryCard $darkMode={darkMode}>\n              <SummaryCardTitle>💡 인사이트</SummaryCardTitle>\n              <SummaryCardContent>\n                <SummaryItem>• {selectedField} 분야의 핵심 스킬 파악</SummaryItem>\n                <SummaryItem>• 시장 수요와 기술 트렌드 분석</SummaryItem>\n                <SummaryItem>• 커리어 계획 수립에 활용 가능</SummaryItem>\n              </SummaryCardContent>\n            </SummaryCard>\n          </SummaryGrid>\n        </AnalysisSummary>\n      </MainContent>\n    </Container>\n  );\n}\n\n/* ───────────── styled-components ───────────── */\nconst Container = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  background: ${({ $darkMode }) => ($darkMode ? \"#121212\" : \"#f8f9fa\")};\n  color: ${({ $darkMode }) => ($darkMode ? \"#eee\" : \"#333\")};\n  padding: 2rem;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 2rem;\n  padding-bottom: 1rem;\n  border-bottom: 2px solid ${({ $darkMode }) => ($darkMode ? \"#333\" : \"#e9ecef\")};\n`;\n\nconst BackButton = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  background: none;\n  border: none;\n  color: #ffa500;\n  cursor: pointer;\n  font-size: 1rem;\n  padding: 0.5rem 1rem;\n  border-radius: 0.5rem;\n  transition: all 0.2s;\n\n  &:hover {\n    background: rgba(255, 165, 0, 0.1);\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 2rem;\n  font-weight: 700;\n  color: #ffa500;\n  margin: 0;\n`;\n\nconst RefreshButton = styled.button`\n  background: none;\n  border: none;\n  color: #ffa500;\n  cursor: pointer;\n  font-size: 1.2rem;\n  padding: 0.5rem;\n  border-radius: 0.5rem;\n  transition: all 0.2s;\n\n  &:hover {\n    background: rgba(255, 165, 0, 0.1);\n  }\n`;\n\nconst ControlPanel = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1.5rem;\n  background: ${({ $darkMode }) => ($darkMode ? \"#1e1e1e\" : \"#fff\")};\n  padding: 1.5rem;\n  border-radius: 1rem;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  margin-bottom: 2rem;\n`;\n\nconst ControlSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n  min-width: 200px;\n`;\n\nconst ControlLabel = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  font-weight: 600;\n  color: ${({ $darkMode }) => ($darkMode ? \"#ccc\" : \"#555\")};\n`;\n\nconst Select = styled.select`\n  padding: 0.75rem;\n  border: 1px solid ${({ $darkMode }) => ($darkMode ? \"#444\" : \"#ddd\")};\n  border-radius: 0.5rem;\n  background: ${({ $darkMode }) => ($darkMode ? \"#2a2a2a\" : \"#fff\")};\n  color: ${({ $darkMode }) => ($darkMode ? \"#eee\" : \"#333\")};\n  font-size: 1rem;\n  cursor: pointer;\n\n  &:focus {\n    outline: none;\n    border-color: #ffa500;\n  }\n`;\n\nconst AdvancedToggle = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  background: none;\n  border: none;\n  color: #ffa500;\n  cursor: pointer;\n  font-size: 1rem;\n  padding: 0.5rem 1rem;\n  border-radius: 0.5rem;\n  transition: all 0.2s;\n\n  &:hover {\n    background: rgba(255, 165, 0, 0.1);\n  }\n`;\n\nconst AdvancedPanel = styled.div`\n  background: ${({ $darkMode }) => ($darkMode ? \"#1e1e1e\" : \"#fff\")};\n  padding: 1.5rem;\n  border-radius: 1rem;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  margin-bottom: 2rem;\n`;\n\nconst VisualizationToggle = styled.div`\n  display: flex;\n  gap: 0.5rem;\n  flex-wrap: wrap;\n`;\n\nconst ToggleButton = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.75rem 1rem;\n  border: 1px solid ${({ $active, $darkMode }) => ($active ? \"#ffa500\" : ($darkMode ? \"#444\" : \"#ddd\"))};\n  border-radius: 0.5rem;\n  background: ${({ $active, $darkMode }) => ($active ? \"#ffa500\" : ($darkMode ? \"#2a2a2a\" : \"#fff\"))};\n  color: ${({ $active, $darkMode }) => ($active ? \"#fff\" : ($darkMode ? \"#eee\" : \"#333\"))};\n  cursor: pointer;\n  transition: all 0.2s;\n\n  &:hover {\n    background: ${({ $active }) => ($active ? \"#ffa500\" : \"rgba(255, 165, 0, 0.1)\")};\n  }\n`;\n\nconst MainContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n`;\n\nconst LoadingContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 1rem;\n  padding: 3rem;\n`;\n\nconst LoadingSpinner = styled.div`\n  width: 40px;\n  height: 40px;\n  border: 4px solid #f3f3f3;\n  border-top: 4px solid #ffa500;\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n\n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`;\n\nconst LoadingText = styled.p`\n  color: #666;\n  font-size: 1.1rem;\n`;\n\nconst ErrorContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 1rem;\n  padding: 2rem;\n  background: #fff3cd;\n  border: 1px solid #ffeaa7;\n  border-radius: 0.5rem;\n`;\n\nconst ErrorIcon = styled.div`\n  font-size: 2rem;\n`;\n\nconst ErrorMessage = styled.p`\n  color: #856404;\n  font-weight: 600;\n`;\n\nconst ErrorNote = styled.p`\n  color: #856404;\n  font-size: 0.9rem;\n`;\n\nconst VisualizationContainer = styled.div`\n  background: ${({ $darkMode }) => ($darkMode ? \"#1e1e1e\" : \"#fff\")};\n  border-radius: 1rem;\n  padding: 2rem;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  min-height: 500px;\n`;\n\nconst ChartTitle = styled.h3`\n  font-size: 1.5rem;\n  font-weight: 700;\n  color: #ffa500;\n  margin-bottom: 1.5rem;\n  text-align: center;\n`;\n\nconst WordCloudContainer = styled.div`\n  width: 100%;\n  height: 400px;\n`;\n\nconst WordCloudWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst BarChartContainer = styled.div`\n  width: 100%;\n`;\n\nconst BarChart = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n\nconst BarItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n`;\n\nconst BarLabel = styled.div`\n  min-width: 120px;\n  font-weight: 600;\n`;\n\nconst BarWrapper = styled.div`\n  flex: 1;\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n`;\n\nconst Bar = styled.div`\n  height: 30px;\n  background: linear-gradient(90deg, #ffa500, #ff8c00);\n  border-radius: 15px;\n  width: ${({ $width }) => $width}%;\n  transition: width 0.3s ease;\n`;\n\nconst BarValue = styled.div`\n  min-width: 40px;\n  font-weight: 600;\n  color: #ffa500;\n`;\n\nconst TrendChartContainer = styled.div`\n  width: 100%;\n`;\n\nconst TrendInfo = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 1rem;\n  margin-bottom: 2rem;\n  padding: 1rem;\n  background: ${({ $darkMode }) => ($darkMode ? \"#2a2a2a\" : \"#f8f9fa\")};\n  border-radius: 0.5rem;\n`;\n\nconst TrendItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst TrendLabel = styled.span`\n  font-weight: 600;\n  color: #666;\n`;\n\nconst TrendValue = styled.span`\n  color: #ffa500;\n  font-weight: 600;\n`;\n\nconst TrendChart = styled.div`\n  display: flex;\n  align-items: end;\n  gap: 1rem;\n  height: 300px;\n  padding: 1rem 0;\n`;\n\nconst TrendBar = styled.div`\n  flex: 1;\n  background: linear-gradient(to top, #ffa500, #ff8c00);\n  border-radius: 4px 4px 0 0;\n  height: ${({ $height }) => Math.max($height * 2, 20)}px;\n  min-height: 20px;\n  position: relative;\n  transition: height 0.3s ease;\n`;\n\nconst TrendBarLabel = styled.div`\n  position: absolute;\n  bottom: -25px;\n  left: 50%;\n  transform: translateX(-50%);\n  font-size: 0.8rem;\n  font-weight: 600;\n  white-space: nowrap;\n  color: ${({ $darkMode }) => ($darkMode ? \"#ccc\" : \"#666\")};\n`;\n\nconst AnalysisSummary = styled.div`\n  background: ${({ $darkMode }) => ($darkMode ? \"#1e1e1e\" : \"#fff\")};\n  border-radius: 1rem;\n  padding: 2rem;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n`;\n\nconst SummaryTitle = styled.h3`\n  font-size: 1.5rem;\n  font-weight: 700;\n  color: #ffa500;\n  margin-bottom: 1.5rem;\n`;\n\nconst SummaryGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: 1.5rem;\n`;\n\nconst SummaryCard = styled.div`\n  background: ${({ $darkMode }) => ($darkMode ? \"#2a2a2a\" : \"#f8f9fa\")};\n  border-radius: 0.5rem;\n  padding: 1.5rem;\n  border-left: 4px solid #ffa500;\n`;\n\nconst SummaryCardTitle = styled.h4`\n  font-size: 1.1rem;\n  font-weight: 700;\n  color: #ffa500;\n  margin-bottom: 1rem;\n`;\n\nconst SummaryCardContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n`;\n\nconst SummaryItem = styled.div`\n  font-size: 0.95rem;\n  line-height: 1.4;\n  color: ${({ $darkMode }) => ($darkMode ? \"#ccc\" : \"#666\")};\n`;","import React, { useEffect, useState, useMemo, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  getMyChatSessions,\n  createChatSession,\n  deleteChatSession,\n} from \"../api/mcp\";\nimport { FaPlus, FaRegClock, FaTrashAlt, FaCommentDots } from \"react-icons/fa\";\n\n// 시간 차이를 계산하여 \"방금 전\", \"어제\" 등으로 변환하는 함수\nconst timeSince = (date) => {\n  const seconds = Math.floor((new Date() - date) / 1000);\n  let interval = seconds / 31536000;\n  if (interval > 1) return Math.floor(interval) + \"년 전\";\n  interval = seconds / 2592000;\n  if (interval > 1) return Math.floor(interval) + \"달 전\";\n  interval = seconds / 86400;\n  if (interval > 1) return Math.floor(interval) + \"일 전\";\n  interval = seconds / 3600;\n  if (interval > 1) return Math.floor(interval) + \"시간 전\";\n  interval = seconds / 60;\n  if (interval > 1) return Math.floor(interval) + \"분 전\";\n  return \"방금 전\";\n};\n\n\n// ✅ 세션 정보를 표시할 새로운 카드 컴포넌트\nconst SessionCard = React.memo(({ session, onSelect, onDelete, darkMode }) => {\n  // 현재 API는 ID만 반환하므로, 실제 생성 시간을 ID 기반으로 시뮬레이션합니다.\n  // 최신 ID일수록 최신 시간으로 표시됩니다.\n  const simulatedDate = new Date(Date.now() - (928 - session.id) * 3600000);\n\n  return (\n    <Card onClick={() => onSelect(session.id)} $darkMode={darkMode}>\n      <CardIcon $darkMode={darkMode}><FaCommentDots /></CardIcon>\n      <CardTitle>Session #{session.id}</CardTitle>\n      <CardPreview $darkMode={darkMode}>\n        이전 대화 내용을 보려면 클릭하세요.\n      </CardPreview>\n      <CardFooter $darkMode={darkMode}>\n        <Timestamp>\n          <FaRegClock />\n          {timeSince(simulatedDate)}\n        </Timestamp>\n        <DeleteButton onClick={(e) => {\n          e.stopPropagation();\n          onDelete(session.id);\n        }}>\n          <FaTrashAlt />\n        </DeleteButton>\n      </CardFooter>\n    </Card>\n  );\n});\n\n\nexport default function ChatSessionsList({\n  token,\n  selectedSession,\n  onSelect,\n  darkMode,\n}) {\n  const [sessions, setSessions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [filter, setFilter] = useState(\"\");\n\n  const load = useCallback(async () => {\n    setLoading(true);\n    try {\n      const ids = await getMyChatSessions(token);\n      const list = ids.sort((a, b) => b - a).map((id) => ({ id }));\n      setSessions(list);\n    } catch (e) {\n      console.error(\"세션 목록 조회 실패:\", e);\n    } finally {\n      setLoading(false);\n    }\n  }, [token]);\n\n  useEffect(() => {\n    if (token) load();\n  }, [token, load]);\n\n  const handleNew = async () => {\n    try {\n      const data = await createChatSession(token);\n      onSelect(data.id);\n      await load();\n    } catch (e) {\n      console.error(\"새 세션 생성 실패\", e);\n    }\n  };\n\n  const handleDelete = async (id) => {\n    if (window.confirm(`Session #${id}를 정말 삭제하시겠습니까?`)) {\n      try {\n        await deleteChatSession(id, token);\n        if (id === selectedSession) onSelect(null);\n        await load();\n      } catch (e) {\n        console.error(\"세션 삭제 실패\", e);\n      }\n    }\n  };\n  \n  const handleFilterChange = (e) => {\n    setFilter(e.target.value);\n  };\n\n  const filtered = useMemo(() => {\n    const kw = filter.trim();\n    return sessions.filter((s) => String(s.id).includes(kw));\n  }, [sessions, filter]);\n\n  return (\n    <Container $darkMode={darkMode}>\n      <TopBar>\n        <Title>대화 이력</Title>\n        <NewBtn onClick={handleNew} $darkMode={darkMode}>\n          <FaPlus /> 새 채팅\n        </NewBtn>\n      </TopBar>\n\n      <SearchInput\n        placeholder=\"세션 ID 검색\"\n        value={filter}\n        onChange={handleFilterChange}\n        $darkMode={darkMode}\n      />\n\n      {/* ✅ 카드 그리드 레이아웃으로 변경 */}\n      <CardGrid>\n        {loading && <Msg>로딩 중…</Msg>}\n        {!loading && filtered.length > 0 &&\n          filtered.map((s) => (\n            <SessionCard\n              key={s.id}\n              session={s}\n              onSelect={onSelect}\n              onDelete={handleDelete}\n              darkMode={darkMode}\n            />\n          ))}\n        {!loading && filtered.length === 0 && <Msg>대화 이력이 없습니다.</Msg>}\n      </CardGrid>\n    </Container>\n  );\n}\n\n// --- ✅ 새롭게 디자인된 Styled Components ---\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  background: ${({ $darkMode }) => ($darkMode ? \"rgb(255, 255, 255)\" : \"rgb(255, 255, 255)\")};\n  color: ${({ $darkMode }) => ($darkMode ? \"#e0e0e0\" : \"#333\")};\n  padding: 1.5rem;\n`;\n\nconst TopBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1.5rem;\n`;\n\nconst Title = styled.h3`\n  margin: 0;\n  font-size: 1.5rem;\n  font-weight: 700;\n  color: ${({ $darkMode }) => ($darkMode ? \"#fff\" : \"#000\")};\n`;\n\nconst NewBtn = styled.button`\n  background: #5a67d8;\n  color: white;\n  border: none;\n  padding: 0.6rem 1.2rem;\n  border-radius: 8px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 0.6rem;\n  font-weight: bold;\n  font-size: 0.9rem;\n  transition: all 0.2s ease-in-out;\n\n  &:hover {\n    background: #434190;\n    transform: translateY(-2px);\n  }\n`;\n\nconst SearchInput = styled.input`\n  margin-bottom: 1.5rem;\n  padding: 0.8rem 1rem;\n  width: 100%;\n  border-radius: 8px;\n  border: 1px solid ${({ $darkMode }) => ($darkMode ? \"#444\" : \"#ddd\")};\n  background-color: ${({ $darkMode }) => ($darkMode ? \"#1e1e1e\" : \"#fff\")};\n  color: ${({ $darkMode }) => ($darkMode ? \"#e0e0e0\" : \"#333\")};\n  font-size: 1rem;\n\n  &:focus {\n    outline: none;\n    border-color: #5a67d8;\n    box-shadow: 0 0 0 2px rgba(90, 103, 216, 0.3);\n  }\n`;\n\nconst CardGrid = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding-right: 10px; // for scrollbar\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  gap: 1.5rem;\n`;\n\nconst Card = styled.div`\n  background: ${({ $darkMode }) => ($darkMode ? \"#1e1e1e\" : \"#ffffff\")};\n  border-radius: 12px;\n  padding: 1.2rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  border: 1px solid ${({ $darkMode }) => ($darkMode ? \"#333\" : \"#eee\")};\n  box-shadow: 0 2px 4px rgba(0,0,0,0.05);\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  min-height: 150px;\n\n  &:hover {\n    transform: translateY(-4px);\n    box-shadow: 0 4px 12px rgba(0,0,0,0.1);\n    border-color: #5a67d8;\n  }\n`;\n\nconst CardIcon = styled.div`\n  font-size: 1.5rem;\n  color: ${({ $darkMode }) => ($darkMode ? \"#5a67d8\" : \"#5a67d8\")};\n  margin-bottom: 0.5rem;\n`;\n\nconst CardTitle = styled.h4`\n  font-size: 1.1rem;\n  font-weight: 600;\n  margin: 0 0 0.5rem 0;\n`;\n\nconst CardPreview = styled.p`\n  font-size: 0.9rem;\n  color: #888;\n  margin: 0;\n  flex-grow: 1;\n`;\n\nconst CardFooter = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 1rem;\n  padding-top: 0.5rem;\n  border-top: 1px solid ${({ $darkMode }) => ($darkMode ? \"#333\" : \"#f0f0f0\")};\n  font-size: 0.8rem;\n  color: #888;\n`;\n\nconst Timestamp = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.4rem;\n`;\n\nconst DeleteButton = styled.button`\n  background: none;\n  border: none;\n  color: #aaa;\n  cursor: pointer;\n  font-size: 0.9rem;\n  padding: 0.2rem;\n  \n  &:hover {\n    color: #ef4444;\n  }\n`;\n\nconst Msg = styled.div`\n  text-align: center;\n  color: #666;\n  width: 100%;\n  grid-column: 1 / -1; // 그리드 전체 너비 차지\n  padding: 2rem;\n`;","import React, { useEffect, useRef, useState, useCallback } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport PromptBar from \"./PromptBar\";\nimport {\n  createChatSession,\n  fetchChatHistory,\n  sendChatMessage,\n} from \"../api/mcp\";\n\nexport default function ChatPage({\n  sessionId,\n  token,\n  darkMode,\n  onNewSession,\n}) {\n  const [chatHistory, setChatHistory] = useState([]);\n  const [loadingHistory, setLoadingHistory] = useState(false);\n  const [sending, setSending] = useState(false);\n  const chatEndRef = useRef(null);\n  const isMounted = useRef(true);\n\n  useEffect(() => {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  const loadOrCreateSession = useCallback(async () => {\n    if (sessionId) {\n      setLoadingHistory(true);\n      try {\n        const history = await fetchChatHistory(sessionId, token);\n        if (isMounted.current) {\n          setChatHistory(history);\n        }\n      } catch (e) {\n        console.error(\"히스토리 조회 실패:\", e);\n      } finally {\n        if (isMounted.current) {\n          setLoadingHistory(false);\n        }\n      }\n    } else if (token) {\n      try {\n        const data = await createChatSession(token);\n        if (isMounted.current) {\n          onNewSession(data.id);\n        }\n      } catch (e) {\n        console.error(\"새 채팅 세션 생성 실패:\", e);\n      }\n    }\n  }, [sessionId, token, onNewSession]);\n\n\n  useEffect(() => {\n    loadOrCreateSession();\n  }, [loadOrCreateSession]);\n\n\n  useEffect(() => {\n    chatEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [chatHistory]);\n\n  const handlePromptSubmit = async (text) => {\n    const trimmed = text.trim();\n    if (!trimmed || !sessionId) return;\n\n    const userMessage = {\n      role: \"user\",\n      content: trimmed,\n      timestamp: new Date().toISOString(),\n    };\n\n    setChatHistory((h) => [...h, userMessage]);\n    setSending(true);\n\n    try {\n      const ans = await sendChatMessage(sessionId, trimmed, token);\n      \n      if (isMounted.current) {\n        setChatHistory((h) => [\n          ...h,\n          {\n            role: \"assistant\",\n            content: ans.answer || \"죄송합니다. 응답을 생성할 수 없습니다.\", // ans.answer가 없는 경우를 대비\n            timestamp: new Date().toISOString(),\n          },\n        ]);\n      }\n    } catch (e) {\n      console.error(\"메시지 전송 실패:\", e);\n      if (isMounted.current) {\n        setChatHistory((h) => [\n          ...h,\n          {\n            role: \"assistant\",\n            content: \"오류가 발생했습니다.\",\n            timestamp: new Date().toISOString(),\n          },\n        ]);\n      }\n    } finally {\n      if (isMounted.current) {\n        setSending(false);\n      }\n    }\n  };\n\n  if (!sessionId) {\n    return (\n      <Placeholder $darkMode={darkMode}>\n        <p>새로운 채팅 세션을 생성하는 중입니다...</p>\n      </Placeholder>\n    );\n  }\n\n  return (\n    <Container $darkMode={darkMode}>\n      <Header>\n        <Info>Session #{sessionId}</Info>\n      </Header>\n\n      <ChatWindow>\n        {loadingHistory && <Status>이력 불러오는 중…</Status>}\n        {!loadingHistory &&\n          chatHistory.map((m, i) => (\n            <Bubble key={i} isUser={m.role === \"user\"}>\n              <Message>{m.content}</Message>\n              <Meta>{new Date(m.timestamp).toLocaleTimeString()}</Meta>\n            </Bubble>\n          ))}\n        {sending && chatHistory[chatHistory.length - 1]?.role === 'user' && (\n          <Bubble isUser={false}>\n            <TypingIndicator>\n              <span></span><span></span><span></span>\n            </TypingIndicator>\n          </Bubble>\n        )}\n        <div ref={chatEndRef} />\n      </ChatWindow>\n      \n      <PromptBarWrapper>\n          <PromptBar\n            // ✅ [수정 완료]\n            onSubmit={(text) => {\n                handlePromptSubmit(text);\n            }}\n            disabled={sending}\n            darkMode={darkMode}\n          />\n      </PromptBarWrapper>\n    </Container>\n  );\n}\n\n// ─── Styled Components (기존과 동일) ────────────────────────\nconst fadeIn = keyframes`\n  from { opacity: 0; transform: translateY(5px); }\n  to   { opacity: 1; transform: translateY(0); }\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  // 이 부분이 배경색을 결정합니다.\n  background: ${({ $darkMode }) => ($darkMode ? \"rgb(255, 255, 255)\" : \"rgb(255, 255, 255)\")};\n`;\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.5rem 1rem;\n  border-bottom: 1px solid ${({ $darkMode }) => ($darkMode ? \"#333\" : \"#eee\")};\n`;\n\nconst Info = styled.span`\n  font-weight: bold;\n`;\n\nconst ChatWindow = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: 1rem;\n  display: flex;\n  flex-direction: column;\n  gap: 0.75rem;\n`;\n\nconst Status = styled.div`\n  text-align: center;\n  color: #888;\n`;\n\nconst Placeholder = styled.div`\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  line-height: 1.6;\n  color: ${({ $darkMode }) => ($darkMode ? \"#ccc\" : \"#555\")};\n`;\n\nconst Bubble = styled.div`\n  align-self: ${({ isUser }) => (isUser ? \"flex-end\" : \"flex-start\")};\n  background: ${({ isUser, $darkMode }) =>\n    isUser\n      ? $darkMode\n        ? \"#3a4a78\"\n        : \"#bbdefb\"\n      : $darkMode\n      ? \"#333\"\n      : \"#e0e0e0\"};\n  border-radius: 1rem;\n  padding: 0.6rem 1rem;\n  max-width: 70%;\n  animation: ${fadeIn} 0.3s ease;\n`;\n\nconst Message = styled.div`\n  white-space: pre-wrap;\n  word-break: break-word;\n`;\n\nconst Meta = styled.div`\n  font-size: 0.7rem;\n  color: ${({ $darkMode }) => ($darkMode ? \"#888\" : \"#555\")};\n  text-align: right;\n  margin-top: 0.2rem;\n`;\n\nconst typing = keyframes`\n  0%, 80%, 100% {\n    box-shadow: 0 0;\n    height: 4px;\n  }\n  40% {\n    box-shadow: 0 -4px;\n    height: 8px;\n  }\n`;\n\nconst TypingIndicator = styled.div`\n  span {\n    display: inline-block;\n    width: 4px;\n    height: 4px;\n    border-radius: 50%;\n    background-color: #888;\n    margin: 0 2px;\n    animation: ${typing} 1.4s infinite ease-in-out both;\n  }\n  span:nth-child(2) {\n    animation-delay: 0.2s;\n  }\n  span:nth-child(3) {\n    animation-delay: 0.4s;\n  }\n`;\n\nconst PromptBarWrapper = styled.div`\n  padding: 1rem;\n  border-top: 1px solid ${({ $darkMode }) => ($darkMode ? \"#333\" : \"#eee\")};\n`;","/* ───────── src/components/CareerRoadmapMain.jsx ───────── */\nimport React, { useState, useEffect } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { IoIosArrowUp } from \"react-icons/io\";\nimport { \n  FaChartLine, \n  FaCloud, \n  FaChartBar, \n  FaCalendarAlt, \n  FaFilter,\n  FaInfoCircle,\n  FaStar,\n  FaLightbulb,\n  FaExclamationTriangle,\n  FaCheckCircle,\n  FaArrowUp,\n  FaArrowDown,\n  FaMinus,\n  FaTimes,\n  FaExpand,\n  FaUserTie,\n  FaCog,\n  FaBriefcase\n} from \"react-icons/fa\";\nimport WordCloud from \"react-wordcloud\";\nimport \"tippy.js/dist/tippy.css\";\nimport \"tippy.js/animations/scale.css\";\nimport apiClient from \"../api/apiClient\";\n\nexport default function CareerRoadmapMain({ darkMode = false, setSelectedPage }) {\n  // 트렌드 분석 상태\n  const [jobNames, setJobNames] = useState([]);\n  const [selectedTrendJob, setSelectedTrendJob] = useState(\"\");\n  const [selectedField, setSelectedField] = useState(\"tech_stack\");\n  const [visualizationType, setVisualizationType] = useState(\"wordcloud\");\n  const [skillData, setSkillData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [showInsightsPopup, setShowInsightsPopup] = useState(false);\n\n  // 갭 분석 상태\n  const [gapResult, setGapResult] = useState(\"\");\n  const [topSkills, setTopSkills] = useState([]);\n  const [gapLoading, setGapLoading] = useState(true);\n\n  // 필드 타입 옵션 (수정된 아이콘)\n  const fieldOptions = [\n    { value: \"tech_stack\", label: \"기술 스택\", icon: <FaCog /> },\n    { value: \"required_skills\", label: \"요구 스택\", icon: <FaUserTie /> },\n    { value: \"preferred_skills\", label: \"우대 사항\", icon: <FaStar /> },\n    { value: \"main_tasks_skills\", label: \"주요 업무\", icon: <FaBriefcase /> }\n  ];\n\n  // 1. 상태 분리\n  const [trendJobNames, setTrendJobNames] = useState([]);\n  const [gapJobNames, setGapJobNames] = useState([]);\n  const [selectedGapJob, setSelectedGapJob] = useState(\"\");\n\n  // 2. 직무명 리스트 fetch (한 번만)\n  useEffect(() => {\n    const fetchJobNames = async () => {\n      try {\n        const response = await apiClient.get(\"/job-role/job-names/with-posts\");\n        const jobList = response.data.map(job => job.name);\n        setJobNames(jobList);\n        if (jobList.length > 0) {\n          setSelectedTrendJob(jobList[0]);\n          setSelectedGapJob(jobList[0]);\n        }\n      } catch (error) {\n        setJobNames([]);\n      }\n    };\n    fetchJobNames();\n  }, []);\n\n  // 3. 트렌드 분석 데이터 fetch (selectedTrendJob 기준)\n  useEffect(() => {\n    if (!selectedTrendJob) return;\n\n    console.log(\"트렌드 데이터 요청 - 직무:\", selectedTrendJob, \"필드:\", selectedField);\n\n    const fetchSkillData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        let data;\n        let apiResponse;\n\n        if (visualizationType === \"wordcloud\") {\n          // 메인 화면과 동일하게 /stats/trend/{job_name} 엔드포인트 사용\n          apiResponse = await apiClient.get(`/stats/trend/${encodeURIComponent(selectedTrendJob)}`, {\n            params: {\n              field_type: selectedField,\n              week: 29 // 고정된 주차 사용 (메인 화면과 동일)\n            }\n          });\n\n          console.log(\"트렌드 데이터 API 응답:\", apiResponse.data);\n\n          // 메인 화면과 동일한 응답 구조 사용\n          data = apiResponse.data.trend_data || apiResponse.data;\n        } else if (visualizationType === \"trend\") {\n          // /stats/trend/{job_name} 엔드포인트 사용\n          apiResponse = await apiClient.get(`/stats/trend/${selectedTrendJob}`, {\n            params: {\n              field_type: selectedField,\n              week: 29\n            }\n          });\n          data = apiResponse.data;\n        } else {\n          // /stats/weekly/{job_name} 엔드포인트 사용\n          apiResponse = await apiClient.get(`/stats/weekly/${selectedTrendJob}`, {\n            params: { week: 29 }\n          });\n          data = apiResponse.data;\n        }\n\n        // 메인 화면과 동일한 데이터 처리 방식\n        const processedData = processApiResponse(data, visualizationType);\n        setSkillData(processedData);\n\n      } catch (error) {\n        console.error('스킬 데이터 조회 실패:', error);\n        setError('데이터를 불러오는데 실패했습니다. 샘플 데이터를 표시합니다.');\n        // 메인 화면과 동일한 샘플 데이터 구조\n        setSkillData([\n          { skill: \"Python\", count: 45, trend: \"up\" },\n          { skill: \"Java\", count: 32, trend: \"down\" },\n          { skill: \"JavaScript\", count: 28, trend: \"stable\" },\n          { skill: \"SQL\", count: 25, trend: \"up\" },\n          { skill: \"React\", count: 22, trend: \"up\" },\n          { skill: \"Spring\", count: 18, trend: \"down\" },\n          { skill: \"Docker\", count: 15, trend: \"up\" },\n          { skill: \"AWS\", count: 12, trend: \"up\" },\n          { skill: \"Kubernetes\", count: 10, trend: \"up\" },\n          { skill: \"Node.js\", count: 8, trend: \"stable\" }\n        ]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchSkillData();\n  }, [selectedTrendJob, selectedField, visualizationType]); // selectedWeek 제거\n\n  // 4. 갭 분석 데이터 fetch (selectedGapJob 기준)\n  useEffect(() => {\n    if (!selectedGapJob) return;\n    const fetchGapAnalysis = async () => {\n      setGapLoading(true);\n      try {\n        const { data: resume } = await apiClient.get(\"/users/me/resume\");\n        const desiredJobs = resume.desired_job || [];\n        const jobCategory = desiredJobs[0];\n        if (!jobCategory) {\n          setGapResult(\"관심 직무가 등록되어 있지 않습니다.\");\n          setTopSkills([]);\n          setGapLoading(false);\n          return;\n        }\n        const { data: gapData } = await apiClient.get(\"/visualization/gap-analysis\", {\n          params: { category: jobCategory }\n        });\n        setGapResult(gapData.gap_result || \"분석 결과가 없습니다.\");\n        setTopSkills(gapData.top_skills || []);\n      } catch (err) {\n        setGapResult(\"갭 분석 결과를 불러오지 못했습니다.\");\n        setTopSkills([]);\n      } finally {\n        setGapLoading(false);\n      }\n    };\n    fetchGapAnalysis();\n  }, [selectedGapJob]); // 최초 1회만 실행\n\n  // 메인 화면과 동일한 데이터 처리 방식\n  const processApiResponse = (data, type) => {\n    if (!data || !Array.isArray(data)) return [];\n\n    if (type === \"wordcloud\") {\n      // 메인 화면과 동일한 구조: [{skill, count}]\n      return data.map(item => ({\n        skill: item.skill,\n        count: item.count,\n        trend: \"stable\" // 기본값\n      }));\n    } else if (type === \"trend\") {\n      // /stats/trend/{job_name} 응답 구조\n      return data.map(item => ({\n        skill: item.skill,\n        count: item.count,\n        trend: \"stable\"\n      }));\n    } else {\n      // /stats/weekly/{job_name} 응답 구조\n      return data.map(item => ({\n        skill: item.skill || item.skill_name,\n        count: item.count || item.frequency,\n        trend: \"stable\"\n      }));\n    }\n  };\n\n  // 메인 화면과 동일한 워드클라우드 옵션\n  const wordCloudOptions = {\n    rotations: 0,\n    fontSizes: [14, 50],\n    fontFamily: \"Pretendard, sans-serif\",\n    enableTooltip: false,\n    deterministic: true,\n    colors: [\"#264653\", \"#2a9d8f\", \"#e76f51\", \"#f4a261\", \"#e9c46a\"],\n  };\n\n  // 메인 화면과 동일한 워드클라우드 데이터 변환\n  const wordCloudData = skillData.map(item => ({\n    text: item.skill,\n    value: item.count || 10\n  }));\n\n  // 차트 데이터 변환\n  const chartData = skillData.slice(0, 8).map(item => ({\n    skill: item.skill,\n    count: item.count || 10,\n    trend: item.trend || \"stable\"\n  }));\n\n  // 트렌드 아이콘\n  const getTrendIcon = (trend) => {\n    switch(trend) {\n      case \"up\": return <FaArrowUp style={{ color: \"#28a745\" }} />;\n      case \"down\": return <FaArrowDown style={{ color: \"#dc3545\" }} />;\n      default: return <FaMinus style={{ color: \"#6c757d\" }} />;\n    }\n  };\n\n  // 인사이트 계산\n  const insights = {\n    totalSkills: skillData.length,\n    topSkill: chartData[0]?.skill || \"N/A\",\n    topCount: chartData[0]?.count || 0,\n    risingSkills: chartData.filter(item => item.trend === \"up\").length,\n    decliningSkills: chartData.filter(item => item.trend === \"down\").length,\n    stableSkills: chartData.filter(item => item.trend === \"stable\").length\n  };\n\n  // 갭 분석 카드 UI\n  return (\n    <Container $darkMode={darkMode}>\n      {/* ───────────── 직무 트렌드 분석 (개선된 구조) ───────────── */}\n      <SectionCard>\n        {/* 헤더 섹션 */}\n        <HeaderSection $darkMode={darkMode}>\n          <HeaderLeft>\n            <Title>직무 트렌드 분석</Title>\n            <Subtitle>실시간 채용 시장 동향을 파악하고 트렌드를 분석해보세요</Subtitle>\n          </HeaderLeft>\n          <HeaderRight>\n            <InsightsButton onClick={() => setShowInsightsPopup(true)} $darkMode={darkMode}>\n              <FaLightbulb />\n              인사이트 보기\n            </InsightsButton>\n          </HeaderRight>\n        </HeaderSection>\n\n        {/* 컴팩트한 컨트롤 패널 */}\n        <CompactControlPanel $darkMode={darkMode}>\n          <ControlGroup>\n            <ControlLabel>\n              <FaBriefcase />\n              직무\n            </ControlLabel>\n            <Select \n              value={selectedTrendJob} \n              onChange={e => setSelectedTrendJob(e.target.value)}\n              $darkMode={darkMode}\n            >\n              {jobNames.map(job => (\n                <option key={job} value={job}>{job}</option>\n              ))}\n            </Select>\n          </ControlGroup>\n\n          <ControlGroup>\n            <ControlLabel>\n              <FaChartLine />\n              분석 필드\n            </ControlLabel>\n            <Select \n              value={selectedField} \n              onChange={(e) => setSelectedField(e.target.value)}\n              $darkMode={darkMode}\n            >\n              {fieldOptions.map(field => (\n                <option key={field.value} value={field.value}>\n                  {field.label}\n                </option>\n              ))}\n            </Select>\n          </ControlGroup>\n\n          <ControlGroup>\n            <ControlLabel>\n              <FaInfoCircle />\n              시각화\n            </ControlLabel>\n            <VisualizationToggle>\n              <ToggleButton \n                $active={visualizationType === \"wordcloud\"}\n                onClick={() => setVisualizationType(\"wordcloud\")}\n                $darkMode={darkMode}\n              >\n                <FaCloud />\n              </ToggleButton>\n              <ToggleButton \n                $active={visualizationType === \"barchart\"}\n                onClick={() => setVisualizationType(\"barchart\")}\n                $darkMode={darkMode}\n              >\n                <FaChartBar />\n              </ToggleButton>\n              <ToggleButton \n                $active={visualizationType === \"trend\"}\n                onClick={() => setVisualizationType(\"trend\")}\n                $darkMode={darkMode}\n              >\n                <FaChartLine />\n              </ToggleButton>\n            </VisualizationToggle>\n          </ControlGroup>\n        </CompactControlPanel>\n\n        {/* 메인 시각화 영역 */}\n        <MainVisualizationArea $darkMode={darkMode}>\n          {loading ? (\n            <LoadingContainer>\n              <LoadingSpinner />\n              <LoadingText>데이터를 분석하고 있습니다...</LoadingText>\n            </LoadingContainer>\n          ) : error ? (\n            <ErrorContainer>\n              <ErrorIcon>⚠️</ErrorIcon>\n              <ErrorMessage>{error}</ErrorMessage>\n              <ErrorNote>실제 데이터가 부족하여 샘플 데이터를 표시합니다.</ErrorNote>\n            </ErrorContainer>\n          ) : (\n            <>\n              {visualizationType === \"wordcloud\" && (\n                <WordCloudContainer $darkMode={darkMode}>\n                  <ChartTitle>스킬 빈도 워드클라우드</ChartTitle>\n                  <WordCloudWrapper>\n                    {wordCloudData.length > 0 ? (\n                      <WordCloud \n                        words={wordCloudData} \n                        options={wordCloudOptions}\n                        size={[600, 400]}\n                      />\n                    ) : (\n                      <NoDataText $darkMode={darkMode}>데이터가 없습니다</NoDataText>\n                    )}\n                  </WordCloudWrapper>\n                </WordCloudContainer>\n              )}\n\n              {visualizationType === \"barchart\" && (\n                <BarChartContainer>\n                  <ChartTitle>상위 스킬 빈도 순위</ChartTitle>\n                  <CompactBarChart>\n                    {chartData.map((item, index) => (\n                      <BarItem key={index}>\n                        <BarRank>#{index + 1}</BarRank>\n                        <BarLabel>{item.skill}</BarLabel>\n                        <BarWrapper>\n                          <Bar \n                            $width={(item.count / Math.max(...chartData.map(d => d.count))) * 100}\n                            $darkMode={darkMode}\n                          />\n                          <BarValue>{item.count}</BarValue>\n                          <TrendIcon>{getTrendIcon(item.trend)}</TrendIcon>\n                        </BarWrapper>\n                      </BarItem>\n                    ))}\n                  </CompactBarChart>\n                </BarChartContainer>\n              )}\n\n              {visualizationType === \"trend\" && (\n                <TrendChartContainer>\n                  <ChartTitle>스킬 트렌드 분석</ChartTitle>\n                  <CompactTrendGrid>\n                    {chartData.map((item, index) => (\n                      <TrendCard key={index} $darkMode={darkMode}>\n                        <TrendCardHeader>\n                          <TrendCardTitle>{item.skill}</TrendCardTitle>\n                          <TrendCardRank>#{index + 1}</TrendCardRank>\n                        </TrendCardHeader>\n                        <TrendCardBody>\n                          <TrendCardCount>{item.count}</TrendCardCount>\n                          <TrendCardTrend $trend={item.trend}>\n                            {getTrendIcon(item.trend)}\n                          </TrendCardTrend>\n                        </TrendCardBody>\n                      </TrendCard>\n                    ))}\n                  </CompactTrendGrid>\n                </TrendChartContainer>\n              )}\n            </>\n          )}\n        </MainVisualizationArea>\n\n        {/* 빠른 통계 요약 */}\n        <QuickStats $darkMode={darkMode}>\n          <StatItem>\n            <StatIcon>📊</StatIcon>\n            <StatValue>{insights.totalSkills}</StatValue>\n            <StatLabel>분석 스킬</StatLabel>\n          </StatItem>\n          <StatItem>\n            <StatIcon>🏆</StatIcon>\n            <StatValue>{insights.topSkill}</StatValue>\n            <StatLabel>최고 인기</StatLabel>\n          </StatItem>\n          <StatItem>\n            <StatIcon>📈</StatIcon>\n            <StatValue>{insights.risingSkills}</StatValue>\n            <StatLabel>상승 중</StatLabel>\n          </StatItem>\n          <StatItem>\n            <StatIcon>📉</StatIcon>\n            <StatValue>{insights.decliningSkills}</StatValue>\n            <StatLabel>하락 중</StatLabel>\n          </StatItem>\n        </QuickStats>\n      </SectionCard>\n\n      {/* 인사이트 팝업 */}\n      {showInsightsPopup && (\n        <InsightsPopup $darkMode={darkMode}>\n          <InsightsPopupContent $darkMode={darkMode}>\n            <InsightsPopupHeader>\n              <InsightsPopupTitle>\n                <FaLightbulb />\n                상세 분석 인사이트\n              </InsightsPopupTitle>\n              <CloseButton onClick={() => setShowInsightsPopup(false)} $darkMode={darkMode}>\n                <FaTimes />\n              </CloseButton>\n            </InsightsPopupHeader>\n\n            <InsightsPopupBody>\n              {/* 핵심 통계 */}\n              <StatsGrid>\n                <StatCard $darkMode={darkMode}>\n                  <StatIcon>📊</StatIcon>\n                  <StatValue>{insights.totalSkills}</StatValue>\n                  <StatLabel>분석된 스킬</StatLabel>\n                </StatCard>\n                <StatCard $darkMode={darkMode}>\n                  <StatIcon>🏆</StatIcon>\n                  <StatValue>{insights.topSkill}</StatValue>\n                  <StatLabel>최고 인기 스킬</StatLabel>\n                </StatCard>\n                <StatCard $darkMode={darkMode}>\n                  <StatIcon>📈</StatIcon>\n                  <StatValue>{insights.risingSkills}</StatValue>\n                  <StatLabel>상승 중인 스킬</StatLabel>\n                </StatCard>\n                <StatCard $darkMode={darkMode}>\n                  <StatIcon>📉</StatIcon>\n                  <StatValue>{insights.decliningSkills}</StatValue>\n                  <StatLabel>하락 중인 스킬</StatLabel>\n                </StatCard>\n              </StatsGrid>\n\n              {/* 상세 분석 */}\n              <AnalysisSection>\n                <AnalysisTitle>🔍 상세 분석</AnalysisTitle>\n                <AnalysisList>\n                  <AnalysisItem>\n                    <AnalysisIcon>💡</AnalysisIcon>\n                    <AnalysisText>\n                      <strong>{selectedTrendJob}</strong> 직무에서 <strong>{fieldOptions.find(f => f.value === selectedField)?.label}</strong> 분야를 분석한 결과입니다.\n                    </AnalysisText>\n                  </AnalysisItem>\n                  <AnalysisItem>\n                    <AnalysisIcon>🎯</AnalysisIcon>\n                    <AnalysisText>\n                      가장 많이 요구되는 스킬은 <strong>{insights.topSkill}</strong>로, 총 <strong>{insights.topCount}회</strong> 언급되었습니다.\n                    </AnalysisText>\n                  </AnalysisItem>\n                  <AnalysisItem>\n                    <AnalysisIcon>📈</AnalysisIcon>\n                    <AnalysisText>\n                      <strong>{insights.risingSkills}개</strong>의 스킬이 상승 추세를 보이고 있어 주목할 필요가 있습니다.\n                    </AnalysisText>\n                  </AnalysisItem>\n                  <AnalysisItem>\n                    <AnalysisIcon>💼</AnalysisIcon>\n                    <AnalysisText>\n                      이 데이터를 바탕으로 커리어 계획을 수립하고 학습 우선순위를 결정하세요.\n                    </AnalysisText>\n                  </AnalysisItem>\n                </AnalysisList>\n              </AnalysisSection>\n\n              {/* 추천 액션 */}\n              <RecommendationSection>\n                <RecommendationTitle>🚀 추천 액션</RecommendationTitle>\n                <RecommendationList>\n                  <RecommendationItem>\n                    <RecommendationIcon>⭐</RecommendationIcon>\n                    <RecommendationText>상위 3개 스킬에 집중하여 학습하세요</RecommendationText>\n                  </RecommendationItem>\n                  <RecommendationItem>\n                    <RecommendationIcon>📚</RecommendationIcon>\n                    <RecommendationText>상승 중인 스킬들을 우선적으로 익히세요</RecommendationText>\n                  </RecommendationItem>\n                  <RecommendationItem>\n                    <RecommendationIcon>🎯</RecommendationIcon>\n                    <RecommendationText>실무 프로젝트에 해당 스킬들을 적용해보세요</RecommendationText>\n                  </RecommendationItem>\n                </RecommendationList>\n              </RecommendationSection>\n            </InsightsPopupBody>\n          </InsightsPopupContent>\n        </InsightsPopup>\n      )}\n\n      <ScrollArrow>\n        <IoIosArrowUp />\n        <IoIosArrowUp />\n        <IoIosArrowUp />\n      </ScrollArrow>\n\n      {/* ───────────── 갭 분석 ───────────── */}\n      <SectionCard id=\"gap-analysis-section\">\n        <GapHeader>\n          <div>\n            <Title>갭 분석</Title>\n            <ShortDesc>선택한 직무와 나의 역량 간의 격차를 분석해드립니다.</ShortDesc>\n          </div>\n          <InsightsButton>인사이트 보기</InsightsButton>\n        </GapHeader>\n        <Divider />\n        <GapControlRow>\n          <label htmlFor=\"gap-job-dropdown\" style={{ fontWeight: 600, marginRight: 8 }}>직무 선택</label>\n          <select\n            id=\"gap-job-dropdown\"\n            value={selectedGapJob}\n            onChange={e => setSelectedGapJob(e.target.value)}\n            style={{ padding: \"6px 12px\", borderRadius: 5, fontSize: 14 }}\n          >\n            {jobNames.map(name => (\n              <option key={name} value={name}>{name}</option>\n            ))}\n          </select>\n        </GapControlRow>\n        <GapResultArea>\n          {gapLoading ? (\n            <Text>분석 중...</Text>\n          ) : (\n            <StyledGapResult>\n              {gapResult\n                ? gapResult.split(\"\\n\").map((line, idx) =>\n                    line.trim().startsWith(\"**\") ? (\n                      <GapHeadline key={idx}>{line.replace(/\\*\\*/g, \"\")}</GapHeadline>\n                    ) : (\n                      <span key={idx}>\n                        {line}\n                        <br />\n                      </span>\n                    )\n                  )\n                : <span>분석 결과가 없습니다.</span>\n              }\n            </StyledGapResult>\n          )}\n        </GapResultArea>\n        {topSkills.length > 0 && (\n          <GapSkillList>\n            <b>Top 5 부족 역량</b>\n            <ul>\n              {topSkills.map((skill, idx) => (\n                <li key={idx}>{skill}</li>\n              ))}\n            </ul>\n          </GapSkillList>\n        )}\n      </SectionCard>\n\n      <ScrollArrow>\n        <IoIosArrowUp />\n        <IoIosArrowUp />\n        <IoIosArrowUp />\n      </ScrollArrow>\n\n      {/* ───────────── 극복 방안 ───────────── */}\n      <SectionCard onClick={() => setSelectedPage(\"career-plan\")}>\n        <RightOnly>\n          <Title>극복 방안</Title>\n          <Text>\n            부트캠프 수강, 사이드 프로젝트 수행, Kaggle 대회 참가 등을 통해 실무 경험과\n            포트폴리오를 동시에 확보하는 전략이 효과적입니다. 또한 최신 논문‧블로그 정리를 통해\n            이론적 깊이도 함께 쌓으세요.\n          </Text>\n        </RightOnly>\n      </SectionCard>\n\n      {/* SectionCard 하단에 극복 방안 미니맵 카드 추가 */}\n      <SectionCard>\n        <MiniMapTitle>극복 방안 미니맵</MiniMapTitle>\n        <MiniMapGrid>\n          <MiniMapItem tabIndex={0}>\n            <MiniMapIcon>🎓</MiniMapIcon>\n            <MiniMapLabel>부트캠프</MiniMapLabel>\n          </MiniMapItem>\n          <MiniMapItem tabIndex={0}>\n            <MiniMapIcon>📜</MiniMapIcon>\n            <MiniMapLabel>자격증</MiniMapLabel>\n          </MiniMapItem>\n          <MiniMapItem tabIndex={0}>\n            <MiniMapIcon>💻</MiniMapIcon>\n            <MiniMapLabel>강의</MiniMapLabel>\n          </MiniMapItem>\n        </MiniMapGrid>\n      </SectionCard>\n    </Container>\n  );\n}\n\n/* ───────────── styled-components ───────────── */\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n  padding: 1rem 0 3rem;\n  background: ${({ $darkMode }) => ($darkMode ? \"#121212\" : \"#fff\")};\n  color: ${({ $darkMode }) => ($darkMode ? \"#eee\" : \"#333\")};\n`;\n\nconst SectionCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  background: #f9f9f9;\n  border-radius: 1rem;\n  padding: 1.6rem 2.2rem;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n  min-height: 53vh;\n  transition: box-shadow 0.2s;\n  &:hover {\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  }\n`;\n\nconst LeftSide = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nconst TopTextBlock = styled.div`\n  margin-bottom: 1rem;\n`;\n\nconst RightOnly = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n`;\n\nconst Title = styled.h3`\n  font-size: 1.35rem;\n  font-weight: 700;\n  margin-bottom: 0.8rem;\n  color: #ffa500;\n`;\n\nconst Text = styled.p`\n  font-size: 1.05rem;\n  line-height: 1.6;\n`;\n\n// 새로운 스타일 컴포넌트들\nconst HeaderSection = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: 1.5rem;\n  padding-bottom: 1rem;\n  border-bottom: 2px solid ${({ $darkMode }) => ($darkMode ? \"#333\" : \"#e9ecef\")};\n`;\n\nconst HeaderLeft = styled.div``;\n\nconst HeaderRight = styled.div`\n  display: flex;\n  gap: 0.8rem;\n`;\n\nconst Subtitle = styled.p`\n  font-size: 1rem;\n  color: ${({ $darkMode }) => ($darkMode ? \"#ccc\" : \"#666\")};\n  margin-top: 0.5rem;\n`;\n\n\nconst RefreshButton = styled.button`\n  display: flex;\n  align-items: center;\n  background: ${({ $darkMode }) => ($darkMode ? \"#2a2a2a\" : \"#fff\")};\n  border: 1px solid ${({ $darkMode }) => ($darkMode ? \"#444\" : \"#ddd\")};\n  color: #ffa500;\n  padding: 0.5rem;\n  border-radius: 0.5rem;\n  cursor: pointer;\n  font-size: 0.9rem;\n  transition: all 0.2s;\n\n  &:hover {\n    background: rgba(255, 165, 0, 0.1);\n  }\n`;\n\n// 컴팩트한 컨트롤 패널\nconst CompactControlPanel = styled.div`\n  display: flex;\n  gap: 1.5rem;\n  margin-bottom: 1.5rem;\n  padding: 1rem;\n  background: ${({ $darkMode }) => ($darkMode ? \"#2a2a2a\" : \"#f8f9fa\")};\n  border-radius: 0.8rem;\n  border: 1px solid ${({ $darkMode }) => ($darkMode ? \"#444\" : \"#e9ecef\")};\n  flex-wrap: wrap;\n`;\n\nconst ControlGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.4rem;\n  min-width: 120px;\n  flex: 1;\n`;\n\nconst ControlLabel = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 0.3rem;\n  font-size: 0.85rem;\n  font-weight: 600;\n  color: ${({ $darkMode }) => ($darkMode ? \"#ccc\" : \"#555\")};\n`;\n\nconst Select = styled.select`\n  padding: 0.5rem;\n  border: 1px solid ${({ $darkMode }) => ($darkMode ? \"#444\" : \"#ddd\")};\n  border-radius: 0.4rem;\n  background: ${({ $darkMode }) => ($darkMode ? \"#1e1e1e\" : \"#fff\")};\n  color: ${({ $darkMode }) => ($darkMode ? \"#eee\" : \"#333\")};\n  font-size: 0.85rem;\n  cursor: pointer;\n  transition: all 0.2s;\n\n  &:focus {\n    outline: none;\n    border-color: #ffa500;\n    box-shadow: 0 0 0 2px rgba(255, 165, 0, 0.2);\n  }\n`;\n\nconst VisualizationToggle = styled.div`\n  display: flex;\n  gap: 0.3rem;\n`;\n\nconst ToggleButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0.5rem;\n  border: 1px solid ${({ $active, $darkMode }) => ($active ? \"#ffa500\" : ($darkMode ? \"#444\" : \"#ddd\"))};\n  border-radius: 0.4rem;\n  background: ${({ $active, $darkMode }) => ($active ? \"#ffa500\" : ($darkMode ? \"#1e1e1e\" : \"#fff\"))};\n  color: ${({ $active, $darkMode }) => ($active ? \"#fff\" : ($darkMode ? \"#eee\" : \"#333\"))};\n  cursor: pointer;\n  font-size: 0.8rem;\n  transition: all 0.2s;\n\n  &:hover {\n    background: ${({ $active }) => ($active ? \"#ffa500\" : \"rgba(255, 165, 0, 0.1)\")};\n    transform: translateY(-1px);\n  }\n`;\n\n// 메인 시각화 영역 (더 컴팩트)\nconst MainVisualizationArea = styled.div`\n  background: ${({ $darkMode }) => ($darkMode ? \"#1e1e1e\" : \"#fff\")};\n  border-radius: 0.8rem;\n  padding: 1.5rem;\n  border: 1px solid ${({ $darkMode }) => ($darkMode ? \"#444\" : \"#e9ecef\")};\n  min-height: 350px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 1rem;\n`;\n\nconst LoadingContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 1rem;\n`;\n\nconst LoadingSpinner = styled.div`\n  width: 40px;\n  height: 40px;\n  border: 4px solid #f3f3f3;\n  border-top: 4px solid #ffa500;\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n\n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`;\n\nconst LoadingText = styled.p`\n  color: #666;\n  font-size: 1rem;\n`;\n\nconst ErrorContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 1rem;\n  text-align: center;\n`;\n\nconst ErrorIcon = styled.div`\n  font-size: 2rem;\n`;\n\nconst ErrorMessage = styled.p`\n  color: #dc3545;\n  font-weight: 600;\n`;\n\nconst ErrorNote = styled.p`\n  color: #856404;\n  font-size: 0.9rem;\n`;\n\nconst WordCloudContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n  background: ${props => props.$darkMode ? '#2a2a2a' : '#ffffff'};\n  border-radius: 8px;\n  border: 1px solid ${props => props.$darkMode ? '#404040' : '#e0e0e0'};\n`;\n\nconst ChartTitle = styled.h4`\n  font-size: 1.1rem;\n  font-weight: 700;\n  color: #ffa500;\n  margin-bottom: 1rem;\n  text-align: center;\n`;\n\nconst WordCloudWrapper = styled.div`\n  width: 100%;\n  height: 400px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n`;\n\nconst BarChartContainer = styled.div`\n  width: 100%;\n`;\n\nconst CompactBarChart = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.6rem;\n`;\n\nconst BarItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.6rem;\n`;\n\nconst BarRank = styled.div`\n  min-width: 25px;\n  font-size: 0.75rem;\n  font-weight: 700;\n  color: #ffa500;\n`;\n\nconst BarLabel = styled.div`\n  min-width: 80px;\n  font-size: 0.85rem;\n  font-weight: 600;\n`;\n\nconst BarWrapper = styled.div`\n  flex: 1;\n  display: flex;\n  align-items: center;\n  gap: 0.6rem;\n`;\n\nconst Bar = styled.div`\n  height: 20px;\n  background: linear-gradient(90deg, #ffa500, #ff8c00);\n  border-radius: 10px;\n  width: ${({ $width }) => $width}%;\n  transition: width 0.3s ease;\n  box-shadow: 0 2px 4px rgba(255, 165, 0, 0.2);\n`;\n\nconst BarValue = styled.div`\n  min-width: 35px;\n  font-size: 0.85rem;\n  font-weight: 600;\n  color: #ffa500;\n`;\n\nconst TrendIcon = styled.div`\n  font-size: 0.75rem;\n`;\n\nconst TrendChartContainer = styled.div`\n  width: 100%;\n`;\n\nconst CompactTrendGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n  gap: 0.8rem;\n`;\n\nconst TrendCard = styled.div`\n  background: ${({ $darkMode }) => ($darkMode ? \"#2a2a2a\" : \"#f8f9fa\")};\n  border-radius: 0.4rem;\n  padding: 0.8rem;\n  border: 1px solid ${({ $darkMode }) => ($darkMode ? \"#444\" : \"#e9ecef\")};\n  transition: all 0.2s;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  }\n`;\n\nconst TrendCardHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 0.4rem;\n`;\n\nconst TrendCardTitle = styled.div`\n  font-weight: 600;\n  font-size: 0.8rem;\n`;\n\nconst TrendCardRank = styled.div`\n  font-size: 0.7rem;\n  color: #ffa500;\n  font-weight: 700;\n`;\n\nconst TrendCardBody = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst TrendCardCount = styled.div`\n  font-size: 1rem;\n  font-weight: 700;\n  color: #ffa500;\n`;\n\nconst TrendCardTrend = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.2rem;\n  font-size: 0.7rem;\n  color: ${({ $trend }) => \n    $trend === \"up\" ? \"#28a745\" : \n    $trend === \"down\" ? \"#dc3545\" : \"#6c757d\"\n  };\n`;\n\n// 빠른 통계 요약\nconst QuickStats = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 1rem;\n  padding: 1rem;\n  background: ${({ $darkMode }) => ($darkMode ? \"#2a2a2a\" : \"#f8f9fa\")};\n  border-radius: 0.5rem;\n  border: 1px solid ${({ $darkMode }) => ($darkMode ? \"#444\" : \"#e9ecef\")};\n`;\n\nconst StatItem = styled.div`\n  text-align: center;\n  padding: 0.5rem;\n`;\n\nconst StatIcon = styled.div`\n  font-size: 1.2rem;\n  margin-bottom: 0.3rem;\n`;\n\nconst StatValue = styled.div`\n  font-size: 1rem;\n  font-weight: 700;\n  color: #ffa500;\n  margin-bottom: 0.2rem;\n`;\n\nconst StatLabel = styled.div`\n  font-size: 0.7rem;\n  color: ${({ $darkMode }) => ($darkMode ? \"#ccc\" : \"#666\")};\n`;\n\n// 인사이트 팝업\nconst InsightsPopup = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  animation: fadeIn 0.3s ease;\n\n  @keyframes fadeIn {\n    from { opacity: 0; }\n    to { opacity: 1; }\n  }\n`;\n\nconst InsightsPopupContent = styled.div`\n  background: ${({ $darkMode }) => ($darkMode ? \"#1e1e1e\" : \"#fff\")};\n  border-radius: 1rem;\n  padding: 2rem;\n  max-width: 800px;\n  width: 90%;\n  max-height: 80vh;\n  overflow-y: auto;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);\n  animation: slideUp 0.3s ease;\n\n  @keyframes slideUp {\n    from { \n      opacity: 0; \n      transform: translateY(50px); \n    }\n    to { \n      opacity: 1; \n      transform: translateY(0); \n    }\n  }\n`;\n\nconst InsightsPopupHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 2rem;\n  padding-bottom: 1rem;\n  border-bottom: 2px solid ${({ $darkMode }) => ($darkMode ? \"#444\" : \"#e9ecef\")};\n`;\n\nconst InsightsPopupTitle = styled.h3`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  font-size: 1.5rem;\n  font-weight: 700;\n  color: #ffa500;\n`;\n\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  color: ${({ $darkMode }) => ($darkMode ? \"#ccc\" : \"#666\")};\n  cursor: pointer;\n  font-size: 1.2rem;\n  padding: 0.5rem;\n  border-radius: 0.3rem;\n  transition: all 0.2s;\n\n  &:hover {\n    background: rgba(255, 165, 0, 0.1);\n    color: #ffa500;\n  }\n`;\n\nconst InsightsPopupBody = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n`;\n\nconst StatsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 1rem;\n`;\n\nconst StatCard = styled.div`\n  background: ${({ $darkMode }) => ($darkMode ? \"#2a2a2a\" : \"#f8f9fa\")};\n  border-radius: 0.5rem;\n  padding: 1rem;\n  text-align: center;\n  border: 1px solid ${({ $darkMode }) => ($darkMode ? \"#444\" : \"#e9ecef\")};\n`;\n\nconst AnalysisSection = styled.div``;\n\nconst AnalysisTitle = styled.h5`\n  font-size: 1.1rem;\n  font-weight: 700;\n  color: #ffa500;\n  margin-bottom: 1rem;\n`;\n\nconst AnalysisList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.8rem;\n`;\n\nconst AnalysisItem = styled.div`\n  display: flex;\n  gap: 0.5rem;\n  align-items: flex-start;\n`;\n\nconst AnalysisIcon = styled.div`\n  font-size: 1rem;\n  margin-top: 0.1rem;\n`;\n\nconst AnalysisText = styled.div`\n  font-size: 0.95rem;\n  line-height: 1.4;\n  color: ${({ $darkMode }) => ($darkMode ? \"#ccc\" : \"#666\")};\n`;\n\nconst RecommendationSection = styled.div``;\n\nconst RecommendationTitle = styled.h5`\n  font-size: 1.1rem;\n  font-weight: 700;\n  color: #ffa500;\n  margin-bottom: 1rem;\n`;\n\nconst RecommendationList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.8rem;\n`;\n\nconst RecommendationItem = styled.div`\n  display: flex;\n  gap: 0.5rem;\n  align-items: flex-start;\n`;\n\nconst RecommendationIcon = styled.div`\n  font-size: 1rem;\n  margin-top: 0.1rem;\n`;\n\nconst RecommendationText = styled.div`\n  font-size: 0.95rem;\n  line-height: 1.4;\n  color: ${({ $darkMode }) => ($darkMode ? \"#ccc\" : \"#666\")};\n`;\n\nconst bounce = keyframes`\n  0%,100% { transform: translateY(0);  opacity:.65; }\n  50%     { transform: translateY(10px); opacity:1; }\n`;\n\nconst ScrollArrow = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: -3.2rem;\n  z-index: 5;\n\n  svg {\n    width: 54px;\n    height: 54px;\n    color: #ffa500;\n    transform: rotate(180deg);\n    filter: drop-shadow(0 1px 2px rgba(0,0,0,.18));\n    margin-top: -28px;\n  }\n  animation: ${bounce} 1.6s infinite;\n`;\n\nconst NoDataText = styled.div`\n  color: ${({ $darkMode }) => $darkMode ? '#888' : '#999'};\n  font-size: 0.9rem;\n  text-align: center;\n`;\n\n// 갭 분석 카드 UI\nconst GapHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n`;\n\nconst ShortDesc = styled.div`\n  font-size: 1rem;\n  color: #888;\n  margin-bottom: 0.5rem;\n`;\n\nconst Divider = styled.hr`\n  border: none;\n  border-top: 1.5px solid #eee;\n  margin: 1rem 0 1.2rem 0;\n`;\n\nconst GapControlRow = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 1.2rem;\n`;\n\nconst GapResultArea = styled.div`\n  min-height: 120px;\n`;\n\nconst InsightsButton = styled.button`\n  background: #fff7ed;\n  color: #ffa500;\n  border: 1px solid #ffa500;\n  border-radius: 0.5rem;\n  padding: 0.5rem 1.1rem;\n  font-weight: 600;\n  cursor: pointer;\n  font-size: 0.95rem;\n  transition: all 0.2s;\n  &:hover {\n    background: #ffa500;\n    color: #fff;\n  }\n`;\n\nconst StyledGapResult = styled.div`\n  background: #fffdfa;\n  border-radius: 1rem;\n  padding: 1.3rem 1.5rem;\n  font-size: 1.08rem;\n  color: #333;\n  line-height: 1.8;\n  box-shadow: 0 2px 8px rgba(255, 193, 7, 0.08);\n  min-height: 120px;\n  max-height: 320px;\n  overflow-y: auto;\n  margin-top: 0.5rem;\n  word-break: keep-all;\n`;\n\nconst GapHeadline = styled.div`\n  font-weight: 700;\n  color: #ffa500;\n  margin: 1.1em 0 0.5em 0;\n  font-size: 1.13em;\n`;\n\nconst GapSkillList = styled.div`\n  margin-top: 1.2rem;\n  font-size: 1.05rem;\n  ul {\n    margin: 0.5rem 0 0 1.2rem;\n    padding: 0;\n    color: #444;\n  }\n  li {\n    margin-bottom: 0.2em;\n    font-weight: 500;\n    letter-spacing: 0.01em;\n  }\n`;\n\n// 스타일 추가\nconst MiniMapTitle = styled.h4`\n  font-size: 1.15rem;\n  font-weight: 700;\n  color: #ffa500;\n  margin-bottom: 1.2rem;\n`;\nconst MiniMapGrid = styled.div`\n  display: flex;\n  gap: 1.5rem;\n  justify-content: center;\n  align-items: center;\n`;\nconst MiniMapItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: #fffdfa;\n  border-radius: 1.1rem;\n  padding: 1.2rem 2.2rem;\n  box-shadow: 0 2px 8px rgba(255, 193, 7, 0.08);\n  cursor: pointer;\n  transition: box-shadow 0.18s, transform 0.18s, background 0.18s;\n  border: 2px solid transparent;\n  &:hover, &:focus {\n    box-shadow: 0 4px 16px rgba(255, 193, 7, 0.13);\n    background: #fffbe7;\n    border: 2px solid #ffc107;\n    transform: translateY(-2px) scale(1.04);\n  }\n`;\nconst MiniMapIcon = styled.div`\n  font-size: 2.2rem;\n  margin-bottom: 0.7rem;\n`;\nconst MiniMapLabel = styled.div`\n  font-size: 1.05rem;\n  font-weight: 600;\n  color: #333;\n`;","// ────────────── src/components/JobCardFiltered.jsx ──────────────\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport apiClient from \"../api/apiClient\";\nexport default function JobCardFiltered({ filters, setFilters }) {\n\n  const [techStacks, setTechStacks] = useState([]);\n  const [employmentTypes, setEmploymentTypes] = useState([]);\n  const [applicantTypes, setApplicantTypes] = useState([]);\n  const [jobNames, setJobNames] = useState([]);\n  const [selectedJobName, setSelectedJobName] = useState(\"\");\n  const [jobs, setJobs] = useState([]);\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  useEffect(() => {\n    const fetchFilters = async () => {\n      try {\n        const [\n          techStackRes,\n          employmentRes,\n          applicantRes\n        ] = await Promise.all([\n          apiClient.get(\"/job_posts/unique_tech_stacks\"),\n          apiClient.get(\"/job_posts/unique_employment_types\"),\n          apiClient.get(\"/job_posts/unique_applicant_types\")\n        ]);\n      \n        setTechStacks(techStackRes.data);\n        setEmploymentTypes(employmentRes.data);\n        setApplicantTypes(applicantRes.data);\n      } catch (err) {\n        console.error(\"필터 목록 로드 실패:\", err);\n      }\n    };\n    fetchFilters();\n\n    // 1. 직무명 리스트 불러오기\n    const fetchJobNames = async () => {\n      try {\n        const response = await apiClient.get(\"/job-role/job-names\");\n        const data = response.data;\n        console.log(\"JobCardFiltered 직무명 응답:\", data);\n        setJobNames(data);\n      } catch (error) {\n        console.error(\"JobCardFiltered 직무명 불러오기 실패:\", error);\n      }\n    };\n    fetchJobNames();\n\n    // 2. 공고 리스트 불러오기 (직무명 선택 시마다)\n    const fetchJobs = async () => {\n      try {\n        const params = { limit: 50 };\n        if (selectedJobName) {\n          params.job_name = selectedJobName;\n        }\n        const response = await apiClient.get(\"/job_posts/\", { params });\n        const data = response.data;\n        console.log(\"API 응답 데이터:\", data);\n        if (!Array.isArray(data)) {\n          setJobs([]);\n          return;\n        }\n        setJobs(data);\n      } catch (err) {\n        console.error(\"공고 불러오기 실패:\", err);\n      }\n    };\n    fetchJobs();\n  }, [selectedJobName]);\n\n  const handleChange = (key, value) => {\n    setFilters((prev) => ({ ...prev, [key]: value }));\n  };\n\n  // 검색 버튼 클릭 시\n  const handleSearch = (e) => {\n    e.preventDefault();\n    setSearchTerm(searchInput);\n  };\n\n  // 필터링 로직\n  const filteredJobs = jobs.filter((job) => {\n    if (searchTerm) {\n      const lower = searchTerm.toLowerCase();\n      const company = (job.company_name || \"\").toLowerCase();\n      const title = (job.title || \"\").toLowerCase();\n      // 회사명 또는 공고명에 포함되어야 통과\n      if (!company.includes(lower) && !title.includes(lower)) {\n        return false;\n      }\n    }\n    // 직무명 필터\n    if (selectedJobName && job.job_name !== selectedJobName) {\n      return false;\n    }\n    return true;\n  });\n\n  return (\n    <FilterWrapper>\n\n\n      {/* 나머지 필터/드롭다운/공고 리스트 ... */}\n      {/* 아래쪽에 입력칸/검색 버튼이 있었다면 완전히 삭제! */}\n\n      {/* 2. 기술스택 필터 */}\n      <Select onChange={(e) => handleChange(\"tech_stack\", e.target.value)}>\n        <option value=\"\">기술스택</option>\n        {techStacks.map((stack) => (\n          <option key={stack} value={stack}>{stack}</option>\n        ))}\n      </Select>\n\n      {/* 3. 고용형태 필터 */}\n      <Select onChange={(e) => handleChange(\"employment_type\", e.target.value)}>\n        <option value=\"\">고용형태</option>\n        {employmentTypes.map((type) => (\n          <option key={type} value={type}>{type}</option>\n        ))}\n      </Select>\n\n      {/* 4. 지원자 유형 필터 */}\n      <Select onChange={(e) => handleChange(\"applicant_type\", e.target.value)}>\n        <option value=\"\">지원자 유형</option>\n        {applicantTypes.map((type) => (\n          <option key={type} value={type}>{type}</option>\n        ))}\n      </Select>\n\n      {/* 3. 직무명 드롭다운 (라벨 제거, 전체 → 직무) */}\n      <div style={{ marginBottom: \"1rem\" }}>\n        <select\n          id=\"jobNameDropdown\"\n          value={selectedJobName}\n          onChange={(e) => setSelectedJobName(e.target.value)}\n        >\n          <option value=\"\">직무</option>\n          {jobNames.map(job => (\n            <option key={job.name} value={job.name}>\n              {job.name}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      {/* 공고 리스트 */}\n      {filteredJobs.map((job) => (\n        <div key={job.id}>\n          <b>{job.title}</b> ({job.company_name})\n        </div>\n      ))}\n    </FilterWrapper>\n  );\n}\n\n// ────────────── 💄 스타일링\nconst FilterWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-bottom: 20px;\n  width: 100%;\n  max-width: 260px;  // 💡 너무 넓어지지 않게 제한\n`;\n\nconst Select = styled.select`\n  padding: 6px 10px;\n  border-radius: 5px;\n  border: 1px solid #ccc;\n  background: white;\n  font-size: 13px;\n  width: 100%;\n  box-sizing: border-box;\n  min-width: 200px;\n  max-width: 100%;\n`;\n","// src/components/JobCardPreview.jsx\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { FaHeart, FaRegHeart } from \"react-icons/fa\";\nimport JobCardFiltered from \"./JobCardFiltered\";\nimport apiClient from \"../api/apiClient\";\nexport default function JobCardPreview({ darkMode, savedJobs, setSavedJobs, onJobDetail }) {\n  const [jobPosts, setJobPosts] = useState([]);\n  const [filters, setFilters] = useState({\n    company_name: \"\",\n    employment_type: \"\",\n    applicant_type: \"\",\n    tech_stack: \"\",\n    job_name: \"\",\n  });\n\n  const [searchInput, setSearchInput] = useState(\"\");\n\n  useEffect(() => {\n    fetchJobs();\n  }, [filters]);\n\n  useEffect(() => {\n    fetchSavedJobs();\n  }, []);\n\n  const fetchJobs = async () => {\n    try {\n      const res = await apiClient.get(\"/job_posts/\", {\n        params: filters,\n      });\n\n      if (!Array.isArray(res.data)) {\n        console.error(\"공고 API 응답이 배열이 아님:\", res.data);\n        setJobPosts([]);\n        return;\n      }\n\n      // ✨ 2. API로부터 받은 공고 목록을 유사도(similarity) 점수가 높은 순으로 정렬합니다.\n      const sortedData = res.data.sort((a, b) => {\n        const simA = a.similarity ?? -1;\n        const simB = b.similarity ?? -1;\n        return simB - simA;\n      });\n\n      setJobPosts(sortedData);\n    } catch (err) {\n      console.error(\"❌ 공고 불러오기 실패:\", err);\n      setJobPosts([]);\n    }\n  };\n\n  const fetchSavedJobs = async () => {\n    try {\n      const res = await apiClient.get(\"/preferences/\");\n      const jobs = res.data.map((item) => ({\n        ...item.job_posting,\n        job_post_id: item.job_post_id,\n        preference_id: item.id,\n      }));\n      setSavedJobs(jobs);\n    } catch (err) {\n      console.error(\"찜한 공고 불러오기 실패\", err);\n    }\n  };\n\n  const handleToggleSave = async (jobPostId) => {\n    const isSaved = savedJobs.some((job) => job.job_post_id === jobPostId);\n\n    if (isSaved) {\n      try {\n        await apiClient.delete(`/preferences/${jobPostId}`);\n        setSavedJobs((prev) => prev.filter((job) => job.job_post_id !== jobPostId));\n      } catch (err) {\n        alert(\"찜 해제 실패\");\n      }\n    } else {\n      try {\n        const res = await apiClient.post(\"/preferences/\", { job_post_id: jobPostId });\n        const newJob = {\n          ...res.data.job_posting,\n          job_post_id: res.data.job_post_id,\n          preference_id: res.data.id,\n        };\n        setSavedJobs((prev) => [...prev, newJob]);\n      } catch (err) {\n        if (err.response?.status === 400) {\n          alert(\"이미 찜한 공고입니다.\");\n        } else {\n          console.error(\"❌ 찜 추가 오류:\", err);\n        }\n      }\n    }\n  };\n\n  const handleCardClick = (jobId) => {\n    // 내부 컴포넌트로 상세 페이지 이동\n    if (onJobDetail) {\n      onJobDetail(jobId);\n    }\n  };\n\n  const handleSearch = () => {\n    setFilters(prev => ({\n      ...prev,\n      company_name: \"\", // 기존 company_name 필터 제거\n      title: \"\",        // 기존 title 필터 제거\n      search: searchInput // 새로 추가: 검색어를 search로 전달\n    }));\n  };\n\n  return (\n    <Container>\n      {/* 1. 맨 위에 검색 입력칸/버튼만 남김 */}\n      <div style={{ display: \"flex\", gap: \"1rem\", marginBottom: \"1rem\" }}>\n        <input\n          type=\"text\"\n          placeholder=\"회사명, 공고명으로 검색\"\n          value={searchInput}\n          onChange={e => setSearchInput(e.target.value)}\n          style={{ flex: 1 }}\n        />\n        <button onClick={handleSearch}>검색</button>\n      </div>\n      <JobCardFiltered filters={filters} setFilters={setFilters} />\n      <CardGrid>\n        {jobPosts.map((job) => (\n          <Card\n            key={job.id}\n            $darkMode={darkMode}\n            onClick={() => handleCardClick(job.id)}\n          >\n            {/* ✨ 3. 유사도 점수가 있을 경우, 배지로 표시합니다. */}\n            {job.similarity !== null && typeof job.similarity === 'number' && (\n              <SimilarityBadge $score={job.similarity}>\n                적합도 {(job.similarity * 100).toFixed(0)}%\n              </SimilarityBadge>\n            )}\n\n            <Title>{job.title}</Title>\n            <Company>{job.company_name}</Company>\n            <Info>{job.address}</Info>\n            <Dates>\n              {job.posting_date?.slice(0, 10)} ~{\" \"}\n              {job.deadline?.slice(0, 10) || \"상시\"}\n            </Dates>\n            <HeartButton\n              onClick={(e) => {\n                e.stopPropagation();\n                handleToggleSave(job.id);\n              }}\n            >\n              {savedJobs.some((saved) => saved.job_post_id === job.id) ? (\n                <FaHeart color=\"red\" />\n              ) : (\n                <FaRegHeart />\n              )}\n            </HeartButton>\n          </Card>\n        ))}\n      </CardGrid>\n    </Container>\n  );\n}\n\n/* ───────── styled-components ───────── */\nconst SimilarityBadge = styled.div`\n  position: absolute;\n  top: 10px;\n  left: 10px;\n  background-color: ${({ $score }) =>\n    $score >= 0.7 ? '#2a9d8f' : $score >= 0.4 ? '#f4a261' : '#e76f51'};\n  color: white;\n  padding: 4px 8px;\n  border-radius: 12px;\n  font-size: 11px;\n  font-weight: bold;\n  z-index: 2;\n`;\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst CardGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));\n  gap: 1.4rem;\n`;\n\nconst Card = styled.div`\n  position: relative;\n  border-radius: 1rem;\n  padding: 1.2rem;\n  padding-top: 2rem; // 배지 공간 확보\n  background: ${({ $darkMode }) => ($darkMode ? \"#2a2a2a\" : \"#fffdf7\")};\n  border: 1px solid ${({ $darkMode }) => ($darkMode ? \"#444\" : \"#ddd\")};\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.06);\n  cursor: pointer;\n  transition: transform 0.2s ease;\n\n  &:hover {\n    transform: translateY(-2px);\n  }\n`;\n\nconst Title = styled.div`\n  font-weight: 700;\n  font-size: 1.05rem;\n  margin-bottom: 0.4rem;\n  color: ${({ $darkMode }) => $darkMode ? '#fff' : '#333'};\n`;\n\nconst Company = styled.div`\n  font-size: 0.9rem;\n  margin-bottom: 0.3rem;\n  color: ${({ $darkMode }) => $darkMode ? '#ccc' : '#555'};\n`;\n\nconst Info = styled.div`\n  font-size: 0.85rem;\n  color: ${({ $darkMode }) => $darkMode ? '#bbb' : '#666'};\n`;\n\nconst Dates = styled.div`\n  font-size: 0.8rem;\n  color: ${({ $darkMode }) => $darkMode ? '#888' : '#aaa'};\n  margin-top: 0.4rem;\n`;\n\nconst HeartButton = styled.button`\n  position: absolute;\n  top: 0.6rem;\n  right: 0.6rem;\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 1.1rem;\n  z-index: 2;\n  transition: transform 0.2s ease;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;","// src/components/SavedJobs.jsx\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { FaHeart, FaTrashAlt } from \"react-icons/fa\";\nimport { useSavedItems } from \"../contexts/SavedItemsContext\";\n\nexport default function SavedJobs({ darkMode, savedJobs, onJobDetail }) {\n  const { removeJob } = useSavedItems();\n\n  const handleUnsave = async (job_post_id) => {\n    const result = await removeJob(job_post_id);\n    if (!result.success) {\n      alert(\"찜 해제에 실패했습니다: \" + result.error);\n    }\n  };\n\n  const handleDetailClick = (jobId) => {\n    if (onJobDetail) {\n      onJobDetail(jobId);\n    }\n  };\n\n  return (\n    <PageContainer $darkMode={darkMode}>\n      <Header>\n        <FaHeart /> 찜한 공고 <span>{savedJobs.length}개</span>\n      </Header>\n\n      {savedJobs.length === 0 ? (\n        <Empty>찜한 공고가 없습니다.</Empty>\n      ) : (\n        <Grid>\n          {savedJobs.map((job) => (\n            <Card key={job.job_post_id} $darkMode={darkMode}>\n              <Title>{job.title}</Title>\n              <Company>{job.company_name}</Company>\n              <Info>{job.address}</Info>\n              <Dates>\n                {job.posting_date?.slice(0, 10)} ~{\" \"}\n                {job.deadline?.slice(0, 10) || \"상시\"}\n              </Dates>\n\n              {/* 내부 컴포넌트로 상세 페이지 이동 */}\n              <DetailBtn onClick={() => handleDetailClick(job.job_post_id)}>\n                상세 보기\n              </DetailBtn>\n\n              <DeleteBtn onClick={() => handleUnsave(job.job_post_id)}>\n                <FaTrashAlt />\n              </DeleteBtn>\n            </Card>\n          ))}\n        </Grid>\n      )}\n    </PageContainer>\n  );\n}\n\n/* ───────── styled-components ───────── */\nconst PageContainer = styled.div`\n  background: ${({ $darkMode }) => ($darkMode ? \"#1a1a1a\" : \"#fff\")};\n  min-height: 100vh;\n  padding: 2rem;\n`;\n\nconst Header = styled.h2`\n  font-size: 1.5rem;\n  margin-bottom: 1.6rem;\n  display: flex;\n  align-items: center;\n  gap: 0.6rem;\n\n  span {\n    font-size: 1rem;\n    color: #999;\n  }\n\n  svg {\n    color: #ff4d4d;\n  }\n`;\n\nconst Empty = styled.div`\n  text-align: center;\n  color: #888;\n  font-size: 1rem;\n`;\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));\n  gap: 1.4rem;\n`;\n\nconst Card = styled.div`\n  position: relative;\n  border-radius: 1rem;\n  padding: 1.2rem;\n  background: ${({ $darkMode }) => ($darkMode ? \"#2a2a2a\" : \"#fffdf7\")};\n  border: 1px solid ${({ $darkMode }) => ($darkMode ? \"#444\" : \"#ddd\")};\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.06);\n`;\n\nconst Title = styled.div`\n  font-weight: 700;\n  font-size: 1.05rem;\n  margin-bottom: 0.4rem;\n`;\n\nconst Company = styled.div`\n  font-size: 0.9rem;\n  margin-bottom: 0.3rem;\n  color: #555;\n`;\n\nconst Info = styled.div`\n  font-size: 0.85rem;\n  color: #666;\n`;\n\nconst Dates = styled.div`\n  font-size: 0.8rem;\n  color: #aaa;\n  margin-top: 0.4rem;\n`;\n\nconst DeleteBtn = styled.button`\n  position: absolute;\n  top: 0.6rem;\n  right: 0.6rem;\n  background: none;\n  border: none;\n  color: #ff6b6b;\n  cursor: pointer;\n  font-size: 1.1rem;\n\n  &:hover {\n    color: red;\n  }\n`;\n\nconst DetailBtn = styled.button`\n  margin-top: 0.8rem;\n  padding: 0.5rem 1rem;\n  background: #ffcc00;\n  border: none;\n  border-radius: 0.5rem;\n  font-weight: bold;\n  cursor: pointer;\n  &:hover {\n    background: #ffb300;\n  }\n`;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { FaHeart, FaTrashAlt } from \"react-icons/fa\";\nimport axios from 'axios';\n\nconst BASE_URL = process.env.REACT_APP_API_BASE_URL || \"http://192.168.101.7:8000\";\nexport default function SavedRoadmaps({ darkMode, userId, onRoadmapDetail }) {\n  const [savedRoadmaps, setSavedRoadmaps] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const fetchSavedRoadmaps = useCallback(async () => {\n    const token = localStorage.getItem(\"accessToken\");\n    if (!userId || !token) {\n      setSavedRoadmaps([]);\n      setLoading(false);\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const response = await axios.get(`${BASE_URL}/user_roadmaps/me`, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n\n      console.log(\"✅ API 응답 원본 데이터:\", response.data);\n\n      const items = Array.isArray(response.data.items) ? response.data.items : response.data;\n\n      if (Array.isArray(items)) {\n        setSavedRoadmaps(items);\n        console.log(\"✅ 최종적으로 화면에 표시될 목록:\", items);\n      } else {\n        console.error(\"API 응답 데이터가 배열 형식이 아닙니다:\", items);\n        setSavedRoadmaps([]);\n      }\n    } catch (error) {\n      console.error(\"찜한 로드맵 불러오기 실패:\", error);\n      setSavedRoadmaps([]);\n    } finally {\n      setLoading(false);\n    }\n  }, [userId]);\n\n  useEffect(() => {\n    fetchSavedRoadmaps();\n  }, [fetchSavedRoadmaps]);\n\n  const handleDelete = async (roadmapIdToDelete) => {\n    const token = localStorage.getItem(\"accessToken\");\n    if (!token) {\n      alert(\"로그인이 필요합니다.\");\n      return;\n    }\n    if (!window.confirm(\"이 로드맵을 찜 목록에서 삭제하시겠습니까?\")) {\n      return;\n    }\n    try {\n      await axios.delete(`${BASE_URL}/user_roadmaps/${roadmapIdToDelete}`, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      setSavedRoadmaps(prev => prev.filter(item => item.roadmap.id !== roadmapIdToDelete));\n      alert(\"찜이 해제되었습니다.\");\n    } catch (error) {\n      console.error(\"찜 해제 실패:\", error);\n      alert(\"찜 해제에 실패했습니다.\");\n    }\n  };\n  \n  const handleViewDetail = (roadmapId) => {\n    // navigate 대신 onRoadmapDetail 콜백 사용\n    if (onRoadmapDetail) {\n      onRoadmapDetail(roadmapId);\n    }\n  };\n\n  if (loading) return <p>찜한 로드맵을 불러오는 중...</p>;\n\n  return (\n    <div>\n      <Header $darkMode={darkMode}>\n        <FaHeart /> 찜한 로드맵 <span>{savedRoadmaps.length}개</span>\n      </Header>\n      {savedRoadmaps.length === 0 ? (\n        <Empty>찜한 로드맵이 없습니다.</Empty>\n      ) : (\n        <Grid>\n          {savedRoadmaps.map((item) => (\n            <Card key={item.id} $darkMode={darkMode}>\n              <Content onClick={() => handleViewDetail(item.roadmap.id)}>\n                <Company>{item.roadmap.company}</Company>\n                <Title>{item.roadmap.name}</Title>\n              </Content>\n              <DeleteBtn onClick={() => handleDelete(item.roadmap.id)}>\n                <FaTrashAlt />\n              </DeleteBtn>\n            </Card>\n          ))}\n        </Grid>\n      )}\n    </div>\n  );\n}\n\n/* ───── 스타일 (기존과 동일) ───── */\nconst Header = styled.h2`\n  font-size: 1.5rem; margin-bottom: 1.6rem; display: flex; align-items: center; gap: 0.6rem;\n  color: ${({ $darkMode }) => $darkMode ? '#eee' : '#333'};\n  span { font-size: 1rem; color: #999; }\n  svg { color: #ff4d4d; }\n`;\nconst Empty = styled.div`\n  text-align: center; padding: 3rem; color: #888; font-size: 1rem;\n`;\nconst Grid = styled.div`\n  display: grid; grid-template-columns: repeat(auto-fill, minmax(280px, 1fr)); gap: 1.5rem;\n`;\nconst Card = styled.div`\n  position: relative; border-radius: 1rem; padding: 1.5rem;\n  background: ${({ $darkMode }) => ($darkMode ? \"#2a2a2a\" : \"#fff\")};\n  border: 1px solid ${({ $darkMode }) => ($darkMode ? \"#444\" : \"#eee\")};\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n  display: flex; justify-content: space-between; align-items: flex-start;\n`;\nconst Content = styled.div`\n  cursor: pointer; flex: 1;\n`;\nconst Title = styled.div`\n  font-weight: 700; font-size: 1.1rem; margin-bottom: 0.4rem;\n  color: ${({ $darkMode }) => $darkMode ? '#fff' : '#000'};\n`;\nconst Company = styled.div`\n  font-size: 0.9rem; margin-bottom: 0.5rem; color: #888;\n`;\nconst DeleteBtn = styled.button`\n  background: none; border: none; color: #aaa; cursor: pointer; font-size: 1rem; padding: 0.5rem;\n  &:hover { color: #ff6b6b; }\n`;","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useLocation } from 'react-router-dom';\nimport SavedJobs from './SavedJobs';\n// ✨ 파일 이름 오타 수정: SavedRoadMaps -> SavedRoadmaps\nimport SavedRoadmaps from './SavedRoadMaps';\nimport { useSavedItems } from '../contexts/SavedItemsContext';\n\nexport default function SavedPage({ \n  darkMode, \n  onJobDetail,\n  onRoadmapDetail \n}) {\n  const location = useLocation();\n  const [activeTab, setActiveTab] = useState(location.state?.initialTab || 'jobs');\n  const { \n    savedJobs, \n    savedRoadmaps, \n    loading, \n    fetchSavedJobs, \n    fetchSavedRoadmaps \n  } = useSavedItems();\n\n  // 컴포넌트 마운트 시 저장된 데이터 불러오기\n  useEffect(() => {\n    fetchSavedJobs();\n    fetchSavedRoadmaps();\n  }, [fetchSavedJobs, fetchSavedRoadmaps]);\n\n  return (\n    <PageContainer $darkMode={darkMode}>\n      <TabHeader>\n        <TabButton active={activeTab === 'jobs'} onClick={() => setActiveTab('jobs')}>\n          찜한 공고\n        </TabButton>\n        <TabButton active={activeTab === 'roadmaps'} onClick={() => setActiveTab('roadmaps')}>\n          찜한 로드맵\n        </TabButton>\n      </TabHeader>\n      <ContentArea>\n        {activeTab === 'jobs' && (\n          <SavedJobs\n            darkMode={darkMode}\n            savedJobs={savedJobs}\n            onJobDetail={onJobDetail}\n          />\n        )}\n        {activeTab === 'roadmaps' && (\n          <SavedRoadmaps \n            darkMode={darkMode} \n            onRoadmapDetail={onRoadmapDetail}\n          />\n        )}\n      </ContentArea>\n    </PageContainer>\n  );\n}\n\n/* ───── 스타일 (기존과 동일) ───── */\nconst PageContainer = styled.div`\n  padding: 2rem;\n  background: ${({ $darkMode }) => ($darkMode ? '#121212' : '#f8f9fa')};\n  min-height: 100vh;\n`;\nconst TabHeader = styled.div`\n  display: flex;\n  gap: 1rem;\n  border-bottom: 2px solid ${({ $darkMode }) => ($darkMode ? '#444' : '#dee2e6')};\n  margin-bottom: 2rem;\n`;\nconst TabButton = styled.button`\n  padding: 0.8rem 1.2rem;\n  font-size: 1.1rem;\n  font-weight: 600;\n  border: none;\n  background: none;\n  cursor: pointer;\n  color: ${({ $darkMode, active }) => (active ? ($darkMode ? '#ffc107' : '#333') : ($darkMode ? '#888' : '#aaa'))};\n  border-bottom: 3px solid ${({ active }) => (active ? '#ffc107' : 'transparent')};\n  transition: all 0.2s ease-in-out;\n  &:hover {\n    color: ${({ $darkMode }) => ($darkMode ? '#fff' : '#000')};\n  }\n`;\nconst ContentArea = styled.div``;","/* ────────────── src/pages/MyProfile.jsx ────────────── */\nimport React, { useState, useEffect, useRef } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { FaEdit, FaSave } from \"react-icons/fa\";\nimport apiClient from \"../api/apiClient\";\nimport { trimLines } from \"../utils/stringUtils\";\n\n// 어학 점수 문자열 <-> 객체 변환 헬퍼\nconst parseLanguageScoresToObject = (scores_str) => {\n  if (!scores_str || typeof scores_str !== 'string') return null;\n  try {\n    return scores_str.split(',').reduce((acc, part) => {\n      const [key, value] = part.split(':').map(s => s.trim());\n      if (key && value) acc[key] = value;\n      return acc;\n    }, {});\n  } catch { return null; }\n};\n\nconst formatLanguageScoresToString = (scores_obj) => {\n  if (!scores_obj || typeof scores_obj !== 'object') return \"\";\n  return Object.entries(scores_obj).map(([k, v]) => `${k}: ${v}`).join(\", \");\n};\n\nexport default function MyProfile({ darkMode = false }) {\n  const defaultProfile = {\n    email: \"\", nickname: \"\", name: \"\", phone_number: \"\", degree: \"\",\n    education_status: \"\", career_type: \"신입\", career_years: \"\", university: \"\",\n    major: \"\", gpa: \"\", certificateText: \"\", experienceText: \"\",\n    desired_job: \"\", skillsText: \"\", language_score: \"\",\n  };\n\n  const [profile, setProfile] = useState(defaultProfile);\n  const [edit, setEdit] = useState({});\n  const textRefs = useRef({});\n\n  // ✨ 누락되었던 toggleEdit 함수를 다시 추가합니다.\n  const toggleEdit = (field) => setEdit((p) => ({ ...p, [field]: !p[field] }));\n\n  useEffect(() => {\n    const fetchResume = async () => {\n      const token = localStorage.getItem(\"accessToken\");\n      if (!token) {\n        setProfile(defaultProfile);\n        return;\n      }\n\n      try {\n        const { data } = await apiClient.get(\"/users/me/resume\");\n\n        console.log(\"✅ [MyProfile] 서버에서 받은 데이터:\", data);\n\n        const certificateText = (data.certificates || []).map(c => `${c.certificate_name || ''} (${c.acquired_date || ''})`).join(\"\\n\");\n        const skillsText = (data.skills || []).map(s => `${s.skill_name || ''} – ${s.proficiency || ''}`).join(\", \");\n        const experienceText = (data.experience || []).map(e => {\n            const [main, sub] = (e.type || \"\").split(\"-\");\n            const title = sub ? `[${main}-${sub}]` : `[${main}]`;\n            return `${title} ${e.name || ''} | ${e.period || ''}\\n${e.description || ''}`;\n        }).join(\"\\n\\n\");\n        \n        const workingYear = data.working_year;\n        const careerType = (workingYear === '신입' || !workingYear || workingYear === 0 || workingYear === '0') ? \"신입\" : \"경력\";\n\n        setProfile({\n          email: data.email || \"\",\n          nickname: data.nickname || \"\",\n          name: data.name || \"\",\n          phone_number: data.phone_number || \"\",\n          degree: data.degree || \"\",\n          education_status: data.education_status || \"\",\n          career_type: careerType,\n          career_years: careerType === \"경력\" ? String(workingYear) : \"\",\n          university: data.university || \"\",\n          major: data.major || \"\",\n          gpa: data.gpa || \"\",\n          desired_job: Array.isArray(data.desired_job) ? data.desired_job.join(\", \") : (data.desired_job || \"\"),\n          language_score: formatLanguageScoresToString(data.language_score),\n          certificateText,\n          experienceText,\n          skillsText,\n        });\n\n      } catch (err) {\n        console.error(\"❌ [MyProfile] 프로필 정보 불러오기 실패:\", err);\n        setProfile(defaultProfile);\n      }\n    };\n\n    fetchResume();\n  }, []);\n\n  const autoResize = (field) => {\n    const el = textRefs.current[field];\n    if (el) {\n      el.style.height = \"auto\";\n      el.style.height = `${el.scrollHeight}px`;\n    }\n  };\n\n  const onChange = (k, v) => {\n    setProfile(p => ({ ...p, [k]: v }));\n  };\n\n  const triggerSimilarityCalculation = async () => {\n    try {\n      await apiClient.post(\"/similarity/compute\");\n      console.log(\"✅ 유사도 계산 요청 성공.\");\n    } catch (err) {\n      console.error(\"❌ 유사도 계산 요청 실패:\", err);\n    }\n  };\n\n  const saveAll = async () => {\n    const token = localStorage.getItem(\"accessToken\");\n    if (!token) return alert(\"다시 로그인해주세요.\");\n\n    const certificateArr = trimLines(profile.certificateText).map(line => {\n      const match = line.match(/^(.*)\\s+\\((\\d{4}[-\\.].*)\\)$/);\n      return match ? { certificate_name: match[1].trim(), acquired_date: match[2].trim() } : { certificate_name: line.trim(), acquired_date: null };\n    });\n\n    const expArr = profile.experienceText.split(/\\n\\n+/).map(block => {\n      const [head, ...body] = block.split(\"\\n\");\n      if (!head) return null;\n      const [title, rest] = head.split(\"|\");\n      const type = title.match(/\\[(.*)\\]/)?.[1] || \"\";\n      return { type: type || \"기타\", name: rest ? rest.trim() : title.replace(/\\[.*\\]/, \"\").trim(), period: body[0] || \"\", description: body.slice(1).join(\"\\n\") || \"\" };\n    }).filter(Boolean);\n\n    const payload = {\n      university: profile.university || null,\n      major: profile.major || null,\n      gpa: profile.gpa ? Number(profile.gpa) : null,\n      education_status: profile.education_status || null,\n      degree: profile.degree || null,\n      desired_job: profile.desired_job.split(',').map(s => s.trim()).filter(Boolean),\n      working_year: profile.career_type === \"경력\" ? String(profile.career_years || \"\") : \"신입\",\n      language_score: parseLanguageScoresToObject(profile.language_score),\n      skills: null,\n      certificates: certificateArr,\n      experience: expArr,\n    };\n\n    try {\n      await apiClient.put(\"/users/me/resume\", payload);\n      alert(\"✅ 저장되었습니다!\");\n      setEdit({});\n      await triggerSimilarityCalculation();\n    } catch (err) {\n      console.error(\"❌ 저장 실패:\", err);\n      alert(\"저장 실패: \" + (err.response?.data?.detail || err.message));\n    }\n  };\n\n  const Field = ({ label, keyName, type = \"text\", placeholder = \"\" }) => (\n    <FieldRow>\n      <Label>{label}</Label>\n      {edit[keyName] ? (\n        <Input as={type === \"textarea\" ? \"textarea\" : \"input\"} ref={el => (textRefs.current[keyName] = el)}\n          value={profile[keyName] || ''} placeholder={placeholder} rows={type === \"textarea\" ? 3 : undefined}\n          onInput={() => autoResize(keyName)} onChange={e => onChange(keyName, e.target.value)} autoFocus\n        />\n      ) : (\n        <Value>{profile[keyName] || \"-\"}</Value>\n      )}\n      <IconBtn onClick={() => toggleEdit(keyName)}>{edit[keyName] ? <FaSave /> : <FaEdit />}</IconBtn>\n    </FieldRow>\n  );\n\n  return (\n    <Wrapper>\n      <Card $darkMode={darkMode}>\n        <FormArea>\n          <Field label=\"이메일\" keyName=\"email\" />\n          <Field label=\"닉네임\" keyName=\"nickname\" />\n          <Field label=\"이름\" keyName=\"name\" />\n          <Field label=\"전화번호\" keyName=\"phone_number\" />\n          <Field label=\"최종 학력\" keyName=\"degree\" />\n          <Field label=\"학적 상태\" keyName=\"education_status\" />\n          <Field label=\"구분\" keyName=\"career_type\" />\n          {profile.career_type === \"경력\" && <Field label=\"경력 년차\" keyName=\"career_years\" />}\n          <Field label=\"학교명\" keyName=\"university\" />\n          <Field label=\"전공\" keyName=\"major\" />\n          <Field label=\"학점\" keyName=\"gpa\" placeholder=\"4.5 만점 기준\" />\n          <Field label=\"자격증\" keyName=\"certificateText\" type=\"textarea\" placeholder=\"자격증명 (취득일자) 형식으로 입력하세요.\" />\n          <Field label=\"경험\" keyName=\"experienceText\" type=\"textarea\" placeholder=\"[경험 종류] 경험명 | 기간&#10;주요 내용 순으로 입력하세요.\" />\n          <Field label=\"관심 직무\" keyName=\"desired_job\" type=\"textarea\" placeholder=\"콤마(,)로 구분하여 여러 개 입력 가능합니다.\" />\n          <Field label=\"기술 스택\" keyName=\"skillsText\" type=\"textarea\" placeholder=\"보유 기술 스택을 입력하세요.\" />\n          <Field label=\"어학 점수\" keyName=\"language_score\" type=\"textarea\" placeholder=\"시험명:점수 형식으로 입력하세요. (예: TOEIC:950)\" />\n        </FormArea>\n        <SaveAllBtn onClick={saveAll}>전체 저장</SaveAllBtn>\n      </Card>\n    </Wrapper>\n  );\n}\n\n/* 💅 styled-components (기존과 동일) */\nconst Wrapper = styled.div`\n  display: flex; justifyContent: center; padding: 2rem 0 6rem;\n`;\nconst Card = styled.div`\n  width: 100%; max-width: 880px;\n  background: ${({ $darkMode }) => ($darkMode ? \"#2f2f2f\" : \"#eeeae2\")};\n  color: ${({ $darkMode }) => ($darkMode ? \"#fff\" : \"#3c2f12\")};\n  border-radius: 1.5rem; padding: 3rem;\n`;\nconst FormArea = styled.div`\n  display: flex; flex-direction: column; gap: 0.9rem;\n`;\nconst FieldRow = styled.div`\n  display: flex; align-items: flex-start; gap: 0.8rem;\n`;\nconst Label = styled.div`\n  width: 140px; font-weight: 700; padding-top: 0.4rem; flex-shrink: 0;\n`;\nconst sharedBox = css`\n  flex: 1; border: none; border-radius: 0.5rem;\n  padding: 0.7rem 0.9rem; font-size: 0.95rem;\n  background: #fff; color: #333; line-height: 1.45;\n  width: 100%;\n`;\nconst Value = styled.div`\n  ${sharedBox}; background: #fafafa; white-space: pre-wrap; min-height: 38px;\n`;\nconst Input = styled.textarea.attrs(({ as }) => ({ as }))`\n  ${sharedBox};\n  ${({ as }) => as === \"textarea\" && css`resize: none; overflow-y: hidden; min-height: 38px;`}\n`;\nconst IconBtn = styled.button`\n  border: none; background: none; font-size: 1.15rem; cursor: pointer;\n  padding: 0.4rem; color: #ffbb00;\n  &:hover { opacity: 0.8; }\n`;\nconst SaveAllBtn = styled.button`\n  display: block; margin: 2rem auto 0;\n  background: #ffc107; color: #000;\n  font-weight: 700; border: none; border-radius: 0.8rem;\n  padding: 0.95rem 2.6rem; font-size: 1rem; cursor: pointer;\n  &:hover { background: #ffb300; }\n`;","/**\n * 문자열 관련 유틸리티 함수들\n */\n\n// 여러 줄 문자열을 정리 (빈 줄 제거, 앞뒤 공백 제거)\nexport const trimLines = (str = \"\") => \n  str.split(/\\n|\\r/).map((l) => l.trim()).filter(Boolean);\n\n// 문자열을 안전하게 자르기 (최대 길이 제한)\nexport const truncateString = (str, maxLength = 100) => {\n  if (!str || str.length <= maxLength) return str;\n  return str.substring(0, maxLength) + '...';\n};\n\n// 문자열에서 특정 패턴 추출\nexport const extractPattern = (str, pattern) => {\n  const match = str.match(pattern);\n  return match ? match[1] : null;\n};\n\n// 문자열을 카멜케이스로 변환\nexport const toCamelCase = (str) => {\n  return str.replace(/-([a-z])/g, (g) => g[1].toUpperCase());\n};\n\n// 문자열을 파스칼케이스로 변환\nexport const toPascalCase = (str) => {\n  const camelCase = toCamelCase(str);\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n};\n\n// 문자열을 스네이크케이스로 변환\nexport const toSnakeCase = (str) => {\n  return str.replace(/[A-Z]/g, letter => `_${letter.toLowerCase()}`);\n};\n\n// 문자열을 케밥케이스로 변환\nexport const toKebabCase = (str) => {\n  return str.replace(/[A-Z]/g, letter => `-${letter.toLowerCase()}`);\n};\n\n// 문자열에서 HTML 태그 제거\nexport const stripHtmlTags = (str) => {\n  return str.replace(/<[^>]*>/g, '');\n};\n\n// 문자열에서 특수문자 제거\nexport const removeSpecialChars = (str) => {\n  return str.replace(/[^a-zA-Z0-9가-힣\\s]/g, '');\n};\n\n// 문자열을 URL 안전하게 만들기\nexport const slugify = (str) => {\n  return str\n    .toLowerCase()\n    .replace(/[^a-z0-9가-힣\\s-]/g, '')\n    .replace(/\\s+/g, '-')\n    .replace(/-+/g, '-')\n    .trim('-');\n};\n\n// 문자열이 이메일 형식인지 확인\nexport const isValidEmail = (email) => {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n};\n\n// 문자열이 전화번호 형식인지 확인\nexport const isValidPhoneNumber = (phone) => {\n  const phoneRegex = /^[0-9-+\\s()]+$/;\n  return phoneRegex.test(phone);\n};\n\n// 문자열을 숫자로 안전하게 변환\nexport const safeParseInt = (str, defaultValue = 0) => {\n  const parsed = parseInt(str, 10);\n  return isNaN(parsed) ? defaultValue : parsed;\n};\n\n// 문자열을 실수로 안전하게 변환\nexport const safeParseFloat = (str, defaultValue = 0) => {\n  const parsed = parseFloat(str);\n  return isNaN(parsed) ? defaultValue : parsed;\n}; ","// ───────── src/App.js ─────────\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  useParams,\n  Navigate,\n} from \"react-router-dom\";\nimport Register from \"./components/Register\";\nimport RegisterNext from \"./pages/RegisterNext\";\nimport Logout from \"./components/logout\";\nimport Login from \"./components/login\";\nimport Aijob from \"./components/aijob\";\nimport NaverCallback from \"./components/navercallback\";\n\nimport ResumeSelect from \"./components/ResumeSelect\";\nimport AiJobRecommendation from \"./components/AiJobRecommendation\";\nimport CareerPlanFlow from \"./components/CareerPlanFlow\"; \nimport CareerRoadmapDetail from \"./components/CareerRoadmapDetail\"; \n\n\n// OvercomeDetail은 CareerPlanFlow로 대체되므로 주석 처리하거나 제거할 수 있습니다.\n// import OvercomeDetail from \"./components/OvercomeDetail\"; \n\nimport GapDetail from \"./components/GapDetail\";\nimport TrendDetail from \"./components/TrendDetail\";\nimport SavedJobDetail from \"./components/SavedJobDetail\";\n\n// 새로 추가된 컴포넌트\nimport ChatSessionsList from \"./components/ChatSessionsList\";\nimport ChatPage from \"./components/ChatPage\";\nimport MainContent from \"./components/maincontent\";\nimport Sidebar from \"./components/Sidebar\";\n\nimport RecommendationReason from \"./components/RecommendationReason\"; // RecommendationReason 컴포넌트 임포트\nimport { RecommendationProvider } from \"./components/RecommendationContext\"; // Provider 임포트\nimport { AuthProvider } from \"./contexts/AuthContext\";\nimport { SavedItemsProvider } from \"./contexts/SavedItemsContext\";\n\n// 추가 컴포넌트들\nimport DashboardPage from \"./components/maincontent\";\nimport CareerRoadmapMain from \"./components/CareerRoadmapMain\";\nimport TodoList from \"./components/TodoList\";\nimport JobCardPreview from \"./components/JobCardPreview\";\nimport SavedPage from \"./components/SavedPage\";\nimport MyProfile from \"./components/MyProfile\";\n\n\n// 로드맵 흐름을 관리할 새로운 컨테이너 컴포넌트를 임포트합니다.\n\n\n\n// 세션 아이디를 URL 파라미터로 받아서 ChatPage에 넘겨주는 래퍼\nfunction ChatPageWrapper() {\n  const { sessionId } = useParams();\n  const token = localStorage.getItem(\"accessToken\");\n  const userId = localStorage.getItem(\"userId\"); // 혹은 다른 저장소에서 가져오기\n\n  // 만약 세션 아이디나 토큰이 없으면 홈으로 리다이렉트\n  if (!sessionId || !token || !userId) {\n    return <Navigate to=\"/\" replace />;\n  }\n\n  return (\n    <ChatPage\n      sessionId={sessionId}\n      userId={userId}\n      token={token}\n    />\n  );\n}\n\nfunction Layout() {\n  const [sidebarCollapsed, setSidebarCollapsed] = React.useState(false);\n  const darkMode = false;\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <Sidebar \n        collapsed={sidebarCollapsed}\n        setCollapsed={setSidebarCollapsed}\n        darkMode={darkMode}\n      />\n      <MainContent \n        darkMode={darkMode}\n        toggleTheme={() => {}} // 필요시 구현\n      />\n    </div>\n  );\n}\n\nexport default function App() {\n  // darkMode 상태가 App.js에 정의되어 있지 않아 임시로 false를 사용합니다.\n  const darkMode = false;\n\n  return (\n    <AuthProvider>\n      <SavedItemsProvider>\n        <RecommendationProvider>\n          <Router>\n            <Routes>\n        {/* 기존 라우트들 */}\n        <Route path=\"/register\" element={<Register />} />\n        <Route path=\"/resumeselect\" element={<ResumeSelect />} />\n        <Route path=\"/registernext\" element={<RegisterNext />} />\n        <Route path=\"/login\" element={<Login />} />\n        <Route path=\"/logout\" element={<Logout />} />\n        <Route path=\"/aijob\" element={<Aijob />} />\n        <Route path=\"/navercallback\" element={<NaverCallback />} />\n        <Route path=\"/aijobrecommendation\" element={<AiJobRecommendation />} />\n\n        {/* 채팅 세션 목록(대화 이력) */}\n        <Route\n          path=\"/chathistory\"\n          element={\n            <ChatSessionsList\n              userId={localStorage.getItem(\"userId\")}\n              token={localStorage.getItem(\"accessToken\")}\n              darkMode={darkMode}\n              onSelect={(id) => {\n                // 세션 선택 시 해당 URL로 네비게이트\n                window.location.href = `/chat/${id}`;\n              }}\n            />\n          }\n        />\n\n        {/* 선택된 세션의 실제 채팅 화면 */}\n        <Route path=\"/chat/:sessionId\" element={<ChatPageWrapper />} />\n\n        {/* ───────── 수정된 부분 ───────── */}\n        {/* 기존 OvercomeDetail 대신, 카테고리/목록/상세를 관리하는 CareerPlanFlow로 교체 */}\n        <Route\n          path=\"/aijob/career-summary/overcomedetail\"\n          element={<CareerPlanFlow darkMode={darkMode} />}\n        />\n        {/* ──────────────────────────── */}\n\n        <Route\n          path=\"/aijob/career-summary/gapdetail\"\n          element={<GapDetail />}\n        />\n        <Route\n          path=\"/aijob/career-summary/trenddetail\"\n          element={<TrendDetail />}\n        />\n\n        <Route path=\"/job/:id\" element={<SavedJobDetail />} />\n\n        {/* ▼▼▼ 여기에 추천 이유 페이지를 위한 라우트를 추가합니다 ▼▼▼ */}\n        <Route \n          path=\"/recommendation-reason/:jobId\" \n          element={<RecommendationReason darkMode={darkMode} />} \n        />\n        {/* ▲▲▲ 수정 완료 ▲▲▲ */}\n\n\n        <Route path=\"/roadmap/:roadmapId\" element={<CareerRoadmapDetail />} />\n        {/* ▲▲▲ 여기까지 추가 ▲▲▲ */}\n\n        {/* 홈(/) 경로에 Sidebar + MainContent 함께 렌더링 */}\n        <Route path=\"/\" element={<Layout />}>\n          <Route index element={<DashboardPage />} />\n          <Route path=\"ai-jobs\" element={<AiJobRecommendation />} />\n          <Route path=\"career-summary\" element={<CareerRoadmapMain />} />\n          <Route path=\"career-trend\" element={<TrendDetail />} />\n          <Route path=\"career-gap\" element={<GapDetail />} />\n          <Route path=\"career-plan\" element={<CareerPlanFlow />} />\n          <Route path=\"todo\" element={<TodoList />} />\n          <Route path=\"search\" element={<JobCardPreview />} />\n          <Route path=\"saved\" element={<SavedPage />} />\n          <Route path=\"profile\" element={<MyProfile />} />\n          <Route path=\"chat\" element={<ChatPage />} />\n          <Route path=\"history\" element={<ChatSessionsList />} />\n          {/* 기타 필요한 라우트 추가 */}\n        </Route>\n        {/* 그 외 없는 경로는 메인으로 */}\n        <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n      </Routes>\n    </Router>\n          </RecommendationProvider>\n        </SavedItemsProvider>\n      </AuthProvider>\n  );\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}